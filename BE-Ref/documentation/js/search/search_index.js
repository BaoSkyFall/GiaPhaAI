var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.215,1,2.983]],["body/controllers/AppController.html",[0,1.909,1,4.687,2,1.501,3,0.151,4,0.134,5,0.101,6,4.425,7,0.545,8,1.788,9,6.515,10,1.195,11,0.013,12,0.691,13,5.068,14,1.406,15,0.324,16,2.503,17,4.001,18,4.425,19,3.685,20,0.8,21,4.507,22,4.425,23,4.034,24,2.744,25,4.001,26,3.042,27,3.432,28,5.068,29,4.034,30,5.068,31,3.432,32,4.425,33,2.618,34,5.068,35,0.151,36,0.234,37,2.049,38,3.22,39,2.049,40,1.909,41,2.339,42,6.446,43,1.676,44,6.446,45,5.068,46,5.068,47,0.01,48,0.01]],["title/modules/AppModule.html",[49,1.033,50,2.983]],["body/modules/AppModule.html",[1,4.285,2,1.495,3,0.105,4,0.094,5,0.071,11,0.013,15,0.331,20,0.557,21,4.499,22,3.083,23,3.66,24,1.912,31,3.419,32,3.083,35,0.105,36,0.163,43,0.918,47,0.007,48,0.007,49,1.483,50,6.11,51,1.482,52,1.482,53,1.604,54,1.604,55,1.482,56,2.676,57,1.604,58,3.083,59,3.083,60,3.083,61,4.793,62,4.793,63,4.793,64,4.793,65,4.793,66,4.793,67,4.793,68,4.793,69,4.499,70,4.793,71,4.499,72,2.293,73,1.604,74,1.604,75,3.531,76,2.789,77,3.531,78,1.744,79,0.918,80,4.408,81,3.531,82,3.531,83,5.049,84,2.391,85,3.531,86,1.671,87,1.237,88,1.671,89,0.889,90,3.531,91,3.531,92,3.531,93,3.531,94,3.531,95,3.531,96,3.531,97,3.531,98,3.531,99,3.531,100,2.788,101,3.531,102,2.788,103,3.531,104,3.531,105,1.237,106,3.531,107,2.788,108,1.427,109,3.531,110,3.531,111,3.531,112,5.049,113,3.531,114,2.788,115,3.531,116,3.531,117,3.531,118,3.531,119,1.482,120,2.009,121,3.531,122,3.531,123,3.083]],["title/injectables/AppService.html",[21,2.608,124,0.795]],["body/injectables/AppService.html",[3,0.18,4,0.16,5,0.12,7,0.647,8,1.988,9,6.918,11,0.012,12,0.822,14,1.67,15,0.241,17,4.754,20,0.95,21,4.557,35,0.18,36,0.277,43,1.565,47,0.011,48,0.011,124,1.389,125,2.184,126,5.257,127,6.021,128,1.015,129,6.021,130,6.021]],["title/controllers/AuthController.html",[0,1.215,131,2.983]],["body/controllers/AuthController.html",[0,1,2,1,3,0.101,4,0.09,5,0.068,7,0.363,8,1.356,10,1.577,11,0.013,12,0.912,14,1.855,15,0.305,16,1.668,17,2.666,18,2.949,19,4.581,20,0.533,27,2.287,29,3.271,33,3.454,35,0.101,36,0.156,37,1.365,38,2.221,40,1.448,43,1.812,47,0.007,48,0.007,102,2.666,105,2.014,108,3.231,131,3.555,132,2.949,133,1.668,134,2.949,135,4.89,136,5.748,137,5.748,138,5.748,139,4.89,140,3.377,141,2.208,142,4.89,143,3.377,144,2.047,145,0.688,146,0.881,147,1.916,148,1.812,149,3.303,150,3.377,151,5.259,152,6.971,153,3.377,154,3.377,155,3.377,156,6.086,157,3.377,158,3.377,159,3.377,160,3.377,161,4.269,162,3.377,163,3.377,164,3.377,165,3.444,166,4.269,167,1.713,168,3.377,169,3.377,170,1.829,171,6.301,172,1.598,173,1.534,174,3.377,175,2.666,176,2.935,177,2.027,178,2.287,179,2.027,180,1.418,181,2.526,182,2.456,183,3.377,184,4.269,185,1.745,186,1.418,187,3.377,188,3.377,189,2.666,190,2.949,191,4.89,192,3.377,193,3.377,194,5.748,195,4.89,196,2.949,197,3.377,198,2.456,199,3.377,200,3.377,201,2.949,202,3.377,203,3.377,204,3.377,205,2.949,206,3.377,207,3.377,208,3.377,209,3.377,210,3.377,211,3.377,212,3.377,213,1.534,214,3.377]],["title/modules/AuthModule.html",[49,1.033,61,2.778]],["body/modules/AuthModule.html",[2,1.698,3,0.126,4,0.112,5,0.085,11,0.013,15,0.33,20,0.669,23,3.961,24,2.295,26,2.544,29,4.62,35,0.126,36,0.195,47,0.009,48,0.009,49,1.635,51,1.78,52,1.78,53,1.925,54,1.925,55,1.78,56,2.951,57,2.951,61,5.591,69,4.765,71,4.765,72,2.604,73,1.925,74,1.925,76,3.075,78,2.094,79,1.102,80,5.006,107,3.347,108,1.714,114,3.347,131,4.724,175,3.347,181,2.19,182,3.082,215,3.701,216,3.701,217,3.701,218,4.239,219,5.076,220,5.076,221,4.239,222,4.239,223,5.733,224,4.239,225,4.239,226,3.701,227,3.347,228,3.082,229,3.701,230,4.239,231,4.527,232,4.239,233,4.239,234,1.255,235,2.544,236,2.695,237,4.239,238,3.347,239,3.701,240,4.239,241,3.701,242,4.239,243,3.701]],["title/injectables/AuthService.html",[29,2.335,124,0.795]],["body/injectables/AuthService.html",[3,0.077,4,0.069,5,0.052,7,0.279,8,1.115,11,0.013,12,0.899,14,1.534,15,0.286,20,0.41,23,3.75,24,1.407,29,2.287,35,0.077,36,0.12,37,1.625,38,2.511,40,2.297,43,1.77,47,0.006,48,0.006,105,1.408,108,3.021,124,0.779,125,0.943,128,1.029,141,2.309,144,1.83,145,0.778,146,0.756,147,1.713,148,1.889,149,2.427,151,4.851,161,4.29,165,2.953,167,1.408,177,1.56,178,1.76,179,1.56,180,1.091,181,2.856,182,1.89,189,3.879,190,5.518,196,5.219,198,5.494,205,3.509,213,2.993,226,5.753,227,2.052,231,3.879,234,1.952,238,3.173,241,2.269,243,2.269,244,2.269,245,1.011,246,4.913,247,3.509,248,4.019,249,2.599,250,3.422,251,2.599,252,4.019,253,2.599,254,4.019,255,2.599,256,4.019,257,2.599,258,4.019,259,4.827,260,2.599,261,1.56,262,3.509,263,2.722,264,2.076,265,2.599,266,2.599,267,3.572,268,2.052,269,2.269,270,2.269,271,2.052,272,2.599,273,2.922,274,3.509,275,2.599,276,2.599,277,2.922,278,4.019,279,1.876,280,3.509,281,3.509,282,4.019,283,2.599,284,2.856,285,2.599,286,1.658,287,4.29,288,4.019,289,4.019,290,4.019,291,4.019,292,4.019,293,4.913,294,4.019,295,4.019,296,4.019,297,4.019,298,4.019,299,4.913,300,2.269,301,2.599,302,2.599,303,4.019,304,4.019,305,2.599,306,2.599,307,2.599,308,0.977,309,2.599,310,2.599,311,2.599,312,2.412,313,3.509,314,4.019,315,4.019,316,2.599,317,1.407]],["title/controllers/CompaniesController.html",[0,1.215,318,2.983]],["body/controllers/CompaniesController.html",[0,1.105,2,1.105,3,0.111,4,0.099,5,0.075,7,0.401,8,1.456,10,1.639,11,0.013,12,0.948,14,1.927,15,0.296,16,3,20,0.589,33,3.138,35,0.111,36,0.172,39,1.508,43,1.806,47,0.008,48,0.008,87,1.307,119,2.767,128,1.165,133,1.843,141,2.728,144,2.126,145,0.715,146,0.878,147,1.991,148,2.12,170,2.842,172,1.765,173,1.694,180,1.566,185,1.927,186,1.566,308,2.283,318,3.817,319,3.257,320,3.257,321,1.456,322,2.456,323,2.122,324,2.122,325,3.257,326,4.581,327,3.73,328,1.628,329,2.877,330,3.73,331,5.25,332,1.661,333,3.817,334,3.73,335,2.291,336,1.927,337,3.73,338,3.73,339,1.999,340,1.508,341,2.987,342,3.73,343,2.239,344,5.118,345,3.337,346,3.73,347,2.02,348,2.123,349,2.204,350,3.861,351,3.257,352,1.566,353,4.145,354,1.566,355,3.73,356,3.73,357,1.694,358,2.526,359,3.73,360,2.712,361,2.239,362,2.239,363,3.73,364,2.123,365,2.123,366,3.73,367,2.526,368,3.73,369,2.123,370,3.73]],["title/modules/CompaniesModule.html",[49,1.033,62,2.778]],["body/modules/CompaniesModule.html",[2,1.992,3,0.162,4,0.144,5,0.108,11,0.013,15,0.315,20,0.856,35,0.162,36,0.25,47,0.01,48,0.01,49,1.84,51,2.276,52,2.276,53,2.462,54,2.462,55,2.276,56,3.321,57,2.462,62,5.425,72,3.054,73,2.462,74,2.462,76,2.566,78,2.678,79,1.409,145,0.558,318,5.316,332,1.716,350,5.092,351,4.733,371,4.733,372,4.733,373,5.421,374,5.421,375,4.89,376,4.733,377,2.935,378,4.733,379,2.113]],["title/injectables/CompaniesService.html",[124,0.795,350,2.608]],["body/injectables/CompaniesService.html",[3,0.094,4,0.083,5,0.063,7,0.338,8,1.287,11,0.013,12,0.927,14,1.802,15,0.295,20,0.496,35,0.094,36,0.214,37,1.876,38,1.428,40,2.082,43,1.688,47,0.007,48,0.007,79,0.817,86,1.488,87,1.932,88,1.488,89,0.791,108,2.748,119,2.952,120,1.789,124,0.899,125,1.14,128,1.043,141,2.626,144,2.081,145,0.7,146,0.859,147,1.948,148,1.915,149,2.292,180,1.32,213,2.505,279,1.978,286,1.388,308,1.744,317,2.512,321,1.287,322,1.876,323,1.876,324,1.876,325,4.051,326,4.321,328,2.025,329,2.407,332,0.995,335,2.407,339,1.53,340,1.876,344,4.887,349,1.32,350,2.95,352,1.32,353,3.663,354,1.32,376,2.744,380,2.744,381,3.143,382,3.146,383,3.143,384,4.64,385,3.143,386,2.301,387,3.143,388,2.95,389,3.143,390,3.143,391,3.142,392,3.143,393,1.624,394,2.285,395,1.887,396,1.702,397,1.789,398,3.143,399,1.225,400,3.143,401,3.143,402,1.372,403,3.31,404,3.31,405,1.887,406,1.887,407,1.887,408,2.785,409,1.887,410,1.887,411,2.785,412,1.887,413,1.702,414,2.785,415,2.785,416,3.143,417,2.785,418,1.887,419,1.887,420,2.785,421,2.785,422,2.785,423,2.64,424,1.182,425,2.785,426,3.143,427,1.887,428,1.887,429,1.887,430,1.887,431,1.887,432,1.887,433,1.887,434,1.887,435,1.887,436,1.887,437,1.887,438,3.143,439,4.64,440,1.101,441,1.372,442,3.143]],["title/classes/Company.html",[36,0.189,332,1.298]],["body/classes/Company.html",[3,0.12,4,0.107,5,0.081,7,0.434,10,1.884,11,0.013,12,1.09,15,0.222,35,0.189,36,0.186,40,1.195,47,0.008,48,0.008,79,1.049,89,1.395,105,1.414,128,1.131,145,0.652,146,1.05,245,1.395,279,1.701,286,1.594,332,1.754,375,2.933,379,2.16,394,2.933,402,2.764,424,2.381,440,2.219,441,2.764,443,0.983,444,2.933,445,2.764,446,3.272,447,3.429,448,2.764,449,3.429,450,4.289,451,5.015,452,4.035,453,3.354,454,4.035,455,3.429,456,3.801,457,3.999,458,4.035,459,4.035,460,4.035,461,4.035,462,3.155,463,4.035,464,4.035,465,4.035,466,4.035,467,4.035,468,2.421,469,3.155,470,2.421,471,2.468,472,3.523]],["title/classes/Company-1.html",[36,0.158,332,1.083,413,1.853]],["body/classes/Company-1.html",[3,0.093,4,0.083,5,0.062,7,0.335,10,1.088,11,0.013,12,0.749,15,0.22,35,0.164,36,0.298,41,2.965,47,0.007,48,0.007,89,1.16,105,1.092,128,1.117,145,0.757,146,0.857,167,1.615,234,1.365,245,1.16,264,2.382,279,1.473,286,1.381,332,2.367,339,1.279,386,1.858,399,1.214,443,0.759,445,1.36,448,2.012,450,3.716,453,2.754,471,1.797,473,4.787,474,2.266,475,2.182,476,3.431,477,3.418,478,3.523,479,3.116,480,3.116,481,3.116,482,2.767,483,3.716,484,2.277,485,3.373,486,2.971,487,2.931,488,2.971,489,3.716,490,1.61,491,1.87,492,3.123,493,3.343,494,3.343,495,3.64,496,2.266,497,2.46,498,2.721,499,3.352,500,3.64,501,3.352,502,2.721,503,3.122,504,3.64,505,2.835,506,3.122,507,2.721,508,3.64,509,2.721,510,2.012,511,2.182,512,1.475]],["title/classes/Company-2.html",[36,0.158,332,1.083,513,2.702]],["body/classes/Company-2.html",[3,0.107,4,0.095,5,0.072,7,0.386,10,1.205,11,0.013,12,0.697,15,0.259,35,0.193,36,0.328,39,2.065,41,2.943,47,0.008,48,0.008,89,1.286,128,1.135,145,0.784,146,0.819,165,1.773,176,2.154,177,3.569,186,1.507,234,1.919,245,1.286,261,2.154,279,1.597,286,1.843,332,2.252,339,1.65,386,2.013,399,1.399,443,0.874,445,2.229,448,2.229,471,2.317,475,2.417,476,3.423,477,3.387,478,3.52,484,2.938,485,3.406,486,2.766,487,3.781,488,2.766,490,1.854,493,3.072,494,3.072,505,2.639,510,3.105,511,3.066,512,2.417,514,2.282,515,3.589,516,3.589,517,3.459,518,4.324,519,2.609,520,2.042,521,3.714,522,2.609,523,2.609]],["title/classes/CreateCompanyDto.html",[36,0.189,326,2.608]],["body/classes/CreateCompanyDto.html",[3,0.148,4,0.132,5,0.1,7,0.535,10,1.658,11,0.013,12,1.011,15,0.199,35,0.148,36,0.294,41,2.55,47,0.009,48,0.009,128,1.143,145,0.724,146,0.937,245,1.603,326,4.05,399,1.939,443,1.212,445,3.067,448,3.067,450,4.76,475,3.326,476,3.29,477,3.29,478,3.42,484,2.458,485,3.111,524,6.689,525,3.928,526,5.563,527,4.975,528,5.563,529,5.03,530,4.975,531,4.975,532,4.632,533,4.975]],["title/classes/CreateFileDto.html",[36,0.189,534,2.608]],["body/classes/CreateFileDto.html",[3,0.193,4,0.171,5,0.129,11,0.012,35,0.193,36,0.298,47,0.011,48,0.011,443,1.576,534,4.753,535,5.647,536,5.107]],["title/classes/CreateJobDto.html",[36,0.189,491,2.462]],["body/classes/CreateJobDto.html",[3,0.078,4,0.069,5,0.052,7,0.28,10,1.65,11,0.013,12,0.954,15,0.197,35,0.147,36,0.276,41,2.91,47,0.006,48,0.006,89,1.014,105,1.412,128,1.114,145,0.72,146,0.933,167,1.412,234,1.193,245,1.014,264,2.082,279,0.7,286,1.239,332,2.366,339,0.724,386,1.875,399,1.016,443,0.636,445,1.138,448,2.613,450,1.767,453,3.095,471,1.016,473,5.641,474,1.897,475,3.31,476,3.451,477,3.443,478,3.485,482,2.419,483,3.335,484,1.991,485,3.281,486,2.666,487,2.562,488,2.666,489,3.335,490,1.348,491,2.419,492,3.755,493,3.613,494,3.409,495,4.373,496,1.897,497,2.059,498,3.519,499,4.353,500,4.727,501,4.353,502,3.519,503,3.751,504,4.727,505,3.093,506,2.729,507,3.519,508,4.727,509,2.277,510,1.759,511,1.907,512,1.235,537,2.277,538,2.608,539,2.608,540,3.519,541,3.519,542,2.608,543,2.608,544,2.608,545,2.608,546,2.608,547,2.059,548,2.608,549,2.608,550,2.608]],["title/classes/CreatePermissionDto.html",[36,0.189,551,2.608]],["body/classes/CreatePermissionDto.html",[3,0.143,4,0.127,5,0.096,7,0.515,10,1.723,11,0.013,12,0.997,15,0.192,35,0.143,36,0.286,41,2.65,47,0.009,48,0.009,49,1.905,128,1.134,145,0.711,146,0.923,245,1.565,396,3.366,399,1.866,443,1.167,475,3.457,476,3.361,477,3.361,478,3.494,485,3.178,532,4.52,551,3.952,552,6.609,553,3.781,554,4.388,555,5.127,556,3.731,557,4.789,558,4.789,559,4.789,560,5.428,561,4.789]],["title/classes/CreateResumeDto.html",[36,0.189,562,2.335]],["body/classes/CreateResumeDto.html",[3,0.092,4,0.082,5,0.062,7,0.333,10,1.426,11,0.013,12,0.955,15,0.219,35,0.18,36,0.312,41,2.879,47,0.007,48,0.007,89,1.155,128,1.142,145,0.473,146,0.958,148,0.805,167,1.086,234,1.36,245,1.155,264,1.601,279,0.832,286,1.809,332,2.14,339,1.791,386,1.554,399,1.207,424,2.056,440,2.119,443,0.755,445,1.352,453,1.407,471,1.207,475,2.588,476,3.387,477,3.352,478,3.484,482,1.86,483,3.109,484,2.701,485,3.352,486,1.678,488,2.961,489,3.109,490,1.601,493,2.372,494,2.372,503,2.098,505,2.372,506,2.098,510,2.003,511,2.173,512,1.466,562,2.613,563,5.225,564,2.098,565,3.704,566,4.2,567,3.704,568,4.058,569,4.694,570,3.704,571,3.099,572,3.099,573,3.099,574,3.099,575,2.085,576,3.099,577,3.099,578,3.099,579,3.099,580,2.446]],["title/classes/CreateRoleDto.html",[36,0.189,581,2.608]],["body/classes/CreateRoleDto.html",[3,0.126,4,0.112,5,0.085,7,0.456,10,1.642,11,0.013,12,0.95,15,0.229,35,0.126,36,0.264,41,2.828,47,0.009,48,0.009,89,1.443,105,2.009,128,1.061,145,0.669,146,0.88,234,1.698,245,1.443,284,3.959,399,1.652,443,1.033,448,2.835,462,3.263,471,2.234,475,3.294,476,3.353,477,3.272,478,3.271,482,3.441,485,3.053,495,6.154,497,3.347,517,3.883,528,5.006,529,4.527,532,4.169,547,3.347,581,3.645,582,6.349,583,3.347,584,4.724,585,4.239,586,6.96,587,4.239,588,6.544,589,5.006,590,5.733,591,4.239,592,4.239,593,5.733,594,4.239,595,5.733,596,2.502,597,5.733,598,5.733,599,5.733,600,4.239,601,5.733,602,3.701]],["title/classes/CreateSubscriberDto.html",[36,0.189,603,2.608]],["body/classes/CreateSubscriberDto.html",[3,0.142,4,0.126,5,0.095,7,0.512,10,1.625,11,0.013,12,0.94,15,0.191,35,0.142,36,0.286,41,2.743,47,0.009,48,0.009,128,1.097,145,0.709,146,0.871,245,1.56,286,1.986,399,1.858,443,1.162,475,3.26,476,3.424,477,3.253,478,3.183,482,3.72,484,3.062,485,3.062,492,3.92,493,3.202,494,3.202,496,4.507,505,3.202,532,4.507,547,3.764,588,5.412,602,5.412,603,3.941,604,5.758,605,3.764,606,4.768,607,4.768,608,4.768,609,7.293,610,7.293,611,4.768]],["title/classes/CreateUserDto.html",[36,0.189,165,2.027]],["body/classes/CreateUserDto.html",[3,0.095,4,0.085,5,0.064,7,0.344,10,1.543,11,0.013,12,0.965,15,0.246,35,0.183,36,0.315,39,1.9,41,2.91,47,0.007,48,0.007,89,1.183,128,1.142,145,0.762,146,0.936,165,2.322,176,1.92,177,4.353,186,1.343,234,2.094,245,1.183,261,1.92,279,0.859,286,1.92,332,2.07,339,1.545,386,2.079,399,1.246,443,0.779,445,2.68,448,2.051,471,2.171,475,2.906,476,3.429,477,3.385,478,3.501,484,3.033,485,3.348,486,2.545,487,3.542,488,2.545,490,1.652,493,3.379,494,3.172,505,2.878,510,3.23,511,3.346,512,2.906,514,2.034,517,3.183,518,4.051,519,3.417,520,1.82,521,3.417,522,2.326,523,2.326,612,3.199,613,3.199,614,2.793,615,3.199,616,3.199,617,3.199,618,3.199,619,3.199,620,3.199]],["title/controllers/DatabasesController.html",[0,1.215,621,2.983]],["body/controllers/DatabasesController.html",[0,1.818,2,1.818,3,0.183,4,0.163,5,0.123,11,0.013,15,0.29,20,0.969,35,0.183,36,0.283,39,2.482,47,0.011,48,0.011,133,3.033,357,2.788,621,5.273,622,5.361,623,6.14,624,4.906,625,5.361,626,6.14]],["title/modules/DatabasesModule.html",[49,1.033,63,2.778]],["body/modules/DatabasesModule.html",[2,1.841,3,0.143,4,0.127,5,0.096,11,0.013,15,0.32,20,0.756,35,0.143,36,0.221,47,0.009,48,0.009,49,1.737,51,2.011,52,2.011,53,2.175,54,2.175,55,2.011,56,3.135,57,2.175,63,5.422,72,2.823,73,2.175,74,2.175,76,2.267,78,2.366,79,1.245,145,0.779,148,1.245,234,1.418,235,3.731,236,3.045,250,4.2,268,3.781,377,2.593,379,2.95,596,2.09,621,5.018,624,4.932,625,4.181,627,4.181,628,4.181,629,4.789,630,4.789,631,4.21,632,4.181,633,4.21,634,3.781,635,4.181,636,3.781,637,4.181,638,3.482,639,3.045,640,4.181,641,3.243]],["title/injectables/DatabasesService.html",[124,0.795,624,2.608]],["body/injectables/DatabasesService.html",[3,0.097,4,0.087,5,0.065,7,0.351,8,1.324,11,0.013,12,0.769,14,0.906,15,0.298,20,0.515,23,4.05,24,1.768,35,0.097,36,0.15,37,1.929,38,3.313,39,2.28,40,2.107,47,0.007,48,0.007,79,0.849,86,1.546,87,1.144,88,1.546,89,0.822,105,1.672,108,2.28,124,0.925,125,1.185,144,1,145,0.751,146,0.413,147,0.936,148,1.241,167,1.672,213,3.379,234,2.041,236,2.076,245,1.201,250,3.358,263,2.212,264,1.687,268,2.578,277,2.375,284,3.408,286,1.419,321,1.564,382,3.906,393,1.687,445,2.461,448,2.082,476,1.371,510,2.461,511,2.669,512,2.669,526,2.851,560,4.166,584,3.47,596,1.425,624,3.034,632,2.851,634,2.578,642,2.851,643,6.202,644,6.89,645,2.851,646,4.923,647,4.452,648,5.639,649,4.772,650,4.166,651,3.266,652,4.772,653,2.076,654,2.076,655,2.212,656,4.1,657,2.578,658,4.1,659,4.772,660,2.375,661,3.266,662,2.851,663,2.578,664,3.266,665,3.266,666,3.266,667,5.639,668,3.266,669,5.639,670,3.266,671,5.639,672,3.266,673,5.44,674,3.266,675,3.266,676,3.266,677,3.266,678,3.47,679,2.212,680,3.266,681,2.851,682,3.266,683,3.266,684,3.266,685,2.851,686,3.266,687,2.851,688,2.851,689,3.266,690,2.851,691,3.266,692,3.266,693,3.768,694,3.266,695,5.639,696,3.266,697,5.639,698,5.639,699,4.772,700,5.639,701,5.639,702,4.772,703,2.578,704,2.851,705,3.266,706,3.266,707,3.266,708,3.266,709,3.266,710,2.375,711,3.266,712,2.212]],["title/classes/File.html",[5,0.082,36,0.189]],["body/classes/File.html",[3,0.193,4,0.172,5,0.158,11,0.012,35,0.193,36,0.299,47,0.011,48,0.011,443,1.581,713,5.664]],["title/controllers/FilesController.html",[0,1.215,714,2.983]],["body/controllers/FilesController.html",[0,1.107,2,1.107,3,0.111,4,0.099,5,0.132,7,0.402,8,1.458,10,1.64,11,0.013,12,0.948,14,1.928,15,0.296,16,1.846,20,0.59,33,2.715,35,0.111,36,0.172,39,1.511,43,1.807,47,0.008,48,0.008,87,1.309,105,1.842,128,1.115,133,1.846,144,2.019,145,0.716,146,0.936,147,1.891,170,2.846,172,1.769,173,1.697,179,2.243,184,4.589,185,1.93,186,1.569,245,0.94,308,1.976,322,2.667,323,2.125,324,2.125,336,1.93,339,2,340,1.511,341,2.991,343,2.243,345,3.341,347,2.023,348,2.127,352,1.569,354,1.569,357,1.697,364,2.991,365,2.127,369,2.127,379,1.456,448,2.294,455,2.023,457,2.023,534,2.376,712,2.531,714,3.821,715,3.263,716,2.95,717,5.256,718,3.737,719,3.737,720,3.737,721,5.121,722,3.737,723,3.737,724,6.08,725,3.737,726,4.589,727,3.737,728,3.737,729,3.737,730,5.256,731,4.15,732,5.256,733,5.256,734,3.737,735,3.737,736,3.737,737,3.737,738,3.263,739,3.737,740,3.865,741,3.263,742,4.15,743,3.737,744,2.717,745,3.737,746,5.256,747,3.737,748,3.737,749,3.737,750,3.737,751,3.737,752,3.737,753,3.737,754,3.737,755,3.737,756,3.737,757,3.737,758,3.737,759,4.589,760,3.737,761,3.737,762,3.737,763,3.737,764,3.737,765,3.737]],["title/modules/FilesModule.html",[49,1.033,64,2.778]],["body/modules/FilesModule.html",[2,1.998,3,0.162,4,0.144,5,0.109,11,0.013,15,0.315,20,0.86,35,0.162,36,0.251,47,0.01,48,0.01,49,1.844,51,2.287,52,2.287,53,2.474,54,2.474,55,2.287,56,3.328,57,2.474,64,5.431,72,3.064,73,2.474,74,2.474,76,2.579,123,4.757,179,3.27,714,5.328,740,5.098,741,4.757,744,3.961,766,4.757,767,4.757,768,5.448,769,5.448,770,5.448,771,4.905,772,5.448,773,5.448]],["title/injectables/FilesService.html",[124,0.795,740,2.608]],["body/injectables/FilesService.html",[3,0.136,4,0.121,5,0.149,7,0.489,8,1.667,11,0.013,12,1.016,14,2.164,15,0.269,20,0.718,35,0.136,36,0.21,43,1.936,47,0.009,48,0.009,124,1.165,125,1.65,128,1.055,144,2.192,145,0.737,146,0.905,147,2.052,167,1.594,308,2.259,321,1.667,322,2.895,323,2.43,324,2.43,336,3.105,339,2.122,340,2.43,343,3.607,352,1.91,354,1.91,386,2.713,534,4.733,716,3.591,721,5.283,740,3.821,742,4.745,774,3.972,775,6.01,776,4.549,777,4.549,778,4.549,779,4.549,780,4.549,781,7.446,782,4.549,783,4.549,784,4.549]],["title/classes/History.html",[36,0.189,566,2.462]],["body/classes/History.html",[3,0.097,4,0.086,5,0.065,7,0.35,10,1.328,11,0.013,12,0.768,15,0.225,35,0.185,36,0.317,41,2.901,47,0.007,48,0.007,89,1.198,128,1.117,145,0.49,146,0.899,148,0.846,167,1.141,234,1.41,245,1.198,264,1.682,279,0.874,286,1.732,332,2.085,339,1.561,386,1.612,399,1.269,424,2.672,440,2.491,443,0.793,445,1.421,453,2.162,471,1.269,475,2.254,476,3.409,477,3.357,478,3.467,482,1.954,483,3.225,484,2.781,485,3.376,486,1.763,488,3.048,489,3.225,490,1.682,493,2.908,494,2.46,503,3.225,505,2.908,506,2.205,510,2.078,511,2.254,512,1.541,540,2.843,541,2.843,562,1.853,563,4.503,564,2.205,565,2.205,566,3.955,567,2.205,568,4.267,569,3.462,570,2.205,575,1.479,580,2.571,785,3.256,786,3.256,787,3.256,788,3.256]],["title/interfaces/IUser.html",[141,1.437,789,2.608]],["body/interfaces/IUser.html",[3,0.16,4,0.143,5,0.108,7,0.578,11,0.013,35,0.16,47,0.01,48,0.01,49,1.354,128,1.202,141,2.346,145,0.823,146,1.045,147,1.919,234,2.258,245,1.685,279,2.147,284,3.939,286,1.919,455,4.128,554,3.421,789,3.421,790,4.248,791,4.698]],["title/classes/Job.html",[36,0.189,575,1.863]],["body/classes/Job.html",[3,0.103,4,0.092,5,0.069,7,0.372,10,1.913,11,0.013,12,1.107,15,0.199,35,0.174,36,0.159,40,1.024,47,0.007,48,0.007,79,0.899,89,1.252,105,1.212,128,1.136,145,0.656,146,1.056,245,1.252,279,1.71,286,1.466,332,1.843,379,1.938,386,1.684,402,2.542,424,2.189,440,2.041,441,2.542,443,0.843,446,3.009,447,3.154,448,2.542,449,3.154,450,2.342,451,5.06,453,3.479,455,3.449,456,3.823,457,4.012,462,3.625,468,2.075,469,2.83,470,2.075,471,2.482,492,3.315,499,4.235,500,4.599,501,4.235,504,4.599,508,4.599,575,2.259,584,4.235,639,2.198,792,2.514,793,3.458,794,3.458,795,3.458,796,3.458,797,3.458,798,3.458,799,3.458,800,3.458,801,3.458,802,3.458,803,3.458,804,3.458,805,3.458,806,3.458,807,3.458,808,3.458,809,3.458,810,2.342,811,3.019]],["title/controllers/JobsController.html",[0,1.215,812,2.983]],["body/controllers/JobsController.html",[0,1.079,2,1.079,3,0.109,4,0.097,5,0.073,7,0.392,8,1.432,10,1.624,11,0.013,12,0.939,14,1.91,15,0.294,16,2.55,20,0.575,33,3.097,35,0.109,36,0.168,39,1.473,43,1.79,47,0.008,48,0.008,87,1.276,119,2.738,128,1.162,133,1.8,141,2.714,144,2.108,145,0.709,146,0.87,147,1.973,148,2.113,170,2.795,172,1.724,173,1.654,180,1.529,185,1.882,186,1.529,308,2.254,321,1.432,322,2.424,323,2.087,324,2.087,328,1.59,329,2.846,335,2.253,336,1.882,339,2.12,340,1.473,341,2.073,343,2.186,345,2.316,347,1.973,348,2.073,349,2.167,352,1.529,354,1.529,357,1.654,358,2.467,361,2.186,362,2.186,364,2.073,365,2.073,367,2.467,369,2.073,491,4.292,575,3.412,812,3.753,813,3.181,814,2.876,815,3.181,816,4.076,817,3.643,818,3.643,819,2.876,820,3.643,821,3.643,822,3.181,823,2.649,824,3.643,825,3.753,826,2.876,827,3.643,828,5.087,829,3.753,830,3.181,831,3.643,832,3.812,833,3.181,834,4.076,835,3.643,836,3.643,837,3.643,838,2.876,839,3.643,840,2.876,841,3.643,842,3.643,843,3.643]],["title/modules/JobsModule.html",[49,1.033,65,2.778]],["body/modules/JobsModule.html",[2,1.998,3,0.162,4,0.144,5,0.109,11,0.013,15,0.315,20,0.86,35,0.162,36,0.251,47,0.01,48,0.01,49,1.844,51,2.287,52,2.287,53,2.474,54,2.474,55,2.287,56,3.328,57,2.474,65,5.431,72,3.064,73,2.474,74,2.474,76,2.579,78,2.691,79,1.416,145,0.561,377,2.95,379,2.123,575,2.474,638,3.961,639,4.289,812,5.328,832,5.098,833,4.757,844,4.757,845,4.757,846,5.448,847,5.448,848,4.757]],["title/injectables/JobsService.html",[124,0.795,832,2.608]],["body/injectables/JobsService.html",[3,0.095,4,0.084,5,0.063,7,0.341,8,1.295,11,0.013,12,0.93,14,1.808,15,0.29,20,0.5,35,0.095,36,0.146,37,1.888,38,1.44,40,2.088,43,1.695,47,0.007,48,0.007,79,0.824,86,1.501,87,1.942,88,1.501,89,0.798,108,2.757,119,2.96,120,1.804,124,0.905,125,1.15,128,1.046,141,2.631,144,2.087,145,0.702,146,0.862,147,1.954,148,1.92,149,2.307,180,1.331,213,2.517,279,1.983,286,1.395,308,1.755,317,2.528,321,1.295,322,1.888,323,1.888,324,1.888,328,2.038,329,2.419,335,2.419,339,1.538,340,1.888,349,1.331,352,1.331,354,1.331,382,3.159,386,2.308,388,2.969,391,3.162,393,1.638,395,1.903,396,1.717,397,1.804,402,1.384,403,3.327,404,3.327,405,1.903,406,1.903,407,1.903,408,2.803,409,1.903,410,1.903,411,2.803,412,1.903,413,1.717,414,2.803,415,2.803,417,2.803,418,1.903,419,1.903,420,2.803,421,2.803,422,2.803,423,2.657,424,1.192,425,2.803,427,1.903,428,1.903,429,1.903,430,1.903,431,1.903,432,1.903,433,1.903,434,1.903,435,1.903,436,1.903,437,1.903,440,1.111,441,1.384,491,4.092,575,1.44,810,2.147,815,4.077,828,4.899,832,2.969,834,3.687,848,2.768,849,2.768,850,3.171,851,3.171,852,4.077,853,3.171,854,3.171,855,3.171,856,3.171,857,3.171,858,2.768,859,3.171,860,3.171,861,3.171,862,3.171,863,4.67,864,3.171]],["title/injectables/JwtAuthGuard.html",[31,2.778,124,0.795]],["body/injectables/JwtAuthGuard.html",[3,0.215,4,0.11,5,0.083,7,0.444,8,1.564,11,0.013,12,0.875,14,1.564,15,0.289,19,4.663,20,0.653,25,3.264,26,2.481,31,3.817,35,0.123,36,0.19,37,1.671,40,2.203,43,1.667,47,0.008,48,0.008,84,2.8,105,1.975,124,1.092,125,1.5,128,0.586,144,1.963,145,0.66,146,0.811,147,1.838,148,1.874,167,1.975,173,1.878,179,2.481,284,2.136,312,3.85,313,3.61,357,1.878,596,2.46,865,3.61,866,2.668,867,5.637,868,5.637,869,5.637,870,3.61,871,5.874,872,4.134,873,5.637,874,5.536,875,4.134,876,5.009,877,5.637,878,4.134,879,6.889,880,3.61,881,3.264,882,4.45,883,3.264,884,4.922,885,4.134,886,4.45,887,5.637,888,4.134,889,4.134,890,4.134,891,4.134,892,4.134,893,4.134,894,4.922,895,4.134,896,5.637,897,4.134,898,5.637,899,4.134,900,4.134,901,5.6,902,4.134,903,4.134,904,4.134,905,4.134,906,4.134]],["title/injectables/JwtStrategy.html",[124,0.795,219,2.778]],["body/injectables/JwtStrategy.html",[3,0.136,4,0.121,5,0.092,7,0.492,8,1.674,11,0.013,12,0.824,14,1.27,15,0.313,20,0.722,23,4.36,24,2.479,26,2.747,35,0.136,36,0.211,37,2.44,38,2.741,40,2,43,1.19,47,0.009,48,0.009,108,2.73,124,1.17,125,1.661,128,0.855,141,2.515,144,1.847,145,0.768,146,0.763,147,1.73,149,2.261,180,1.922,181,3.708,182,3.328,189,5.331,213,2.079,219,4.087,228,3.328,229,3.997,234,2,239,3.997,277,3.328,279,1.813,280,3.997,281,3.997,284,2.365,286,1.519,287,5.27,300,3.997,866,2.856,883,3.614,907,3.997,908,5.27,909,5.27,910,4.578,911,4.578,912,6.035,913,4.578,914,4.578,915,3.997,916,3.614,917,3.997,918,3.997,919,4.578,920,4.578,921,4.578,922,3.614,923,4.578,924,4.578]],["title/injectables/LocalAuthGuard.html",[27,2.778,124,0.795]],["body/injectables/LocalAuthGuard.html",[3,0.185,4,0.165,5,0.124,11,0.012,15,0.292,20,0.98,25,4.903,26,3.727,27,4.944,35,0.185,36,0.286,47,0.011,48,0.011,124,1.415,125,2.253,866,3.455,925,5.422,926,7.3]],["title/injectables/LocalStrategy.html",[124,0.795,220,2.778]],["body/injectables/LocalStrategy.html",[3,0.151,4,0.134,5,0.101,7,0.543,8,1.786,11,0.013,12,0.878,14,1.403,15,0.298,20,0.798,26,3.034,29,4.479,35,0.151,36,0.233,37,2.044,40,1.497,43,1.314,47,0.01,48,0.01,108,2.863,124,1.248,125,1.834,128,1.115,144,1.97,145,0.663,146,0.814,147,1.845,148,1.841,167,1.772,175,3.992,213,2.296,220,4.359,261,3.034,262,5.62,312,3.034,357,2.296,510,3.253,866,3.046,880,4.414,883,3.992,908,5.62,909,5.62,915,4.414,916,3.992,918,4.414,927,4.414,928,5.056,929,5.056,930,6.437,931,5.056,932,4.414,933,5.056,934,5.056,935,5.056]],["title/controllers/MailController.html",[0,1.215,936,2.983]],["body/controllers/MailController.html",[0,1.251,2,1.251,3,0.126,4,0.112,5,0.084,7,0.454,8,1.586,10,0.996,11,0.013,12,0.576,14,1.171,15,0.319,20,0.666,33,2.954,35,0.126,36,0.195,37,1.707,38,3.156,39,1.707,40,2.151,43,1.098,47,0.008,48,0.008,79,1.098,86,1.998,87,1.479,88,1.998,89,1.063,100,3.334,108,2.622,133,2.086,145,0.435,167,1.479,172,1.998,173,1.918,185,2.181,186,1.773,213,2.945,286,1.439,332,1.336,382,3.35,393,2.181,492,3.254,499,3.07,575,2.597,810,2.86,814,4.515,852,3.687,858,3.687,876,3.07,936,4.158,937,3.687,938,4.222,939,6.949,940,4.222,941,3.69,942,4.222,943,4.122,944,3.687,945,6.484,946,3.07,947,3.334,948,2.86,949,3.687,950,3.334,951,3.687,952,4.222,953,4.222,954,4.222,955,3.687,956,3.687,957,4.222,958,4.222,959,4.993,960,4.222,961,4.222,962,5.718,963,4.222,964,4.222,965,4.222,966,4.222,967,4.222,968,4.222,969,4.222,970,4.222,971,4.222,972,4.222,973,4.222,974,3.687,975,4.222,976,4.222,977,4.222,978,4.222,979,4.222,980,4.993,981,4.222,982,4.222,983,4.222,984,4.222]],["title/modules/MailModule.html",[49,1.033,66,2.778]],["body/modules/MailModule.html",[2,1.753,3,0.133,4,0.118,5,0.089,11,0.013,15,0.325,20,0.702,23,4.039,24,2.408,35,0.133,36,0.205,47,0.009,48,0.009,49,1.675,51,1.867,52,1.867,53,2.019,54,2.019,55,1.867,56,3.023,57,2.019,66,5.147,72,2.689,73,2.019,74,2.019,76,2.104,78,2.197,79,1.156,89,1.49,105,2.332,107,3.511,108,1.798,114,3.511,134,3.882,145,0.61,148,1.156,167,1.558,259,3.882,377,2.408,379,2.307,556,2.669,575,2.019,638,3.233,639,3.764,922,4.674,936,4.839,941,2.531,943,4.831,944,3.882,946,4.305,947,3.511,949,3.882,950,3.511,980,3.882,985,3.882,986,3.882,987,4.447,988,4.447,989,4.447,990,3.882,991,5.921,992,4.447,993,4.01,994,4.447,995,4.447,996,4.447,997,4.447,998,4.447,999,4.447,1000,4.447,1001,3.882,1002,4.447,1003,4.447,1004,4.447,1005,4.447,1006,4.447,1007,4.447,1008,4.447,1009,3.882]],["title/injectables/MailService.html",[124,0.795,943,2.608]],["body/injectables/MailService.html",[3,0.19,4,0.169,5,0.128,11,0.012,15,0.255,20,1.006,35,0.19,36,0.294,47,0.011,48,0.011,124,1.437,125,2.312,943,4.712,1010,5.565]],["title/injectables/MulterConfigService.html",[124,0.795,771,2.983]],["body/injectables/MulterConfigService.html",[3,0.122,4,0.109,5,0.137,7,0.441,8,1.556,11,0.013,12,0.872,14,1.556,15,0.288,20,0.648,35,0.122,36,0.189,40,2.034,43,1.661,47,0.008,48,0.008,105,1.438,124,1.087,125,1.489,128,0.905,144,1.256,145,0.658,146,0.519,147,1.176,156,4.896,179,2.463,245,1.411,263,4.327,264,2.12,317,3.893,321,1.138,501,2.983,556,3.366,596,1.791,660,2.983,710,4.077,744,2.983,759,3.582,771,4.077,990,3.582,1001,3.582,1011,3.582,1012,6.389,1013,6.867,1014,5.608,1015,4.103,1016,6.389,1017,5.608,1018,4.103,1019,4.103,1020,4.103,1021,4.103,1022,5.608,1023,5.608,1024,5.608,1025,4.103,1026,4.103,1027,4.103,1028,5.608,1029,4.103,1030,4.103,1031,4.103,1032,5.608,1033,4.103,1034,4.103,1035,4.103,1036,5.608,1037,5.608,1038,4.103,1039,4.103,1040,4.103,1041,5.608,1042,4.103,1043,5.608,1044,4.103,1045,4.103,1046,4.103,1047,4.103,1048,4.103,1049,4.103,1050,4.103,1051,4.427,1052,4.103,1053,4.103,1054,5.608,1055,4.103,1056,4.103,1057,4.103,1058,4.103,1059,6.389,1060,4.103,1061,4.103,1062,4.103,1063,4.103,1064,3.239,1065,4.103,1066,4.103,1067,4.103,1068,4.103]],["title/classes/Permission.html",[36,0.189,596,1.79]],["body/classes/Permission.html",[3,0.12,4,0.107,5,0.081,7,0.434,10,1.884,11,0.013,12,1.09,15,0.222,35,0.189,36,0.186,40,1.195,47,0.008,48,0.008,49,1.594,79,1.049,89,1.395,105,1.414,128,1.131,145,0.652,146,1.05,245,1.395,279,1.701,286,1.594,379,2.16,402,2.764,424,2.381,440,2.219,441,2.764,443,0.983,446,3.272,447,3.429,449,3.429,451,5.015,453,3.354,455,3.429,456,3.801,457,3.999,462,3.155,468,2.421,469,3.155,470,2.421,471,2.468,554,4.026,555,4.289,596,2.419,633,2.732,653,2.565,1069,2.933,1070,4.035,1071,4.035,1072,4.035,1073,4.035,1074,4.035,1075,4.035,1076,4.035,1077,4.035,1078,4.035,1079,4.035,1080,4.035,1081,3.523]],["title/controllers/PermissionsController.html",[0,1.215,1082,2.983]],["body/controllers/PermissionsController.html",[0,1.063,2,1.063,3,0.107,4,0.095,5,0.072,7,0.386,8,1.417,10,1.615,11,0.013,12,0.934,14,1.899,15,0.309,16,2.938,20,0.566,35,0.107,36,0.165,39,1.451,43,1.78,47,0.008,48,0.008,79,0.933,86,1.699,87,1.79,88,1.699,89,0.903,119,2.72,128,1.16,133,1.773,141,2.788,144,2.096,145,0.705,146,0.865,147,1.962,148,2.145,170,3.22,172,1.699,173,1.63,180,1.507,185,1.854,186,1.507,284,3.072,308,2.235,321,1.65,322,2.404,323,2.065,324,2.065,328,1.566,329,2.827,333,3.714,335,2.229,336,1.854,339,1.974,340,1.451,341,2.907,343,2.154,345,3.247,347,1.943,348,2.042,349,2.144,352,1.507,354,1.507,357,1.63,360,2.609,361,2.154,362,2.154,364,2.907,365,2.042,367,2.431,369,2.042,382,1.854,393,1.854,551,4.523,596,1.566,653,2.282,1082,3.714,1083,3.134,1084,3.134,1085,3.589,1086,3.134,1087,3.589,1088,3.589,1089,3.589,1090,4.757,1091,3.589,1092,3.247,1093,3.134,1094,4.033,1095,2.834,1096,3.589,1097,3.589,1098,3.589,1099,3.589,1100,3.589,1101,3.589,1102,3.589,1103,3.589]],["title/modules/PermissionsModule.html",[49,1.033,67,2.778]],["body/modules/PermissionsModule.html",[2,1.986,3,0.161,4,0.143,5,0.108,11,0.013,15,0.314,20,0.851,35,0.161,36,0.249,47,0.01,48,0.01,49,1.836,51,2.265,52,2.265,53,2.45,54,2.45,55,2.265,56,3.313,57,2.45,67,5.418,72,3.045,73,2.45,74,2.45,76,2.553,78,2.665,79,1.402,145,0.555,377,2.921,379,2.102,596,2.354,633,4.541,637,4.71,1082,5.304,1092,5.086,1093,4.71,1095,4.259,1104,4.71,1105,4.71,1106,5.394,1107,5.394]],["title/injectables/PermissionsService.html",[124,0.795,1092,2.608]],["body/injectables/PermissionsService.html",[3,0.088,4,0.078,5,0.059,7,0.317,8,1.227,11,0.013,12,0.906,14,1.754,15,0.283,20,0.465,35,0.088,36,0.136,37,1.788,38,1.339,40,2.097,43,1.726,47,0.007,48,0.007,79,0.766,86,1.395,87,1.86,88,1.395,89,0.742,108,2.928,119,2.89,120,1.677,124,0.857,125,1.069,128,1.026,141,2.585,144,2.032,145,0.683,146,0.839,147,1.902,148,1.883,149,2.622,167,1.55,180,1.237,213,2.679,273,2.143,279,1.945,286,1.336,308,1.662,312,2.655,317,2.874,321,1.473,322,1.788,323,1.788,324,1.788,328,1.93,329,2.317,335,2.317,339,1.473,340,1.788,349,1.237,352,1.237,354,1.237,382,3.048,386,2.247,388,2.812,391,2.995,393,1.523,395,1.769,396,1.596,397,1.677,402,1.286,403,3.186,404,3.186,405,1.769,406,1.769,407,1.769,408,2.655,409,1.769,410,1.769,411,2.655,412,1.769,413,1.596,414,2.655,415,2.655,417,2.655,418,1.769,419,1.769,420,2.655,421,2.655,422,2.655,423,2.517,424,1.108,425,2.655,427,1.769,428,1.769,429,1.769,430,1.769,431,1.769,432,1.769,433,1.769,434,1.769,435,1.769,436,1.769,437,1.769,440,1.033,441,1.286,551,4.22,554,2.812,555,3.595,556,1.769,596,2.759,646,3.862,653,1.874,662,2.573,710,3.86,1051,4.191,1064,2.327,1084,3.862,1090,4.502,1092,2.812,1094,3.492,1095,2.327,1108,2.573,1109,2.948,1110,2.948,1111,2.948,1112,2.948,1113,2.948,1114,2.948,1115,2.948,1116,3.862,1117,2.573,1118,3.862,1119,4.423,1120,4.423,1121,4.423,1122,2.573,1123,2.573,1124,2.573,1125,2.948,1126,2.948,1127,2.948,1128,4.423,1129,2.948]],["title/classes/RegisterUserDto.html",[36,0.189,520,2.335]],["body/classes/RegisterUserDto.html",[3,0.094,4,0.083,5,0.063,7,0.338,10,1.603,11,0.013,12,0.985,15,0.244,35,0.182,36,0.313,39,1.876,41,2.903,47,0.007,48,0.007,89,1.168,128,1.139,145,0.759,146,0.947,165,1.553,176,1.887,177,4.422,186,1.32,234,2.082,245,1.168,261,1.887,279,0.844,286,1.913,332,2.332,339,1.287,386,2.199,399,1.225,443,0.766,445,2.657,448,2.025,471,1.808,475,3.074,476,3.434,477,3.393,478,3.51,484,3.008,485,3.339,486,2.512,487,3.506,488,2.512,490,1.624,493,3.146,494,2.849,505,2.849,510,3.215,511,3.327,512,2.882,514,1.998,517,3.142,518,4.01,519,2.285,520,2.64,521,3.373,522,2.285,523,2.285,537,2.744,614,2.744,1130,3.143,1131,3.143,1132,3.143,1133,3.143,1134,3.143,1135,3.143,1136,3.143,1137,3.143]],["title/interfaces/Response.html",[151,2.608,789,2.608]],["body/interfaces/Response.html",[3,0.15,4,0.133,5,0.1,7,0.54,11,0.013,15,0.307,20,0.792,35,0.191,36,0.231,41,2.85,43,1.305,47,0.01,48,0.01,84,3.4,124,1.242,128,1,146,0.892,147,1.837,151,4.074,173,2.28,245,1.613,357,2.28,386,2.39,660,3.651,712,5.32,789,3.192,790,3.964,871,5.573,874,4.659,876,3.651,886,3.964,1138,3.964,1139,6.707,1140,5.595,1141,5.595,1142,5.595,1143,3.651,1144,4.384,1145,4.384,1146,3.651,1147,3.651,1148,4.384,1149,4.384,1150,4.384,1151,4.384,1152,4.384,1153,4.384,1154,4.384]],["title/classes/Resume.html",[36,0.189,1155,2.462]],["body/classes/Resume.html",[3,0.104,4,0.093,5,0.07,7,0.376,10,1.883,11,0.013,12,1.089,15,0.256,35,0.175,36,0.161,40,1.036,47,0.007,48,0.007,79,0.909,89,1.262,105,1.225,128,1.101,146,1.052,245,1.262,279,1.719,286,1.828,332,1.107,378,3.053,379,1.954,402,2.558,424,2.407,440,2.243,441,2.558,443,0.852,446,3.028,447,3.174,449,3.174,451,4.983,453,3.299,455,3.174,456,4.234,457,3.819,462,2.853,468,2.099,469,2.853,470,2.099,471,3.06,496,3.645,565,3.969,566,3.518,567,3.969,568,3.843,569,4.262,570,3.969,575,1.588,638,2.542,641,2.368,950,2.761,1155,3.009,1156,2.542,1157,5.351,1158,5.055,1159,3.497,1160,3.497,1161,3.497,1162,3.497,1163,3.497,1164,3.497,1165,3.497,1166,3.497,1167,3.497,1168,3.497,1169,3.497,1170,3.497,1171,3.497,1172,3.497,1173,3.497,1174,2.542,1175,3.053]],["title/controllers/ResumesController.html",[0,1.215,1176,2.983]],["body/controllers/ResumesController.html",[0,1.022,2,1.022,3,0.103,4,0.091,5,0.069,7,0.371,8,1.378,10,1.657,11,0.013,12,0.958,14,1.948,15,0.29,16,2.454,20,0.545,33,2.566,35,0.103,36,0.159,39,1.396,43,1.826,47,0.007,48,0.007,87,1.21,119,2.672,128,1.167,133,1.705,141,2.769,144,2.15,145,0.723,146,0.888,147,2.013,148,2.142,170,1.869,172,1.634,173,1.568,180,1.449,185,1.783,186,1.449,308,2.187,321,1.378,322,2.353,323,2.009,324,2.009,328,1.507,329,2.778,335,2.168,336,1.783,339,2.093,340,1.396,341,1.965,343,2.072,345,2.195,347,1.869,348,1.965,349,2.086,352,1.449,354,1.449,357,1.568,358,2.338,361,2.072,362,2.072,364,1.965,365,1.965,367,2.338,369,1.965,562,3.997,568,3.82,816,5.025,819,2.726,823,2.51,825,3.612,826,2.726,829,3.612,830,3.014,838,2.726,840,3.922,1155,4.596,1176,3.612,1177,3.014,1178,3.014,1179,4.338,1180,3.014,1181,3.452,1182,3.452,1183,3.452,1184,3.452,1185,3.452,1186,3.014,1187,3.452,1188,3.452,1189,3.452,1190,3.452,1191,3.7,1192,3.014,1193,3.922,1194,2.338,1195,3.452,1196,3.452,1197,3.452,1198,3.452,1199,3.452,1200,3.452,1201,3.452,1202,3.452,1203,3.452,1204,3.452,1205,3.452]],["title/modules/ResumesModule.html",[49,1.033,68,2.778]],["body/modules/ResumesModule.html",[2,1.989,3,0.161,4,0.143,5,0.108,11,0.013,15,0.314,20,0.853,35,0.161,36,0.249,47,0.01,48,0.01,49,1.838,51,2.27,52,2.27,53,2.456,54,2.456,55,2.27,56,3.317,57,2.456,68,5.421,72,3.05,73,2.456,74,2.456,76,2.559,78,2.671,79,1.406,145,0.557,377,2.928,379,2.107,640,4.721,641,4.548,1155,3.246,1176,5.31,1191,5.089,1192,4.721,1206,4.721,1207,4.721,1208,5.408,1209,5.408,1210,4.721]],["title/injectables/ResumesService.html",[124,0.795,1191,2.608]],["body/injectables/ResumesService.html",[3,0.077,4,0.068,5,0.052,7,0.277,8,1.107,11,0.013,12,0.926,14,1.822,15,0.279,20,0.406,35,0.077,36,0.119,37,1.613,38,1.169,40,2.01,43,1.707,47,0.006,48,0.006,79,0.669,86,1.218,87,1.711,88,1.218,89,0.648,108,2.975,119,2.757,120,1.465,124,0.773,125,0.934,128,1.079,141,2.692,144,2.077,145,0.733,146,0.858,147,1.945,148,1.938,149,2.717,167,1.398,180,1.081,213,2.498,279,2.045,286,1.653,308,1.499,317,2.16,321,1.107,322,1.613,323,1.613,324,1.613,328,1.741,329,2.131,335,2.131,339,1.355,340,1.613,349,1.081,352,1.081,354,1.081,382,2.842,386,2.131,388,2.536,391,2.702,393,1.33,395,1.545,396,1.394,397,1.465,402,1.124,403,3.941,404,3.941,405,1.545,406,1.545,407,1.545,408,2.394,409,1.545,410,1.545,411,2.931,412,1.545,413,2.644,414,2.394,415,2.394,417,2.394,418,1.545,419,1.545,420,2.394,421,2.394,422,2.394,423,2.27,424,1.836,425,2.394,427,1.545,428,1.545,429,1.545,430,1.545,431,1.545,432,1.545,433,1.545,434,1.545,435,1.545,436,1.545,437,1.545,440,2.085,441,1.124,446,2.061,453,1.812,556,2.394,562,3.583,565,1.744,566,2.394,567,1.744,568,3.941,570,2.702,1155,2.394,1174,1.872,1179,3.483,1180,3.483,1186,3.483,1191,2.536,1193,3.15,1194,4.596,1210,2.248,1211,2.248,1212,3.989,1213,2.575,1214,2.575,1215,3.989,1216,2.575,1217,2.575,1218,2.575,1219,2.575,1220,2.575,1221,2.575,1222,3.989,1223,2.575,1224,2.033,1225,2.575,1226,2.575,1227,2.575,1228,3.989,1229,2.575,1230,2.575,1231,2.575,1232,3.989,1233,2.575,1234,2.575,1235,4.884,1236,2.575,1237,2.575,1238,2.575,1239,2.575,1240,2.248,1241,3.15]],["title/classes/Role.html",[36,0.189,234,1.215]],["body/classes/Role.html",[3,0.117,4,0.104,5,0.079,7,0.423,10,1.876,11,0.013,12,1.085,15,0.25,35,0.186,36,0.181,40,1.165,47,0.008,48,0.008,79,1.022,89,1.371,105,1.378,128,1.064,145,0.643,146,1.054,234,1.613,235,2.36,245,1.371,279,1.678,284,3.228,286,1.573,379,2.122,402,2.727,424,2.349,440,2.189,441,2.727,443,0.958,446,3.228,447,3.383,448,2.727,449,3.383,451,4.986,453,3.328,455,3.383,456,4.048,457,3.967,462,3.838,468,2.36,469,3.1,470,2.36,471,2.628,584,4.543,596,2.943,634,3.105,654,2.5,1157,3.105,1158,3.105,1242,2.859,1243,3.933,1244,3.933,1245,3.933,1246,3.933,1247,3.933,1248,3.933,1249,3.933,1250,3.933,1251,3.933,1252,3.933,1253,3.933,1254,3.434]],["title/controllers/RolesController.html",[0,1.215,1255,2.983]],["body/controllers/RolesController.html",[0,1.101,2,1.101,3,0.111,4,0.099,5,0.074,7,0.4,8,1.453,10,1.637,11,0.013,12,0.947,14,1.925,15,0.296,16,2.995,20,0.587,35,0.111,36,0.171,39,1.503,43,1.804,47,0.008,48,0.008,87,1.303,119,2.763,128,1.165,133,1.836,141,2.805,144,2.124,145,0.714,146,0.877,147,1.988,148,2.153,170,2.836,172,1.759,173,1.688,180,1.561,181,3.132,185,1.92,186,1.561,308,2.279,321,1.453,322,2.451,323,2.117,324,2.117,328,1.622,329,2.872,333,3.808,335,2.285,336,1.92,339,1.997,340,1.503,341,2.98,343,2.231,345,3.329,347,2.013,348,2.116,349,2.199,352,1.561,354,1.561,357,1.688,358,2.518,360,2.703,361,2.231,362,2.231,364,2.98,365,2.116,367,2.518,369,2.116,581,4.576,1086,3.246,1090,4.184,1255,3.808,1256,3.246,1257,5.293,1258,3.246,1259,3.718,1260,3.718,1261,3.718,1262,3.718,1263,4.457,1264,3.718,1265,3.246,1266,4.135,1267,3.718,1268,3.718,1269,3.718,1270,3.718,1271,3.718,1272,3.718,1273,3.718]],["title/modules/RolesModule.html",[49,1.033,69,2.608]],["body/modules/RolesModule.html",[2,1.953,3,0.157,4,0.139,5,0.105,11,0.013,15,0.312,20,0.829,35,0.157,36,0.242,47,0.01,48,0.01,49,1.814,51,2.205,52,2.205,53,2.385,54,2.385,55,2.205,56,3.273,57,3.273,69,5.127,72,2.994,73,2.385,74,2.385,76,2.485,78,2.594,79,1.365,145,0.541,181,4.327,234,1.555,235,3.957,377,2.843,379,2.046,636,4.146,1255,5.24,1265,4.585,1274,4.585,1275,4.585,1276,4.585,1277,5.251,1278,5.251,1279,4.585]],["title/injectables/RolesService.html",[124,0.795,181,2.119]],["body/injectables/RolesService.html",[3,0.081,4,0.072,5,0.054,7,0.291,8,1.15,11,0.013,12,0.876,14,1.689,15,0.289,20,0.427,35,0.081,36,0.125,37,1.676,38,1.229,40,2.094,43,1.67,47,0.006,48,0.006,49,0.681,79,0.703,86,1.281,87,1.765,88,1.281,89,1.268,108,3.01,119,2.807,120,1.54,124,0.803,125,0.982,128,1.001,141,2.528,144,1.966,145,0.728,146,0.812,147,1.841,148,1.838,149,2.79,167,2.25,180,1.136,181,2.141,213,2.917,234,1.902,267,1.967,273,1.967,279,1.899,284,1.398,286,1.268,308,1.558,312,3.855,317,2.728,321,1.398,322,1.676,323,1.676,324,1.676,328,1.809,329,2.199,335,2.199,339,1.398,340,1.676,349,1.136,352,1.136,354,1.136,382,2.917,386,2.174,388,2.635,391,2.807,393,1.398,395,1.624,396,1.465,397,1.54,402,1.181,403,3.024,404,3.024,405,1.624,406,1.624,407,1.624,408,2.488,409,1.624,410,1.624,411,2.488,412,1.624,413,3.478,414,2.488,415,2.488,417,2.488,418,1.624,419,1.624,420,2.488,421,2.488,422,2.488,423,2.359,424,1.017,425,2.488,427,1.624,428,1.624,429,1.624,430,1.624,431,1.624,432,1.624,433,1.624,434,1.624,435,1.624,436,1.624,437,1.624,440,0.948,441,1.181,554,1.72,555,2.807,556,2.488,581,4.083,596,2.199,647,3.273,654,1.72,656,3.014,663,2.136,678,1.967,679,1.832,693,2.136,710,3.663,1051,3.978,1064,2.136,1116,3.619,1117,2.362,1118,3.619,1122,2.362,1123,2.362,1124,2.362,1241,2.136,1258,3.619,1263,4.67,1266,3.273,1279,2.362,1280,2.362,1281,2.706,1282,2.706,1283,2.706,1284,2.706,1285,2.706,1286,2.706,1287,2.706,1288,2.362,1289,4.145,1290,2.706,1291,2.706,1292,2.706,1293,4.145,1294,5.038,1295,4.399,1296,2.706,1297,4.145,1298,2.362,1299,2.706,1300,2.706,1301,2.706,1302,2.362,1303,2.362,1304,2.706]],["title/classes/Subscriber.html",[36,0.189,941,2.335]],["body/classes/Subscriber.html",[3,0.122,4,0.109,5,0.082,7,0.441,10,1.872,11,0.013,12,1.083,15,0.224,35,0.19,36,0.189,40,1.215,47,0.008,48,0.008,79,1.067,89,1.411,105,2.239,128,1.111,145,0.658,146,1.048,245,1.411,279,1.716,286,1.868,379,2.185,402,2.788,424,2.401,440,2.239,441,2.788,443,1,446,3.3,447,3.459,449,3.459,451,4.976,453,3.371,455,3.459,456,3.834,457,4.019,462,3.191,468,2.463,469,3.191,470,2.463,471,2.49,492,3.636,731,3.239,941,3.191,948,2.779,993,2.779,1305,2.983,1306,4.103,1307,4.103,1308,4.103,1309,4.103,1310,3.582,1311,4.103,1312,4.103,1313,4.103,1314,4.103,1315,4.103,1316,4.103,1317,3.582]],["title/controllers/SubscribersController.html",[0,1.215,1318,2.983]],["body/controllers/SubscribersController.html",[0,1.032,2,1.032,3,0.104,4,0.092,5,0.07,7,0.375,8,1.388,10,1.662,11,0.013,12,0.961,14,1.955,15,0.291,16,2.471,20,0.55,33,3.022,35,0.104,36,0.161,39,1.409,43,1.832,47,0.007,48,0.007,87,1.221,119,2.684,128,1.137,133,1.722,141,2.774,144,2.157,145,0.725,146,0.891,147,2.019,148,2.121,170,3.168,172,1.65,173,1.583,180,1.463,185,1.801,186,1.463,308,2.199,321,1.623,322,2.366,323,2.022,324,2.022,328,1.521,329,2.79,335,2.183,336,1.801,339,2.013,340,1.409,341,1.984,347,2.708,348,1.984,349,2.1,357,1.583,361,2.092,362,2.092,364,1.984,365,1.984,369,1.984,492,2.847,603,4.48,604,2.752,816,3.949,819,2.752,822,3.043,823,2.534,825,3.637,826,2.752,829,3.637,838,2.752,840,4.619,941,4.303,959,3.043,1318,3.637,1319,3.043,1320,5.002,1321,3.043,1322,3.486,1323,3.486,1324,3.486,1325,3.486,1326,3.486,1327,3.486,1328,3.486,1329,3.486,1330,3.486,1331,3.043,1332,4.772,1333,3.486,1334,3.486,1335,3.949,1336,3.72,1337,3.486,1338,3.949,1339,2.752,1340,3.486,1341,3.486,1342,3.486,1343,3.486,1344,3.486,1345,3.486,1346,3.486,1347,3.486,1348,3.486,1349,3.486]],["title/modules/SubscribersModule.html",[49,1.033,70,2.778]],["body/modules/SubscribersModule.html",[2,1.973,3,0.159,4,0.142,5,0.107,11,0.013,15,0.319,20,0.843,35,0.159,36,0.246,47,0.01,48,0.01,49,1.828,51,2.242,52,2.242,53,2.426,54,2.426,55,2.242,56,3.298,57,2.426,70,5.405,72,3.026,73,2.426,74,2.426,76,2.528,78,2.639,79,1.389,145,0.55,377,2.892,379,2.081,941,3.04,993,4.513,1009,4.663,1143,3.884,1318,5.281,1336,5.073,1350,4.663,1351,4.663,1352,5.341,1353,5.341,1354,5.341,1355,4.663]],["title/injectables/SubscribersService.html",[124,0.795,1336,2.608]],["body/injectables/SubscribersService.html",[3,0.085,4,0.076,5,0.057,7,0.308,8,1.2,11,0.013,12,0.93,14,1.821,15,0.281,20,0.452,35,0.085,36,0.132,37,1.749,38,1.3,40,2.169,43,1.707,47,0.006,48,0.006,79,0.744,86,1.355,87,1.827,88,1.355,89,0.72,105,1.003,108,3.048,119,2.862,120,1.629,124,0.838,125,1.038,128,0.93,141,2.672,144,2.087,145,0.723,146,0.862,147,1.954,148,1.934,149,2.871,167,1.003,180,1.202,213,2.64,267,2.081,279,1.83,286,1.843,308,1.626,312,1.718,317,2.342,321,1.2,322,1.749,323,1.749,324,1.749,328,1.888,329,2.276,335,2.276,339,1.447,340,1.749,349,1.202,352,1.202,354,1.202,382,3.003,386,2.222,388,2.75,393,1.479,395,1.718,396,1.55,397,1.629,402,1.249,403,3.13,404,3.489,405,1.718,406,1.718,407,1.718,408,2.597,409,1.718,410,1.718,411,2.597,412,1.718,413,2.342,414,2.597,415,2.597,417,2.597,418,1.718,419,1.718,420,2.597,421,2.597,422,2.597,423,2.462,424,1.076,425,2.597,427,1.718,428,1.718,429,1.718,430,1.718,431,1.718,432,1.718,433,1.718,434,1.718,435,1.718,436,1.718,437,1.718,440,1.003,441,1.249,492,2.462,603,4.334,679,1.938,687,2.499,688,2.499,901,3.777,941,1.629,948,1.938,955,2.499,956,3.777,1321,3.777,1331,3.777,1332,4.446,1336,2.75,1338,3.416,1355,2.499,1356,2.499,1357,4.326,1358,2.862,1359,2.862,1360,2.862,1361,2.862,1362,2.862,1363,4.326,1364,2.862,1365,2.862,1366,2.862,1367,5.215,1368,2.499,1369,2.862,1370,2.499,1371,2.862,1372,2.862,1373,2.862,1374,2.862,1375,2.862,1376,2.862,1377,2.862,1378,2.862,1379,4.326,1380,2.862,1381,2.862]],["title/injectables/TransformInterceptor.html",[124,0.795,1147,2.983]],["body/injectables/TransformInterceptor.html",[3,0.146,4,0.13,5,0.098,7,0.526,8,1.749,11,0.013,12,0.861,14,1.358,15,0.305,20,0.773,35,0.188,36,0.226,37,1.98,41,2.531,43,1.273,47,0.009,48,0.009,84,3.316,124,1.222,125,1.777,128,0.694,144,1.93,145,0.649,146,0.797,147,1.807,151,3.113,173,2.224,357,2.224,386,1.658,660,3.56,712,4.724,789,3.113,870,4.275,871,6.161,874,5.356,876,4.585,886,3.866,1138,3.866,1139,5.506,1140,5.506,1141,6.432,1142,6.091,1143,3.56,1144,4.275,1145,4.275,1146,3.56,1147,4.585,1148,6.091,1149,6.091,1150,4.275,1151,4.275,1152,4.275,1153,4.275,1154,4.275,1382,4.897,1383,4.897,1384,4.897]],["title/classes/UpdateCompanyDto.html",[36,0.189,344,2.778]],["body/classes/UpdateCompanyDto.html",[3,0.181,4,0.161,5,0.121,11,0.012,15,0.307,35,0.181,36,0.332,47,0.011,48,0.011,321,1.684,326,3.86,344,4.879,353,4.793,399,2.366,443,1.479,485,2.549,525,4.793,866,3.409,1385,5.301,1386,7.204,1387,3.455,1388,3.287,1389,3.287]],["title/classes/UpdateFileDto.html",[36,0.189,721,2.778]],["body/classes/UpdateFileDto.html",[3,0.184,4,0.164,5,0.124,11,0.012,15,0.291,35,0.184,36,0.285,47,0.011,48,0.011,321,1.713,443,1.505,534,3.925,536,4.875,721,4.927,742,4.875,866,3.444,1387,3.514,1388,3.343,1389,3.343,1390,5.391,1391,7.276]],["title/classes/UpdateJobDto.html",[36,0.189,828,2.778]],["body/classes/UpdateJobDto.html",[3,0.184,4,0.164,5,0.124,11,0.012,15,0.291,35,0.184,36,0.285,47,0.011,48,0.011,321,1.713,443,1.505,474,4.489,491,3.706,828,4.927,834,4.875,866,3.444,1387,3.514,1388,3.343,1389,3.343,1392,5.391,1393,7.276]],["title/classes/UpdatePermissionDto.html",[36,0.189,1090,2.608]],["body/classes/UpdatePermissionDto.html",[3,0.184,4,0.164,5,0.124,11,0.012,15,0.291,35,0.184,36,0.285,47,0.011,48,0.011,321,1.713,443,1.505,551,3.925,553,4.875,866,3.444,1090,4.626,1094,4.875,1387,3.514,1388,3.343,1389,3.343,1394,5.391,1395,7.276]],["title/classes/UpdateResumeDto.html",[36,0.189,1194,2.778]],["body/classes/UpdateResumeDto.html",[3,0.184,4,0.164,5,0.124,11,0.012,15,0.291,35,0.184,36,0.285,47,0.011,48,0.011,321,1.713,443,1.505,562,3.514,564,4.182,866,3.444,1193,4.875,1194,4.927,1387,3.514,1388,3.343,1389,3.343,1396,5.391,1397,7.276]],["title/classes/UpdateRoleDto.html",[36,0.189,1263,2.778]],["body/classes/UpdateRoleDto.html",[3,0.184,4,0.164,5,0.124,11,0.012,15,0.291,35,0.184,36,0.285,47,0.011,48,0.011,321,1.713,443,1.505,581,3.925,583,4.875,866,3.444,1263,4.927,1266,4.875,1387,3.514,1388,3.343,1389,3.343,1398,5.391,1399,7.276]],["title/classes/UpdateSubscriberDto.html",[36,0.189,1332,2.778]],["body/classes/UpdateSubscriberDto.html",[3,0.184,4,0.164,5,0.124,11,0.012,15,0.291,35,0.184,36,0.285,47,0.011,48,0.011,321,1.713,443,1.505,603,3.925,605,4.875,866,3.444,1332,4.927,1338,4.875,1339,4.875,1387,3.514,1388,3.343,1389,3.343,1400,7.276]],["title/classes/UpdateUserDto.html",[36,0.189,1401,2.778]],["body/classes/UpdateUserDto.html",[3,0.163,4,0.145,5,0.11,7,0.588,10,1.292,11,0.013,12,0.747,15,0.294,35,0.163,36,0.312,40,2.004,41,1.987,47,0.01,48,0.01,128,0.958,146,0.692,165,2.705,178,3.708,245,1.703,279,1.972,321,1.519,339,1.877,399,2.134,443,1.334,475,2.591,476,2.841,477,2.841,478,2.953,485,2.841,510,2.953,514,3.481,866,3.203,1387,3.116,1388,2.965,1389,2.965,1401,4.583,1402,5.908,1403,6.767,1404,5.476,1405,5.476]],["title/classes/UpdatedBy.html",[36,0.189,440,1.437]],["body/classes/UpdatedBy.html",[3,0.101,4,0.09,5,0.068,7,0.366,10,1.16,11,0.013,12,0.671,15,0.231,35,0.189,36,0.322,41,2.921,47,0.007,48,0.007,89,1.238,128,1.125,145,0.506,146,0.884,148,0.885,167,1.193,234,1.456,245,1.238,264,1.758,279,1.55,286,1.857,332,2.122,339,1.602,386,1.665,399,1.326,424,2.17,440,2.35,443,0.829,445,1.485,453,1.546,471,1.916,476,3.38,477,3.336,478,3.468,482,2.043,483,3.33,484,2.852,485,3.414,486,1.843,488,3.126,489,3.33,490,1.758,493,2.54,494,2.54,503,2.305,505,2.54,506,2.305,510,2.146,511,2.327,512,1.611,562,1.937,563,4.198,564,2.305,565,2.305,566,3.795,567,2.305,568,3.795,569,3.575,570,2.305,575,1.546,580,2.687,1406,3.404,1407,3.404,1408,3.404]],["title/classes/User.html",[36,0.189,148,1.066]],["body/classes/User.html",[3,0.102,4,0.091,5,0.069,7,0.368,10,1.901,11,0.013,12,1.099,15,0.232,35,0.173,36,0.158,40,1.014,47,0.007,48,0.007,79,0.89,89,1.243,105,2.356,128,1.141,145,0.653,146,1.055,148,1.284,198,4.213,234,2.075,236,2.177,245,1.243,279,1.703,286,1.763,332,1.833,379,1.925,386,1.672,402,2.528,424,2.178,440,2.03,441,2.528,443,0.835,445,2.528,446,2.993,447,3.137,449,3.137,451,5.01,453,3.181,455,3.434,456,4.035,457,4.002,462,2.811,468,2.056,469,2.811,470,2.056,471,2.814,510,2.528,511,2.742,512,2.742,631,2.32,655,2.32,731,3.9,1157,2.704,1158,3.9,1310,4.313,1409,2.49,1410,3.425,1411,3.425,1412,3.425,1413,3.425,1414,3.425,1415,3.425,1416,3.425,1417,3.425,1418,3.425,1419,3.425,1420,3.425,1421,3.425,1422,3.425,1423,3.425,1424,3.425,1425,3.425,1426,2.991]],["title/classes/UserLoginDto.html",[36,0.189,176,2.462]],["body/classes/UserLoginDto.html",[3,0.107,4,0.095,5,0.072,7,0.386,10,1.205,11,0.013,12,0.697,15,0.259,35,0.193,36,0.328,39,2.877,41,2.943,47,0.008,48,0.008,89,1.286,128,1.142,145,0.733,146,0.819,165,1.773,176,3.066,177,3.569,186,1.507,234,1.919,245,1.286,261,3.569,279,0.964,286,1.883,332,2.167,339,1.417,386,2.013,399,1.399,443,0.874,445,2.229,448,2.827,471,1.99,476,3.387,477,3.341,478,3.473,484,2.938,485,3.406,486,2.766,487,3.781,488,2.766,490,1.854,493,3.072,494,3.072,505,2.639,510,3.323,511,3.066,512,2.417,514,2.282,517,3.459,518,4.324,519,2.609,520,2.042,521,3.714,522,3.714,523,3.714,1427,5.108,1428,3.589,1429,3.589]],["title/controllers/UsersController.html",[0,1.215,1430,2.983]],["body/controllers/UsersController.html",[0,1.12,2,1.12,3,0.113,4,0.1,5,0.076,7,0.406,8,1.47,10,1.647,11,0.013,12,0.953,14,1.937,15,0.297,16,2.618,20,0.597,35,0.113,36,0.174,39,1.529,43,1.815,47,0.008,48,0.008,87,1.325,119,2.784,128,1.151,133,1.868,141,2.604,144,2.137,145,0.719,146,0.883,147,2.001,148,2.134,165,1.868,166,4.628,167,1.857,170,2.048,172,1.79,173,1.718,178,3.59,185,1.954,186,1.588,201,3.302,250,3.313,308,1.992,321,1.47,322,2.474,323,2.143,324,2.143,328,1.651,329,2.894,335,2.313,336,1.954,339,1.937,340,1.529,341,2.152,347,2.87,348,2.152,349,2.225,352,1.588,354,1.588,357,1.718,358,2.561,360,3.854,361,2.27,362,2.27,364,2.152,365,2.152,369,2.152,520,4.119,678,3.854,823,2.75,825,3.854,829,3.854,1401,4.902,1430,3.854,1431,3.302,1432,3.302,1433,3.782,1434,3.782,1435,3.782,1436,3.782,1437,3.782,1438,3.782,1439,3.782,1440,3.302,1441,3.782,1442,3.782,1443,3.302,1444,3.302,1445,3.782,1446,3.782,1447,3.782,1448,3.782,1449,3.782,1450,3.782,1451,3.782,1452,3.782]],["title/modules/UsersModule.html",[49,1.033,71,2.608]],["body/modules/UsersModule.html",[2,1.918,3,0.152,4,0.135,5,0.102,11,0.013,15,0.316,20,0.805,35,0.152,36,0.235,47,0.01,48,0.01,49,1.79,51,2.143,52,2.143,53,2.318,54,2.318,55,2.143,56,3.23,57,3.23,71,5.095,72,2.941,73,2.318,74,2.318,76,2.415,78,2.521,79,1.327,145,0.667,148,1.327,234,1.511,235,3.886,236,3.244,250,4.518,377,2.763,379,2.523,631,4.385,635,4.456,636,4.029,1430,5.171,1443,4.456,1453,4.456,1454,5.103,1455,4.456,1456,5.103,1457,4.456,1458,5.103]],["title/injectables/UsersService.html",[124,0.795,250,2.221]],["body/injectables/UsersService.html",[3,0.06,4,0.053,5,0.04,7,0.216,8,0.91,11,0.013,12,0.958,14,1.783,15,0.281,20,0.318,23,3.537,24,1.09,35,0.06,36,0.093,37,1.326,38,1.49,40,2.206,41,0.73,43,1.794,47,0.005,48,0.005,79,0.523,86,0.953,87,1.455,88,0.953,89,1.045,108,3.082,119,2.503,120,1.145,124,0.636,125,0.73,128,1.093,141,2.089,144,2.023,145,0.752,146,0.855,147,1.894,148,1.825,149,2.945,165,2.604,167,1.981,178,2.221,198,4.334,213,3.072,234,1.561,236,1.28,245,0.826,247,2.864,250,1.776,261,1.969,263,2.811,264,2.144,267,2.385,269,1.757,270,1.757,271,1.589,274,2.864,277,1.463,279,1.817,286,1.564,308,1.233,312,2.873,317,1.776,321,0.91,322,1.326,323,1.935,324,1.326,328,1.431,329,1.812,332,0.637,335,1.812,336,1.694,339,1.462,340,1.326,349,0.845,352,0.845,354,0.845,382,3.079,386,1.914,393,1.04,395,1.208,396,1.09,397,1.145,403,2.873,404,1.969,405,1.208,406,1.208,407,1.208,408,1.969,409,1.208,410,1.208,411,1.969,412,1.208,413,2.854,414,1.969,415,1.969,417,1.969,418,1.208,419,1.208,420,1.969,421,1.969,422,1.969,423,1.867,424,0.757,425,1.969,427,1.208,428,1.208,429,1.208,430,1.208,431,1.208,432,1.208,433,1.208,434,1.208,435,1.208,436,1.208,437,1.208,440,0.705,441,0.878,445,1.431,446,1.694,447,1.09,449,1.09,510,2.3,511,1.552,512,1.552,520,3,556,2.491,645,1.757,647,3.277,650,2.864,654,1.28,655,1.363,658,2.385,663,1.589,678,1.463,679,1.363,693,1.589,738,1.757,1240,3.624,1241,4.162,1288,1.757,1295,2.864,1298,2.864,1302,1.757,1303,1.757,1368,1.757,1401,3.828,1440,2.864,1444,1.757,1457,1.757,1459,1.757,1460,4.151,1461,4.151,1462,3.28,1463,3.28,1464,2.013,1465,3.28,1466,2.013,1467,2.013,1468,2.013,1469,3.28,1470,2.013,1471,3.28,1472,6.215,1473,2.013,1474,3.28,1475,2.013,1476,2.013,1477,2.013,1478,3.28,1479,2.013,1480,2.013,1481,2.013,1482,2.013,1483,3.28,1484,2.013,1485,2.013,1486,2.013,1487,2.013,1488,3.28,1489,2.013,1490,3.28,1491,2.013,1492,4.787,1493,4.151,1494,4.151,1495,3.28,1496,2.013,1497,3.28,1498,2.013,1499,2.013,1500,2.013,1501,2.013,1502,3.28,1503,4.151,1504,2.013,1505,2.013,1506,2.013,1507,2.013,1508,2.013,1509,2.013,1510,2.013,1511,2.013,1512,4.151,1513,2.013,1514,2.013,1515,4.151,1516,2.013,1517,2.013,1518,2.013,1519,2.013,1520,2.013,1521,2.013,1522,2.013,1523,2.013]],["title/coverage.html",[1524,4.896]],["body/coverage.html",[0,2.148,1,1.763,5,0.076,6,2.118,11,0.013,21,1.542,27,1.643,29,1.38,31,1.643,33,1.253,36,0.375,47,0.006,48,0.006,55,1.018,124,1.496,126,2.118,131,1.763,132,2.118,141,0.85,146,0.841,148,0.99,151,1.542,165,1.198,167,0.85,172,1.148,176,1.456,177,3.196,181,1.253,219,1.643,220,1.643,228,1.763,234,0.718,235,1.456,244,2.118,250,1.313,318,1.763,319,2.118,326,1.542,332,1.488,344,1.643,350,1.542,375,1.763,380,2.118,394,1.763,440,0.85,444,3.418,473,3.006,474,3.418,491,1.456,514,3.679,520,1.38,524,2.118,525,3.006,534,1.542,535,2.118,536,3.006,551,1.542,552,2.118,553,3.006,562,1.38,563,3.418,564,3.607,566,1.456,575,1.101,581,1.542,582,2.118,583,3.006,596,1.058,603,1.542,604,1.915,605,3.006,621,1.763,622,2.118,624,1.542,631,1.643,633,1.643,639,1.542,641,1.643,642,2.118,653,1.542,654,1.542,655,1.643,656,1.763,657,1.915,658,1.763,673,6.789,713,2.118,714,1.763,715,2.118,721,1.643,740,1.542,771,1.763,774,2.118,789,2.421,791,2.118,792,3.418,810,1.643,812,1.763,813,2.118,828,1.643,832,1.542,849,2.118,865,2.118,881,1.915,882,1.915,907,2.118,925,2.118,927,2.118,936,1.763,937,2.118,941,1.38,943,1.542,948,1.643,993,1.643,1010,2.118,1011,2.118,1069,3.418,1082,1.763,1083,2.118,1090,1.542,1092,1.542,1108,2.118,1138,3.006,1146,1.763,1147,1.763,1155,1.456,1156,3.418,1174,1.763,1176,1.763,1177,2.118,1191,1.542,1194,1.643,1211,2.118,1224,1.915,1242,3.418,1255,1.763,1256,2.118,1263,1.643,1280,2.118,1305,3.418,1318,1.763,1319,2.118,1332,1.643,1335,1.915,1336,1.542,1339,1.915,1356,2.118,1385,2.118,1390,2.118,1392,2.118,1394,2.118,1396,2.118,1398,2.118,1401,1.643,1402,2.118,1409,3.418,1430,1.763,1431,2.118,1459,2.118,1524,2.118,1525,2.425,1526,2.425,1527,2.425,1528,5.326,1529,6.841,1530,5.326,1531,2.118,1532,7.771,1533,8.292,1534,6.423,1535,6.142,1536,6.142,1537,4.701,1538,4.701,1539,6.423,1540,4.105,1541,5.608,1542,2.425,1543,2.425,1544,2.118,1545,2.425,1546,3.808,1547,2.425,1548,2.118,1549,2.425,1550,2.425,1551,2.425,1552,2.425,1553,2.425]],["title/dependencies.html",[52,2.072,1554,2.988]],["body/dependencies.html",[11,0.013,20,0.792,24,2.719,26,3.013,36,0.295,47,0.01,48,0.01,52,2.108,79,1.305,84,3.4,86,2.376,87,1.759,88,2.376,89,1.613,100,3.964,102,3.964,179,3.013,186,2.108,227,3.964,231,3.964,271,3.964,349,2.108,396,2.719,397,2.857,399,1.957,490,2.594,744,3.651,916,5.573,917,4.384,932,4.384,946,3.651,947,3.964,951,4.384,1143,3.651,1388,2.719,1389,2.719,1555,5.021,1556,7.059,1557,5.021,1558,5.021,1559,5.021,1560,5.021,1561,5.021,1562,5.021,1563,5.021,1564,5.021,1565,5.021,1566,6.409,1567,5.021,1568,5.021,1569,5.021,1570,5.021,1571,5.021,1572,5.021,1573,5.021,1574,5.021,1575,5.021,1576,5.021,1577,5.021,1578,5.021,1579,5.021,1580,5.021,1581,5.021,1582,5.021,1583,5.021,1584,5.021,1585,5.021,1586,5.021,1587,5.021,1588,5.021,1589,5.021,1590,5.021,1591,5.021]],["title/miscellaneous/functions.html",[1592,2.175,1593,4.31]],["body/miscellaneous/functions.html",[7,0.701,11,0.011,47,0.011,48,0.011,55,3.323,1544,5.698,1592,4.149,1593,5.698,1594,6.526]],["title/index.html",[7,0.368,1595,3.422,1596,3.422]],["body/index.html",[11,0.012,47,0.01,48,0.01,321,1.508,413,2.943,477,2.282,513,4.291,529,4.291,589,5.881,679,4.562,681,4.745,685,4.745,690,4.745,703,6.328,946,3.951,1370,4.745,1597,6.736,1598,5.435,1599,5.435,1600,6.736,1601,6.736,1602,6.736,1603,5.435,1604,5.435,1605,6.736,1606,6.736,1607,6.736,1608,6.736,1609,5.435,1610,5.435,1611,6.736,1612,5.435,1613,5.435,1614,5.435,1615,5.435,1616,5.435,1617,5.435,1618,5.435,1619,5.435,1620,5.435,1621,5.435,1622,4.745,1623,5.435,1624,5.435,1625,5.435,1626,5.435,1627,5.435,1628,5.435,1629,5.435,1630,5.435,1631,5.435,1632,5.435,1633,5.435,1634,5.435,1635,5.435,1636,5.435,1637,5.435]],["title/modules.html",[51,2.354]],["body/modules.html",[11,0.01,47,0.01,48,0.01,50,4.095,51,2.364,61,3.814,62,3.814,63,3.814,64,3.814,65,3.814,66,3.814,67,3.814,68,3.814,69,3.58,70,3.814,71,3.58,974,7.38,1638,8.452,1639,8.452,1640,8.452]],["title/overview.html",[1641,4.896]],["body/overview.html",[2,1.158,11,0.013,21,3.961,29,4.269,47,0.008,48,0.008,49,0.984,50,6.14,51,1.642,52,1.642,53,1.776,54,1.776,55,1.642,56,1.776,57,1.776,58,3.415,59,3.415,60,3.415,61,5.501,62,4.787,63,5.08,64,4.787,65,4.787,66,4.787,67,4.787,68,4.787,69,4.769,70,4.787,71,4.769,72,2.464,73,1.776,74,1.776,125,1.419,181,3.875,215,3.415,216,3.415,217,3.415,219,4.219,220,4.219,250,4.141,350,3.961,371,3.415,372,3.415,443,0.953,513,3.088,624,3.961,627,3.415,628,3.415,740,3.961,766,3.415,767,3.415,790,3.088,832,3.961,844,3.415,845,3.415,943,3.961,985,3.415,986,3.415,1092,3.961,1104,3.415,1105,3.415,1191,3.961,1206,3.415,1207,3.415,1274,3.415,1275,3.415,1276,3.415,1336,3.961,1350,3.415,1351,3.415,1453,3.415,1455,3.415,1641,3.415,1642,5.426,1643,3.911,1644,3.911]],["title/properties.html",[245,1.242,1554,2.988]],["body/properties.html",[11,0.012,47,0.011,48,0.011,245,1.618,448,2.806,703,5.076,1622,5.614,1645,6.43,1646,6.43,1647,6.43,1648,6.43,1649,6.43]],["title/miscellaneous/typealiases.html",[1592,2.175,1650,4.936]],["body/miscellaneous/typealiases.html",[7,0.642,11,0.011,47,0.011,48,0.011,146,0.755,394,5.186,444,4.342,469,4.714,653,4.535,654,4.535,655,4.831,792,4.342,810,4.831,948,4.831,1069,4.342,1156,4.342,1174,5.186,1242,4.342,1305,4.342,1409,4.342,1592,3.796,1651,5.971,1652,5.214,1653,5.214,1654,5.214,1655,5.214,1656,5.214,1657,5.214,1658,5.214]],["title/miscellaneous/variables.html",[1592,2.175,1659,4.31]],["body/miscellaneous/variables.html",[4,0.035,5,0.027,7,0.143,11,0.013,16,2.563,19,0.968,33,1.195,40,0.394,41,0.84,43,0.346,47,0.003,48,0.003,49,1.894,87,2.109,105,0.811,128,0.646,145,0.775,146,0.656,148,1.414,149,0.657,172,1.095,228,1.683,234,1.087,235,1.389,238,1.827,263,4.622,264,3.567,273,5.472,279,2.188,284,2.147,286,1.903,308,1.714,320,3.629,321,1.359,332,1.315,333,3.315,339,1.265,347,2.469,375,1.683,402,3.284,423,0.757,424,2.829,440,0.466,444,0.968,446,3.888,447,4.075,449,4.075,457,1.253,472,1.162,554,4.785,555,5.097,568,0.799,575,1.888,596,1.814,631,1.567,633,1.567,639,1.471,641,1.567,656,1.683,657,1.827,658,1.683,673,5.942,704,6.601,712,0.901,716,1.051,726,1.162,792,0.968,811,1.162,814,3.281,874,0.968,881,1.827,882,1.827,884,1.162,894,1.162,922,5.942,993,1.567,1069,0.968,1081,1.162,1146,2.232,1155,2.495,1156,0.968,1175,1.162,1178,4.277,1224,1.827,1242,0.968,1254,1.162,1257,3.981,1305,0.968,1317,1.162,1335,1.827,1409,0.968,1426,1.162,1432,3.629,1531,1.162,1540,1.162,1541,1.162,1548,1.162,1592,0.846,1652,1.162,1653,1.162,1654,1.162,1655,1.162,1656,1.162,1657,1.162,1658,1.162,1659,1.162,1660,3.07,1661,4.899,1662,1.331,1663,1.331,1664,1.331,1665,1.331,1666,2.314,1667,7.561,1668,8.137,1669,8.137,1670,1.331,1671,1.331,1672,7.526,1673,1.331,1674,2.314,1675,1.331,1676,3.07,1677,2.314,1678,1.331,1679,2.314,1680,1.331,1681,2.314,1682,1.331,1683,2.314,1684,2.314,1685,1.331,1686,3.07,1687,2.314,1688,1.331,1689,2.314,1690,1.331,1691,2.314,1692,1.331,1693,2.314,1694,1.331,1695,1.331,1696,1.331,1697,2.314,1698,1.331,1699,2.314,1700,2.314,1701,1.331,1702,3.07,1703,2.314,1704,1.331,1705,2.314,1706,1.331,1707,2.314,1708,1.331,1709,2.314,1710,1.331,1711,2.314,1712,2.314,1713,1.331,1714,4.56,1715,2.314,1716,1.331,1717,3.07,1718,2.314,1719,1.331,1720,2.314,1721,1.331,1722,2.314,1723,1.331,1724,1.331,1725,2.314,1726,1.331,1727,2.314,1728,2.314,1729,1.331,1730,2.314,1731,1.331,1732,3.07,1733,2.314,1734,1.331,1735,2.314,1736,1.331,1737,2.314,1738,1.331,1739,2.314,1740,2.314,1741,1.331,1742,2.314,1743,1.331,1744,3.07,1745,2.314,1746,1.331,1747,2.314,1748,1.331,1749,2.314,1750,1.331,1751,1.331,1752,1.331,1753,1.331,1754,1.331,1755,1.331,1756,1.331,1757,1.331,1758,1.331,1759,1.331,1760,1.331,1761,1.331,1762,1.331,1763,1.331,1764,2.314,1765,2.314,1766,2.314,1767,2.314]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":673,"title":{},"body":{"injectables/DatabasesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.1",{"_index":1646,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":1589,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":1568,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":1567,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":1584,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1533,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1542,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1549,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1538,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1551,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1547,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":1550,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":1543,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1528,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1535,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1534,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1537,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1529,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1536,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1530,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1546,"title":{},"body":{"coverage.html":{}}}],["06",{"_index":1669,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":413,"title":{"classes/Company-1.html":{}},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["1.0.0",{"_index":1586,"title":{},"body":{"dependencies.html":{}}}],["1.0.17",{"_index":1591,"title":{},"body":{"dependencies.html":{}}}],["1.2.2",{"_index":1559,"title":{},"body":{"dependencies.html":{}}}],["1.4.6",{"_index":1571,"title":{},"body":{"dependencies.html":{}}}],["1.8.1",{"_index":1555,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["10.0.3",{"_index":1558,"title":{},"body":{"dependencies.html":{}}}],["1000",{"_index":243,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["12",{"_index":1642,"title":{},"body":{"overview.html":{}}}],["123",{"_index":523,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["15t06:47:49.369z",{"_index":1670,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:48:22.224z",{"_index":1674,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:51:01.241z",{"_index":1677,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:51:23.973z",{"_index":1679,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:54:05.131z",{"_index":1671,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:54:32.799z",{"_index":1681,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:59:31.898z",{"_index":1684,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:59:51.041z",{"_index":1687,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t07:00:13.364z",{"_index":1689,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t07:00:41.934z",{"_index":1691,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t07:00:56.274z",{"_index":1693,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t07:01:36.923z",{"_index":1697,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:06:16.508z",{"_index":1700,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:06:33.697z",{"_index":1703,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:06:46.085z",{"_index":1705,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:07:24.175z",{"_index":1707,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:07:37.896z",{"_index":1709,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:08:14.659z",{"_index":1712,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:08:33.395z",{"_index":1715,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:08:50.801z",{"_index":1718,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:09:15.785z",{"_index":1720,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:09:41.694z",{"_index":1722,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:10:05.961z",{"_index":1725,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:10:50.946z",{"_index":1728,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:11:10.914z",{"_index":1730,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:11:33.234z",{"_index":1733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:11:48.081z",{"_index":1735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:12:11.323z",{"_index":1737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:12:51.974z",{"_index":1740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:13:06.618z",{"_index":1742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:13:20.853z",{"_index":1745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:13:36.836z",{"_index":1747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:13:52.798z",{"_index":1749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16.0.3",{"_index":1573,"title":{},"body":{"dependencies.html":{}}}],["18",{"_index":1643,"title":{},"body":{"overview.html":{}}}],["2",{"_index":513,"title":{"classes/Company-2.html":{}},"body":{"index.html":{},"overview.html":{}}}],["2.1.3",{"_index":1581,"title":{},"body":{"dependencies.html":{}}}],["2.3.1",{"_index":1557,"title":{},"body":{"dependencies.html":{}}}],["2.4.3",{"_index":1566,"title":{},"body":{"dependencies.html":{}}}],["2023",{"_index":1668,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3.0.1",{"_index":1562,"title":{},"body":{"dependencies.html":{}}}],["3.1.9",{"_index":1575,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":1644,"title":{},"body":{"overview.html":{}}}],["4.0.1",{"_index":1585,"title":{},"body":{"dependencies.html":{}}}],["4.1.0",{"_index":1564,"title":{},"body":{"dependencies.html":{}}}],["4.7.7",{"_index":1577,"title":{},"body":{"dependencies.html":{}}}],["5.4.0",{"_index":1565,"title":{},"body":{"dependencies.html":{}}}],["6.9.3",{"_index":1583,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["647b5108a8a243e8191855b5",{"_index":1667,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab415f4328bd3153ee211",{"_index":1665,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab436f4328bd3153ee216",{"_index":1673,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab4d5f4328bd3153ee21b",{"_index":1675,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab4ebf4328bd3153ee220",{"_index":1678,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab5a8072f2a2ef910638d",{"_index":1680,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab6d3fa16b294212e4033",{"_index":1682,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab6e7fa16b294212e4038",{"_index":1685,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab6fdfa16b294212e403d",{"_index":1688,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab719fa16b294212e4042",{"_index":1690,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab728fa16b294212e4047",{"_index":1692,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab750fa16b294212e404c",{"_index":1694,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad488dafdb9754f40b846",{"_index":1698,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad499dafdb9754f40b84b",{"_index":1701,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad4a6dafdb9754f40b850",{"_index":1704,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad4ccdafdb9754f40b859",{"_index":1706,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad4d9dafdb9754f40b85e",{"_index":1708,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad4fedafdb9754f40b863",{"_index":1710,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad511dafdb9754f40b868",{"_index":1713,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad522dafdb9754f40b86d",{"_index":1716,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad53bdafdb9754f40b872",{"_index":1719,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad555dafdb9754f40b877",{"_index":1721,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad56ddafdb9754f40b87c",{"_index":1723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad59adafdb9754f40b881",{"_index":1726,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad5aedafdb9754f40b886",{"_index":1729,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad5c5dafdb9754f40b88b",{"_index":1731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad5d4dafdb9754f40b890",{"_index":1734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad5ebdafdb9754f40b895",{"_index":1736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad613dafdb9754f40b89a",{"_index":1738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad622dafdb9754f40b89f",{"_index":1741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad630dafdb9754f40b8a6",{"_index":1743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad640dafdb9754f40b8ab",{"_index":1746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad650dafdb9754f40b8b0",{"_index":1748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["69",{"_index":699,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["7.0.4",{"_index":1563,"title":{},"body":{"dependencies.html":{}}}],["7.1.0",{"_index":1580,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":1590,"title":{},"body":{"dependencies.html":{}}}],["7039",{"_index":1631,"title":{},"body":{"index.html":{}}}],["8.0.0",{"_index":1579,"title":{},"body":{"dependencies.html":{}}}],["9.0.3",{"_index":1561,"title":{},"body":{"dependencies.html":{}}}],["9.2.2",{"_index":1560,"title":{},"body":{"dependencies.html":{}}}],["9.4.0",{"_index":1556,"title":{},"body":{"dependencies.html":{}}}],["96",{"_index":705,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["__v",{"_index":1672,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_id",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateUserDto.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["_id.tostring",{"_index":310,"title":{},"body":{"injectables/AuthService.html":{}}}],["access_token",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{}}}],["action",{"_index":781,"title":{},"body":{"injectables/FilesService.html":{}}}],["active",{"_index":586,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["adapter",{"_index":1004,"title":{},"body":{"modules/MailModule.html":{}}}],["add",{"_index":691,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["address",{"_index":445,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/History.html":{},"classes/RegisterUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{}}}],["adds",{"_index":782,"title":{},"body":{"injectables/FilesService.html":{}}}],["admin",{"_index":678,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/RolesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["admin_role",{"_index":656,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/RolesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["adminrole",{"_index":692,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["adminrole?._id",{"_index":702,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["again",{"_index":315,"title":{},"body":{"injectables/AuthService.html":{}}}],["age",{"_index":511,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/History.html":{},"classes/RegisterUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{}}}],["alias",{"_index":1539,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":1651,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["already",{"_index":710,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"injectables/RolesService.html":{}}}],["api",{"_index":396,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/CreatePermissionDto.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["api/v1/companies",{"_index":1666,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/companies/:id",{"_index":1676,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/files/upload",{"_index":1696,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/jobs",{"_index":1699,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/jobs/:id",{"_index":1702,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/permissions",{"_index":1727,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/permissions/:id",{"_index":1732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/resumes",{"_index":1711,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/resumes/:id",{"_index":1717,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/resumes/by",{"_index":1724,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/roles",{"_index":1739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/roles/:id",{"_index":1744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/users",{"_index":1683,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/users/:id",{"_index":1686,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apibody",{"_index":184,"title":{},"body":{"controllers/AuthController.html":{},"controllers/FilesController.html":{}}}],["apiconsumes",{"_index":745,"title":{},"body":{"controllers/FilesController.html":{}}}],["apiconsumes('multipart/form",{"_index":754,"title":{},"body":{"controllers/FilesController.html":{}}}],["apiheader",{"_index":746,"title":{},"body":{"controllers/FilesController.html":{}}}],["apipath",{"_index":554,"title":{},"body":{"classes/CreatePermissionDto.html":{},"interfaces/IUser.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"injectables/RolesService.html":{},"miscellaneous/variables.html":{}}}],["apiproperty",{"_index":518,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["apitags",{"_index":185,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["apitags('authentication",{"_index":187,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('companies",{"_index":355,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["apitags('files",{"_index":747,"title":{},"body":{"controllers/FilesController.html":{}}}],["apitags('jobs",{"_index":835,"title":{},"body":{"controllers/JobsController.html":{}}}],["apitags('mail",{"_index":953,"title":{},"body":{"controllers/MailController.html":{}}}],["apitags('permissions",{"_index":1096,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["apitags('resumes",{"_index":1195,"title":{},"body":{"controllers/ResumesController.html":{}}}],["apitags('roles",{"_index":1267,"title":{},"body":{"controllers/RolesController.html":{}}}],["apitags('subscriber",{"_index":1340,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["apitags('users",{"_index":1445,"title":{},"body":{"controllers/UsersController.html":{}}}],["app",{"_index":979,"title":{},"body":{"controllers/MailController.html":{}}}],["app.controller",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_guard",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appmodule",{"_index":50,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approve",{"_index":1767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appservice",{"_index":21,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["aqp",{"_index":395,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["aqp(qs",{"_index":408,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["arguments",{"_index":892,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["array",{"_index":496,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/Resume.html":{}}}],["array'})@isstring({each",{"_index":548,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["async",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["auth",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{},"modules/MailModule.html":{}}}],["auth.controller",{"_index":232,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":175,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["auth/auth.module",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/auth.service",{"_index":30,"title":{},"body":{"controllers/AppController.html":{}}}],["auth/jwt.auth.guard",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["auth/local.auth.guard",{"_index":28,"title":{},"body":{"controllers/AppController.html":{}}}],["authcontroller",{"_index":131,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["authguard('jwt",{"_index":867,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('local",{"_index":926,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authmodule",{"_index":61,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1649,"title":{},"body":{"properties.html":{}}}],["authservice",{"_index":29,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["await",{"_index":213,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["badrequestexception",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["badrequestexception('không",{"_index":1302,"title":{},"body":{"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["badrequestexception('not",{"_index":1294,"title":{},"body":{"injectables/RolesService.html":{}}}],["badrequestexception(`email",{"_index":1368,"title":{},"body":{"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["baoit128@gmail.com",{"_index":696,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["based",{"_index":891,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["basename",{"_index":1041,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["bcryptjs",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["binary",{"_index":757,"title":{},"body":{"controllers/FilesController.html":{}}}],["body",{"_index":170,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["body('status",{"_index":1200,"title":{},"body":{"controllers/ResumesController.html":{}}}],["boolean",{"_index":462,"title":{},"body":{"classes/Company.html":{},"classes/CreateRoleDto.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["boolean(isinit",{"_index":666,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["bootstrap",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["break",{"_index":1059,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["browse",{"_index":1640,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1638,"title":{},"body":{"modules.html":{}}}],["build",{"_index":984,"title":{},"body":{"controllers/MailController.html":{}}}],["bulk",{"_index":675,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["bước",{"_index":1598,"title":{},"body":{"index.html":{}}}],["bạn",{"_index":1615,"title":{},"body":{"index.html":{}}}],["bảo",{"_index":703,"title":{},"body":{"injectables/DatabasesService.html":{},"index.html":{},"properties.html":{}}}],["c",{"_index":477,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/History.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/UserLoginDto.html":{},"index.html":{}}}],["callhandler",{"_index":1141,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["canactivate",{"_index":868,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["canactivate(context",{"_index":873,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["case",{"_index":1054,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["catch",{"_index":316,"title":{},"body":{"injectables/AuthService.html":{}}}],["cb",{"_index":1028,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["cb(null",{"_index":1032,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["ch",{"_index":526,"title":{},"body":{"classes/CreateCompanyDto.html":{},"injectables/DatabasesService.html":{}}}],["check",{"_index":1117,"title":{},"body":{"injectables/PermissionsService.html":{},"injectables/RolesService.html":{}}}],["chính",{"_index":1620,"title":{},"body":{"index.html":{}}}],["chạy",{"_index":1600,"title":{},"body":{"index.html":{}}}],["class",{"_index":36,"title":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/File.html":{},"classes/History.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"classes/History.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":443,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/File.html":{},"classes/History.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":215,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":216,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":218,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":217,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_companiesmodule",{"_index":371,"title":{},"body":{"modules/CompaniesModule.html":{},"overview.html":{}}}],["cluster_companiesmodule_providers",{"_index":372,"title":{},"body":{"modules/CompaniesModule.html":{},"overview.html":{}}}],["cluster_databasesmodule",{"_index":627,"title":{},"body":{"modules/DatabasesModule.html":{},"overview.html":{}}}],["cluster_databasesmodule_providers",{"_index":628,"title":{},"body":{"modules/DatabasesModule.html":{},"overview.html":{}}}],["cluster_filesmodule",{"_index":766,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_filesmodule_providers",{"_index":767,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_jobsmodule",{"_index":844,"title":{},"body":{"modules/JobsModule.html":{},"overview.html":{}}}],["cluster_jobsmodule_providers",{"_index":845,"title":{},"body":{"modules/JobsModule.html":{},"overview.html":{}}}],["cluster_mailmodule",{"_index":985,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_mailmodule_providers",{"_index":986,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_permissionsmodule",{"_index":1104,"title":{},"body":{"modules/PermissionsModule.html":{},"overview.html":{}}}],["cluster_permissionsmodule_providers",{"_index":1105,"title":{},"body":{"modules/PermissionsModule.html":{},"overview.html":{}}}],["cluster_resumesmodule",{"_index":1206,"title":{},"body":{"modules/ResumesModule.html":{},"overview.html":{}}}],["cluster_resumesmodule_providers",{"_index":1207,"title":{},"body":{"modules/ResumesModule.html":{},"overview.html":{}}}],["cluster_rolesmodule",{"_index":1274,"title":{},"body":{"modules/RolesModule.html":{},"overview.html":{}}}],["cluster_rolesmodule_exports",{"_index":1275,"title":{},"body":{"modules/RolesModule.html":{},"overview.html":{}}}],["cluster_rolesmodule_providers",{"_index":1276,"title":{},"body":{"modules/RolesModule.html":{},"overview.html":{}}}],["cluster_subscribersmodule",{"_index":1350,"title":{},"body":{"modules/SubscribersModule.html":{},"overview.html":{}}}],["cluster_subscribersmodule_providers",{"_index":1351,"title":{},"body":{"modules/SubscribersModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":1453,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":1455,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":1454,"title":{},"body":{"modules/UsersModule.html":{}}}],["code",{"_index":423,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["command",{"_index":1633,"title":{},"body":{"index.html":{}}}],["companies",{"_index":320,"title":{},"body":{"controllers/CompaniesController.html":{},"miscellaneous/variables.html":{}}}],["companies.controller",{"_index":374,"title":{},"body":{"modules/CompaniesModule.html":{}}}],["companies.service",{"_index":351,"title":{},"body":{"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{}}}],["companies/companies.module",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["companiescontroller",{"_index":318,"title":{"controllers/CompaniesController.html":{}},"body":{"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"coverage.html":{}}}],["companiesmodule",{"_index":62,"title":{"modules/CompaniesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CompaniesModule.html":{},"modules.html":{},"overview.html":{}}}],["companiesservice",{"_index":350,"title":{"injectables/CompaniesService.html":{}},"body":{"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"coverage.html":{},"overview.html":{}}}],["company",{"_index":332,"title":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{}},"body":{"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateUserDto.html":{},"classes/History.html":{},"classes/Job.html":{},"controllers/MailController.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["company.dto",{"_index":353,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/UpdateCompanyDto.html":{}}}],["company.dto.ts",{"_index":525,"title":{},"body":{"classes/CreateCompanyDto.html":{},"classes/UpdateCompanyDto.html":{},"coverage.html":{}}}],["company.dto.ts:12",{"_index":527,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.dto.ts:17",{"_index":530,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.dto.ts:18",{"_index":531,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.dto.ts:7",{"_index":533,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.name",{"_index":378,"title":{},"body":{"modules/CompaniesModule.html":{},"classes/Resume.html":{}}}],["companydocument",{"_index":394,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["companyid",{"_index":565,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/History.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/UpdatedBy.html":{}}}],["companymodel",{"_index":384,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["companyschema",{"_index":375,"title":{},"body":{"modules/CompaniesModule.html":{},"classes/Company.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["comparesync",{"_index":1485,"title":{},"body":{"injectables/UsersService.html":{}}}],["comparesync(password",{"_index":1514,"title":{},"body":{"injectables/UsersService.html":{}}}],["complex",{"_index":1760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["compodoc/compodoc",{"_index":1635,"title":{},"body":{"index.html":{}}}],["configmodule",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["configmodule.forroot",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"injectables/UsersService.html":{}}}],["configservice.get(\"app_password",{"_index":1000,"title":{},"body":{"modules/MailModule.html":{}}}],["configservice.get(\"host_email",{"_index":997,"title":{},"body":{"modules/MailModule.html":{}}}],["configservice.get(\"sender_email",{"_index":999,"title":{},"body":{"modules/MailModule.html":{}}}],["configservice.get('email_preview",{"_index":1008,"title":{},"body":{"modules/MailModule.html":{}}}],["configservice.get('jwt_access_token_secret",{"_index":239,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["configservice.get('mongodb_url",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["conflictexception",{"_index":1116,"title":{},"body":{"injectables/PermissionsService.html":{},"injectables/RolesService.html":{}}}],["connection",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["connection.plugin(softdeleteplugin",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["connectionfactory",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["console.error(error",{"_index":1068,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["console.log('directory",{"_index":1048,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["console.log('port",{"_index":46,"title":{},"body":{"controllers/AppController.html":{}}}],["const",{"_index":40,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"injectables/DatabasesService.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["constants",{"_index":229,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["constructor",{"_index":37,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{}}}],["constructor(authservice",{"_index":928,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(companymodel",{"_index":381,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["constructor(configservice",{"_index":910,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["constructor(jobmodel",{"_index":850,"title":{},"body":{"injectables/JobsService.html":{}}}],["constructor(permissionmodel",{"_index":1109,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["constructor(private",{"_index":357,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/DatabasesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/PermissionsController.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{}}}],["constructor(reflector",{"_index":870,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/TransformInterceptor.html":{}}}],["constructor(resumemodel",{"_index":1213,"title":{},"body":{"injectables/ResumesService.html":{}}}],["constructor(rolemodel",{"_index":1281,"title":{},"body":{"injectables/RolesService.html":{}}}],["constructor(subscribermodel",{"_index":1358,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["constructor(usermodel",{"_index":645,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/UsersService.html":{}}}],["constructor(usersservice",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{}}}],["contains",{"_index":1063,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["context",{"_index":876,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"controllers/MailController.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["context.getclass",{"_index":887,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["context.gethandler",{"_index":886,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["context.switchtohttp().getrequest",{"_index":889,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["context.switchtohttp().getresponse().statuscode",{"_index":1152,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/DatabasesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/DatabasesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":188,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('companies",{"_index":356,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["controller('databases",{"_index":626,"title":{},"body":{"controllers/DatabasesController.html":{}}}],["controller('files",{"_index":748,"title":{},"body":{"controllers/FilesController.html":{}}}],["controller('jobs",{"_index":836,"title":{},"body":{"controllers/JobsController.html":{}}}],["controller('mail",{"_index":954,"title":{},"body":{"controllers/MailController.html":{}}}],["controller('permissions",{"_index":1097,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["controller('resumes",{"_index":1196,"title":{},"body":{"controllers/ResumesController.html":{}}}],["controller('roles",{"_index":1268,"title":{},"body":{"controllers/RolesController.html":{}}}],["controller('subscribers",{"_index":1341,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["controller('users",{"_index":1446,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["cookie",{"_index":1569,"title":{},"body":{"dependencies.html":{}}}],["countpermission",{"_index":669,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["countrole",{"_index":671,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["countuser",{"_index":667,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["coverage",{"_index":1524,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":321,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["create(@body",{"_index":358,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["create(createcompanydto",{"_index":325,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{}}}],["create(createfiledto",{"_index":775,"title":{},"body":{"injectables/FilesService.html":{}}}],["create(createjobdto",{"_index":815,"title":{},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{}}}],["create(createpermissiondto",{"_index":1084,"title":{},"body":{"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{}}}],["create(createresumedto",{"_index":1180,"title":{},"body":{"controllers/ResumesController.html":{},"injectables/ResumesService.html":{}}}],["create(createroledto",{"_index":1258,"title":{},"body":{"controllers/RolesController.html":{},"injectables/RolesService.html":{}}}],["create(createsubscriberdto",{"_index":1321,"title":{},"body":{"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{}}}],["create(createuserdto",{"_index":1465,"title":{},"body":{"injectables/UsersService.html":{}}}],["create(registeruserdto",{"_index":1433,"title":{},"body":{"controllers/UsersController.html":{}}}],["createcompanydto",{"_index":326,"title":{"classes/CreateCompanyDto.html":{}},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/CreateCompanyDto.html":{},"classes/UpdateCompanyDto.html":{},"coverage.html":{}}}],["created",{"_index":1050,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["createdat",{"_index":446,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["createdby",{"_index":402,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["createfiledto",{"_index":534,"title":{"classes/CreateFileDto.html":{}},"body":{"classes/CreateFileDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/UpdateFileDto.html":{},"coverage.html":{}}}],["createjobdto",{"_index":491,"title":{"classes/CreateJobDto.html":{}},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"classes/UpdateJobDto.html":{},"coverage.html":{}}}],["createmulteroptions",{"_index":1013,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["createparamdecorator",{"_index":1754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createpermissiondto",{"_index":551,"title":{"classes/CreatePermissionDto.html":{}},"body":{"classes/CreatePermissionDto.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["createpermissiondto.apipath",{"_index":1120,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["createpermissiondto.method",{"_index":1121,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["createresumedto",{"_index":562,"title":{"classes/CreateResumeDto.html":{}},"body":{"classes/CreateResumeDto.html":{},"classes/History.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"coverage.html":{}}}],["createroledto",{"_index":581,"title":{"classes/CreateRoleDto.html":{}},"body":{"classes/CreateRoleDto.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["createroledto.name",{"_index":1289,"title":{},"body":{"injectables/RolesService.html":{}}}],["createsubscriberdto",{"_index":603,"title":{"classes/CreateSubscriberDto.html":{}},"body":{"classes/CreateSubscriberDto.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UpdateSubscriberDto.html":{},"coverage.html":{}}}],["createuserdto",{"_index":165,"title":{"classes/CreateUserDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["createuserdto.address",{"_index":1499,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto.age",{"_index":1500,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto.email",{"_index":1494,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto.gender",{"_index":1501,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto.name",{"_index":1498,"title":{},"body":{"injectables/UsersService.html":{}}}],["cron",{"_index":951,"title":{},"body":{"controllers/MailController.html":{},"dependencies.html":{}}}],["cron(cronexpression.every_30_seconds",{"_index":957,"title":{},"body":{"controllers/MailController.html":{}}}],["cronexpression",{"_index":952,"title":{},"body":{"controllers/MailController.html":{}}}],["ctx",{"_index":1755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":1756,"title":{},"body":{"miscellaneous/variables.html":{}}}],["current",{"_index":434,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["currentpage",{"_index":335,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["custom",{"_index":732,"title":{},"body":{"controllers/FilesController.html":{}}}],["cài",{"_index":1603,"title":{},"body":{"index.html":{}}}],["các",{"_index":1597,"title":{},"body":{"index.html":{}}}],["câu",{"_index":1606,"title":{},"body":{"index.html":{}}}],["cần",{"_index":690,"title":{},"body":{"injectables/DatabasesService.html":{},"index.html":{}}}],["d",{"_index":1601,"title":{},"body":{"index.html":{}}}],["data",{"_index":712,"title":{},"body":{"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"miscellaneous/variables.html":{}}}],["data')@apibody({schema",{"_index":728,"title":{},"body":{"controllers/FilesController.html":{}}}],["data.message",{"_index":1154,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["databases",{"_index":623,"title":{},"body":{"controllers/DatabasesController.html":{}}}],["databases.controller",{"_index":630,"title":{},"body":{"modules/DatabasesModule.html":{}}}],["databases.service",{"_index":625,"title":{},"body":{"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{}}}],["databases/databases.module",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["databasescontroller",{"_index":621,"title":{"controllers/DatabasesController.html":{}},"body":{"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"coverage.html":{}}}],["databasesmodule",{"_index":63,"title":{"modules/DatabasesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabasesModule.html":{},"modules.html":{},"overview.html":{}}}],["databasesservice",{"_index":624,"title":{"injectables/DatabasesService.html":{}},"body":{"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"coverage.html":{},"overview.html":{}}}],["date",{"_index":453,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/History.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{}}}],["date(value",{"_index":506,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/History.html":{},"classes/UpdatedBy.html":{}}}],["date.now()}${extname",{"_index":1044,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["declarations",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorator/customize",{"_index":34,"title":{},"body":{"controllers/AppController.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"controllers/FilesController.html":{},"classes/History.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{}}}],["default",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/MulterConfigService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["defaultlimit",{"_index":414,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/History.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["delete(':id",{"_index":341,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["deletedat",{"_index":447,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["deletedby",{"_index":441,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["denied",{"_index":1067,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["dependencies",{"_index":52,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":448,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"classes/Job.html":{},"classes/RegisterUserDto.html":{},"classes/Role.html":{},"classes/UserLoginDto.html":{},"properties.html":{}}}],["destination",{"_index":1027,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["dev",{"_index":1610,"title":{},"body":{"index.html":{}}}],["dir",{"_index":1001,"title":{},"body":{"modules/MailModule.html":{},"injectables/MulterConfigService.html":{}}}],["directory",{"_index":1058,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["diskstorage",{"_index":1024,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["document",{"_index":1632,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":1525,"title":{},"body":{"coverage.html":{}}}],["doesn't",{"_index":1122,"title":{},"body":{"injectables/PermissionsService.html":{},"injectables/RolesService.html":{}}}],["dotenv",{"_index":1572,"title":{},"body":{"dependencies.html":{}}}],["dto/create",{"_index":352,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/update",{"_index":354,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dùng/ứng",{"_index":683,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["dạng",{"_index":494,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/History.html":{},"classes/RegisterUserDto.html":{},"classes/UpdatedBy.html":{},"classes/UserLoginDto.html":{}}}],["dạng'})@isnotempty({message",{"_index":614,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["dạng'})@transform",{"_index":541,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/History.html":{}}}],["dụng",{"_index":686,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["each",{"_index":497,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{}}}],["eexist",{"_index":1055,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["ejs",{"_index":1574,"title":{},"body":{"dependencies.html":{}}}],["email",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"controllers/MailController.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["end",{"_index":507,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{}}}],["enddate",{"_index":508,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{}}}],["enotdir",{"_index":1060,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["ensureexists",{"_index":1014,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["ensureexists(targetdirectory",{"_index":1017,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["err",{"_index":879,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["error",{"_index":317,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["error.code",{"_index":1053,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["example",{"_index":521,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["exception",{"_index":890,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["exec",{"_index":432,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["executioncontext",{"_index":874,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"miscellaneous/variables.html":{}}}],["exist",{"_index":1123,"title":{},"body":{"injectables/PermissionsService.html":{},"injectables/RolesService.html":{}}}],["existed",{"_index":1495,"title":{},"body":{"injectables/UsersService.html":{}}}],["existingpermission",{"_index":1118,"title":{},"body":{"injectables/PermissionsService.html":{},"injectables/RolesService.html":{}}}],["exists",{"_index":1051,"title":{},"body":{"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"injectables/RolesService.html":{}}}],["expiresin",{"_index":241,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["export",{"_index":35,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":179,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/MulterConfigService.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":724,"title":{},"body":{"controllers/FilesController.html":{}}}],["extends",{"_index":866,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{}}}],["extension",{"_index":1036,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["extname",{"_index":1037,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["extractjwt",{"_index":914,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":920,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":922,"title":{},"body":{"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"miscellaneous/variables.html":{}}}],["fanpage",{"_index":1627,"title":{},"body":{"index.html":{}}}],["fetch",{"_index":1714,"title":{},"body":{"miscellaneous/variables.html":{}}}],["field",{"_index":503,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/History.html":{},"classes/UpdatedBy.html":{}}}],["file",{"_index":5,"title":{"classes/File.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["file')@useinterceptors(undefined)@apiconsumes('multipart/form",{"_index":727,"title":{},"body":{"controllers/FilesController.html":{}}}],["file.dto",{"_index":742,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/UpdateFileDto.html":{}}}],["file.dto.ts",{"_index":536,"title":{},"body":{"classes/CreateFileDto.html":{},"classes/UpdateFileDto.html":{},"coverage.html":{}}}],["file.filename",{"_index":760,"title":{},"body":{"controllers/FilesController.html":{}}}],["fileinterceptor",{"_index":743,"title":{},"body":{"controllers/FilesController.html":{}}}],["filename",{"_index":759,"title":{},"body":{"controllers/FilesController.html":{},"injectables/MulterConfigService.html":{}}}],["files",{"_index":716,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{},"miscellaneous/variables.html":{}}}],["files.controller",{"_index":769,"title":{},"body":{"modules/FilesModule.html":{}}}],["files.service",{"_index":741,"title":{},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{}}}],["files/files.module",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["filescontroller",{"_index":714,"title":{"controllers/FilesController.html":{}},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{},"coverage.html":{}}}],["filesmodule",{"_index":64,"title":{"modules/FilesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FilesModule.html":{},"modules.html":{},"overview.html":{}}}],["filesservice",{"_index":740,"title":{"injectables/FilesService.html":{}},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"coverage.html":{},"overview.html":{}}}],["fileupload",{"_index":755,"title":{},"body":{"controllers/FilesController.html":{}}}],["filter",{"_index":405,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["filter.current",{"_index":409,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["filter.pagesize",{"_index":410,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["finalname",{"_index":1043,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["find",{"_index":1238,"title":{},"body":{"injectables/ResumesService.html":{}}}],["find(filter",{"_index":427,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["findall",{"_index":322,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findall(currentpage",{"_index":328,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone",{"_index":323,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone(@param('id",{"_index":365,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["findone(_id",{"_index":388,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{}}}],["findone(id",{"_index":336,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findonebyusername",{"_index":1462,"title":{},"body":{"injectables/UsersService.html":{}}}],["findonebyusername(username",{"_index":1469,"title":{},"body":{"injectables/UsersService.html":{}}}],["findresumebyuser",{"_index":1179,"title":{},"body":{"controllers/ResumesController.html":{},"injectables/ResumesService.html":{}}}],["findresumebyuser(@user",{"_index":1204,"title":{},"body":{"controllers/ResumesController.html":{}}}],["findresumebyuser(user",{"_index":1186,"title":{},"body":{"controllers/ResumesController.html":{},"injectables/ResumesService.html":{}}}],["finduserbytoken",{"_index":1460,"title":{},"body":{"injectables/UsersService.html":{}}}],["folder",{"_index":1029,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["folder_type",{"_index":730,"title":{},"body":{"controllers/FilesController.html":{}}}],["format",{"_index":756,"title":{},"body":{"controllers/FilesController.html":{}}}],["found",{"_index":1295,"title":{},"body":{"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["foundrole",{"_index":1299,"title":{},"body":{"injectables/RolesService.html":{}}}],["foundrole.name",{"_index":1301,"title":{},"body":{"injectables/RolesService.html":{}}}],["founduser",{"_index":1517,"title":{},"body":{"injectables/UsersService.html":{}}}],["founduser.email",{"_index":1519,"title":{},"body":{"injectables/UsersService.html":{}}}],["fs",{"_index":1023,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["fs.mkdir(targetdirectory",{"_index":1046,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["full",{"_index":680,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["function",{"_index":1545,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1593,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gender",{"_index":512,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/History.html":{},"classes/RegisterUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{}}}],["gensaltsync",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["gensaltsync(10",{"_index":1489,"title":{},"body":{"injectables/UsersService.html":{}}}],["get('/refresh",{"_index":197,"title":{},"body":{"controllers/AuthController.html":{}}}],["get(':id",{"_index":364,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["get('account",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{}}}],["get()@public()@responsemessage('send",{"_index":940,"title":{},"body":{"controllers/MailController.html":{}}}],["get()@responsemessage('fetch",{"_index":1086,"title":{},"body":{"controllers/PermissionsController.html":{},"controllers/RolesController.html":{}}}],["getaccount",{"_index":135,"title":{},"body":{"controllers/AuthController.html":{}}}],["getaccount(@user",{"_index":209,"title":{},"body":{"controllers/AuthController.html":{}}}],["getaccount(user",{"_index":140,"title":{},"body":{"controllers/AuthController.html":{}}}],["gethashpassword",{"_index":1461,"title":{},"body":{"injectables/UsersService.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getrootpath",{"_index":1012,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["getskills",{"_index":1357,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["getskills(user",{"_index":1363,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["getting",{"_index":1595,"title":{"index.html":{}},"body":{}}],["getuserskill",{"_index":1320,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["getuserskill(@user",{"_index":1344,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["getuserskill(user",{"_index":1327,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["gi",{"_index":589,"title":{},"body":{"classes/CreateRoleDto.html":{},"index.html":{}}}],["h",{"_index":687,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/SubscribersService.html":{}}}],["handlebars",{"_index":1576,"title":{},"body":{"dependencies.html":{}}}],["handlebarsadapter",{"_index":991,"title":{},"body":{"modules/MailModule.html":{}}}],["handlelogin",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlelogin(req",{"_index":150,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlelogout",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlelogout(req",{"_index":157,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlerefreshtoken",{"_index":138,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlerefreshtoken(req",{"_index":160,"title":{},"body":{"controllers/AuthController.html":{}}}],["handleregister",{"_index":139,"title":{},"body":{"controllers/AuthController.html":{}}}],["handleregister(@body",{"_index":203,"title":{},"body":{"controllers/AuthController.html":{}}}],["handleregister(createuserdto",{"_index":164,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlerequest",{"_index":869,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["handlerequest(err",{"_index":877,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["harrykill.007@gmail.com",{"_index":973,"title":{},"body":{"controllers/MailController.html":{}}}],["hash",{"_index":1490,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashpassword",{"_index":1472,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashsync",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["hashsync(plainpassword",{"_index":1491,"title":{},"body":{"injectables/UsersService.html":{}}}],["header",{"_index":733,"title":{},"body":{"controllers/FilesController.html":{}}}],["hello",{"_index":129,"title":{},"body":{"injectables/AppService.html":{}}}],["helmet",{"_index":1578,"title":{},"body":{"dependencies.html":{}}}],["hierarchy",{"_index":1062,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["history",{"_index":566,"title":{"classes/History.html":{}},"body":{"classes/CreateResumeDto.html":{},"classes/History.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/UpdatedBy.html":{},"coverage.html":{}}}],["hoidanit@gmail.com",{"_index":704,"title":{},"body":{"injectables/DatabasesService.html":{},"miscellaneous/variables.html":{}}}],["host",{"_index":996,"title":{},"body":{"modules/MailModule.html":{}}}],["httpexception",{"_index":1483,"title":{},"body":{"injectables/UsersService.html":{}}}],["httpexceptionfilter",{"_index":753,"title":{},"body":{"controllers/FilesController.html":{}}}],["httponly",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{}}}],["https://baoit.com.vn",{"_index":1622,"title":{},"body":{"index.html":{},"properties.html":{}}}],["https://www.facebook.com/askitwitheric",{"_index":1628,"title":{},"body":{"index.html":{}}}],["https://www.tiktok.com/@baoit",{"_index":1626,"title":{},"body":{"index.html":{}}}],["https://www.udemy.com/user/eric",{"_index":1630,"title":{},"body":{"index.html":{}}}],["https://www.youtube.com/@baoit",{"_index":1624,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":738,"title":{},"body":{"controllers/FilesController.html":{},"injectables/UsersService.html":{}}}],["httpstatus.created",{"_index":1513,"title":{},"body":{"injectables/UsersService.html":{}}}],["hydrateddocument",{"_index":469,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{},"miscellaneous/typealiases.html":{}}}],["hợp",{"_index":599,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["i'm",{"_index":695,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["id",{"_index":339,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateUserDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/History.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["id')@delete(':id",{"_index":826,"title":{},"body":{"controllers/JobsController.html":{},"controllers/ResumesController.html":{},"controllers/SubscribersController.html":{}}}],["id')@get(':id",{"_index":823,"title":{},"body":{"controllers/JobsController.html":{},"controllers/ResumesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["id')@patch(':id",{"_index":830,"title":{},"body":{"controllers/JobsController.html":{},"controllers/ResumesController.html":{}}}],["id')@skipcheckpermission()@patch",{"_index":1333,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["identifier",{"_index":1526,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":421,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["ignoreexpiration",{"_index":921,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["image",{"_index":1035,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["image's",{"_index":1039,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["implements",{"_index":660,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/MulterConfigService.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["import",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"classes/History.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["init",{"_index":711,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["init_permissions",{"_index":657,"title":{},"body":{"injectables/DatabasesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["inject",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{}}}],["injectable",{"_index":124,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/FilesService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/FilesService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":125,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/FilesService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectmodel",{"_index":393,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["injectmodel(company.name",{"_index":400,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["injectmodel(job.name",{"_index":858,"title":{},"body":{"injectables/JobsService.html":{},"controllers/MailController.html":{}}}],["injectmodel(permission.name",{"_index":662,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/PermissionsService.html":{}}}],["injectmodel(resume.name",{"_index":1226,"title":{},"body":{"injectables/ResumesService.html":{}}}],["injectmodel(role.name",{"_index":663,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["injectmodel(subscriber.name",{"_index":955,"title":{},"body":{"controllers/MailController.html":{},"injectables/SubscribersService.html":{}}}],["injectmodel(user.name",{"_index":661,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["injectmodel(userm.name",{"_index":1486,"title":{},"body":{"injectables/UsersService.html":{}}}],["instead",{"_index":1759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["intercept",{"_index":1148,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["intercept(context",{"_index":1383,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["interface",{"_index":789,"title":{"interfaces/IUser.html":{},"interfaces/Response.html":{}},"body":{"interfaces/IUser.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["interfaces",{"_index":790,"title":{},"body":{"interfaces/IUser.html":{},"interfaces/Response.html":{},"overview.html":{}}}],["is_public_key",{"_index":881,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["is_public_permission",{"_index":882,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isactive",{"_index":584,"title":{},"body":{"classes/CreateRoleDto.html":{},"injectables/DatabasesService.html":{},"classes/Job.html":{},"classes/Role.html":{}}}],["isarray",{"_index":482,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/History.html":{},"classes/UpdatedBy.html":{}}}],["isboolean",{"_index":601,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["isdate",{"_index":483,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/History.html":{},"classes/UpdatedBy.html":{}}}],["isdeleted",{"_index":449,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["isemail",{"_index":484,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/History.html":{},"classes/RegisterUserDto.html":{},"classes/UpdatedBy.html":{},"classes/UserLoginDto.html":{}}}],["isempty",{"_index":398,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["isempty(sort",{"_index":419,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["isexist",{"_index":901,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/SubscribersService.html":{}}}],["isexisteduser",{"_index":1492,"title":{},"body":{"injectables/UsersService.html":{}}}],["isglobal",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["isinit",{"_index":664,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["ismongoid",{"_index":517,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["isnotempty",{"_index":485,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/History.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/UserLoginDto.html":{}}}],["isnotempty()@isemail",{"_index":1407,"title":{},"body":{"classes/UpdatedBy.html":{}}}],["isnotempty({message",{"_index":475,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/History.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["isobject",{"_index":486,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateUserDto.html":{},"classes/History.html":{},"classes/RegisterUserDto.html":{},"classes/UpdatedBy.html":{},"classes/UserLoginDto.html":{}}}],["ispublic",{"_index":884,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["ispublicpermission",{"_index":894,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["iss",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{}}}],["isstring",{"_index":487,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["isstring()@isnotempty()@apiproperty({example",{"_index":1427,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["isvalidpassword",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["isvalidpassword(password",{"_index":1471,"title":{},"body":{"injectables/UsersService.html":{}}}],["it's",{"_index":1057,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["item.company.name",{"_index":969,"title":{},"body":{"controllers/MailController.html":{}}}],["item.name",{"_index":968,"title":{},"body":{"controllers/MailController.html":{}}}],["item.salary}`.replace(/\\b(?=(\\d{3})+(?!\\d))/g",{"_index":970,"title":{},"body":{"controllers/MailController.html":{}}}],["item.skills",{"_index":971,"title":{},"body":{"controllers/MailController.html":{}}}],["iuser",{"_index":141,"title":{"interfaces/IUser.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"interfaces/IUser.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["job",{"_index":575,"title":{"classes/Job.html":{}},"body":{"classes/CreateResumeDto.html":{},"classes/History.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"classes/Resume.html":{},"classes/UpdatedBy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["job')@get",{"_index":820,"title":{},"body":{"controllers/JobsController.html":{}}}],["job')@post",{"_index":817,"title":{},"body":{"controllers/JobsController.html":{}}}],["job.dto",{"_index":834,"title":{},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{},"classes/UpdateJobDto.html":{}}}],["job.dto.ts",{"_index":474,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/UpdateJobDto.html":{},"coverage.html":{}}}],["job.dto.ts:15",{"_index":479,"title":{},"body":{"classes/Company-1.html":{}}}],["job.dto.ts:18",{"_index":481,"title":{},"body":{"classes/Company-1.html":{}}}],["job.dto.ts:20",{"_index":480,"title":{},"body":{"classes/Company-1.html":{}}}],["job.dto.ts:27",{"_index":545,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:39",{"_index":549,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:47",{"_index":538,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:52",{"_index":546,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:57",{"_index":543,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:62",{"_index":539,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:66",{"_index":544,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:74",{"_index":550,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:83",{"_index":542,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.name",{"_index":638,"title":{},"body":{"modules/DatabasesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"classes/Resume.html":{}}}],["jobdocument",{"_index":810,"title":{},"body":{"classes/Job.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["jobid",{"_index":567,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/History.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/UpdatedBy.html":{}}}],["jobmodel",{"_index":852,"title":{},"body":{"injectables/JobsService.html":{},"controllers/MailController.html":{}}}],["jobs",{"_index":814,"title":{},"body":{"controllers/JobsController.html":{},"controllers/MailController.html":{},"miscellaneous/variables.html":{}}}],["jobs.controller",{"_index":847,"title":{},"body":{"modules/JobsModule.html":{}}}],["jobs.service",{"_index":833,"title":{},"body":{"controllers/JobsController.html":{},"modules/JobsModule.html":{}}}],["jobs/jobs.module",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["jobschema",{"_index":639,"title":{},"body":{"modules/DatabasesModule.html":{},"classes/Job.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jobscontroller",{"_index":812,"title":{"controllers/JobsController.html":{}},"body":{"controllers/JobsController.html":{},"modules/JobsModule.html":{},"coverage.html":{}}}],["jobsmodule",{"_index":65,"title":{"modules/JobsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/JobsModule.html":{},"modules.html":{},"overview.html":{}}}],["jobsservice",{"_index":832,"title":{"injectables/JobsService.html":{}},"body":{"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"coverage.html":{},"overview.html":{}}}],["jobwithmatchingskills",{"_index":964,"title":{},"body":{"controllers/MailController.html":{}}}],["jobwithmatchingskills.length",{"_index":966,"title":{},"body":{"controllers/MailController.html":{}}}],["jobwithmatchingskills.map((item",{"_index":967,"title":{},"body":{"controllers/MailController.html":{}}}],["join",{"_index":990,"title":{},"body":{"modules/MailModule.html":{},"injectables/MulterConfigService.html":{}}}],["join(__dirname",{"_index":1002,"title":{},"body":{"modules/MailModule.html":{}}}],["join(this.getrootpath",{"_index":1033,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["jwt",{"_index":917,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":230,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtauthguard",{"_index":31,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["jwtconstants",{"_index":228,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtfromrequest",{"_index":919,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":225,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":237,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":226,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":219,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["k",{"_index":609,"title":{},"body":{"classes/CreateSubscriberDto.html":{}}}],["keep",{"_index":1761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["khoản",{"_index":1522,"title":{},"body":{"injectables/UsersService.html":{}}}],["khác",{"_index":1375,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["không",{"_index":476,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/History.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/UserLoginDto.html":{}}}],["kiếm",{"_index":1617,"title":{},"body":{"index.html":{}}}],["l",{"_index":495,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{}}}],["legend",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["level",{"_index":500,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{}}}],["license",{"_index":1647,"title":{},"body":{"properties.html":{}}}],["limit",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["limit(defaultlimit",{"_index":429,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["list",{"_index":331,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["literal",{"_index":455,"title":{},"body":{"classes/Company.html":{},"controllers/FilesController.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["local",{"_index":932,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["local.auth.guard",{"_index":174,"title":{},"body":{"controllers/AuthController.html":{}}}],["localauthguard",{"_index":27,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["localstrategy",{"_index":220,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["location",{"_index":501,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{},"injectables/MulterConfigService.html":{}}}],["logger",{"_index":643,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["logger(databasesservice.name",{"_index":652,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["login",{"_index":190,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login')@useguards(localauthguard)@useguards(throttlerguard)@public()@apibody({type",{"_index":153,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(user",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{}}}],["logo",{"_index":450,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{}}}],["logout",{"_index":205,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logout')@useguards(localauthguard)@post('/logout",{"_index":158,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(user",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{}}}],["làm",{"_index":1599,"title":{},"body":{"index.html":{}}}],["lòng",{"_index":1373,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["lại",{"_index":1374,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["lệnh",{"_index":1607,"title":{},"body":{"index.html":{}}}],["m",{"_index":528,"title":{},"body":{"classes/CreateCompanyDto.html":{},"classes/CreateRoleDto.html":{}}}],["mail",{"_index":938,"title":{},"body":{"controllers/MailController.html":{}}}],["mail.controller",{"_index":988,"title":{},"body":{"modules/MailModule.html":{}}}],["mail.service",{"_index":944,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{}}}],["mail/mail.module",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["mailcontroller",{"_index":936,"title":{"controllers/MailController.html":{}},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"coverage.html":{}}}],["mailermodule",{"_index":989,"title":{},"body":{"modules/MailModule.html":{}}}],["mailermodule.forrootasync",{"_index":994,"title":{},"body":{"modules/MailModule.html":{}}}],["mailerservice",{"_index":945,"title":{},"body":{"controllers/MailController.html":{}}}],["mailmodule",{"_index":66,"title":{"modules/MailModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{},"modules.html":{},"overview.html":{}}}],["mailservice",{"_index":943,"title":{"injectables/MailService.html":{}},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"coverage.html":{},"overview.html":{}}}],["male",{"_index":700,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["map",{"_index":1144,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["map((data",{"_index":1151,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["matching",{"_index":48,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.ceil(totalitems",{"_index":418,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["maxage",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{}}}],["message",{"_index":41,"title":{},"body":{"controllers/AppController.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/History.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["meta",{"_index":433,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["metadata",{"_index":1588,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":555,"title":{},"body":{"classes/CreatePermissionDto.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"injectables/RolesService.html":{},"miscellaneous/variables.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["miscellaneous",{"_index":1592,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":49,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"classes/CreatePermissionDto.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"interfaces/IUser.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"classes/Permission.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":51,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/mailer",{"_index":947,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"dependencies.html":{}}}],["modules/mailer/dist/adapters/handlebars.adapter",{"_index":992,"title":{},"body":{"modules/MailModule.html":{}}}],["mongo",{"_index":519,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["mongodb",{"_index":597,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["mongoose",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/History.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["mongoose.schema.types.objectid",{"_index":471,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/History.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{}}}],["mongoose.types.objectid.isvalid(_id",{"_index":1293,"title":{},"body":{"injectables/RolesService.html":{}}}],["mongoose.types.objectid.isvalid(id",{"_index":1298,"title":{},"body":{"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["mongoosemodule",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forfeature",{"_index":377,"title":{},"body":{"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forroot('mongodb+srv://admin:admin@cluster0.pfko9db.mongodb.net/?retrywrites=true&w=majority&appname=cluster0",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["ms",{"_index":231,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["ms(configservice.get('jwt_access_token_expire",{"_index":242,"title":{},"body":{"modules/AuthModule.html":{}}}],["ms(this.configservice.get('jwt_refresh_token_expire",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{}}}],["multer",{"_index":1025,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["multer.config",{"_index":772,"title":{},"body":{"modules/FilesModule.html":{}}}],["multerconfigservice",{"_index":771,"title":{"injectables/MulterConfigService.html":{}},"body":{"modules/FilesModule.html":{},"injectables/MulterConfigService.html":{},"coverage.html":{}}}],["multermodule",{"_index":770,"title":{},"body":{"modules/FilesModule.html":{}}}],["multermodule.registerasync",{"_index":773,"title":{},"body":{"modules/FilesModule.html":{}}}],["multermoduleoptions",{"_index":1016,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["multeroptionsfactory",{"_index":1022,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["mảng",{"_index":602,"title":{},"body":{"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{}}}],["mảng'})@ismongoid({each",{"_index":594,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["mọi",{"_index":1612,"title":{},"body":{"index.html":{}}}],["mỗi",{"_index":595,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["một",{"_index":593,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["n",{"_index":1602,"title":{},"body":{"index.html":{}}}],["name",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["nestinterceptor",{"_index":1140,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["nestjs",{"_index":946,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"dependencies.html":{},"index.html":{}}}],["nestjs/common",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":227,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":1388,"title":{},"body":{"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/Job.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":744,"title":{},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/MulterConfigService.html":{},"dependencies.html":{}}}],["nestjs/schedule",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"controllers/MailController.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":186,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"classes/RegisterUserDto.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["nestjs/throttler",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"dependencies.html":{}}}],["new",{"_index":167,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"injectables/DatabasesService.html":{},"injectables/FilesService.html":{},"classes/History.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"classes/UpdatedBy.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["next",{"_index":1149,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["next.handle().pipe",{"_index":1150,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["ng",{"_index":505,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/History.html":{},"classes/RegisterUserDto.html":{},"classes/UpdatedBy.html":{},"classes/UserLoginDto.html":{}}}],["người",{"_index":682,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["nh",{"_index":493,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/History.html":{},"classes/RegisterUserDto.html":{},"classes/UpdatedBy.html":{},"classes/UserLoginDto.html":{}}}],["nice",{"_index":978,"title":{},"body":{"controllers/MailController.html":{}}}],["nodemailer",{"_index":1582,"title":{},"body":{"dependencies.html":{}}}],["normal",{"_index":706,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["normal_user",{"_index":1750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["npm",{"_index":1608,"title":{},"body":{"index.html":{}}}],["npx",{"_index":1634,"title":{},"body":{"index.html":{}}}],["null",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PermissionsService.html":{},"injectables/RolesService.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":386,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateUserDto.html":{},"injectables/FilesService.html":{},"classes/History.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{}}}],["năng",{"_index":610,"title":{},"body":{"classes/CreateSubscriberDto.html":{}}}],["object",{"_index":457,"title":{},"body":{"classes/Company.html":{},"controllers/FilesController.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["objectid",{"_index":598,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["objuser",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{}}}],["observable",{"_index":1142,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["offset",{"_index":412,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["ok",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{}}}],["omittype",{"_index":1405,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["omittype(createuserdto",{"_index":1403,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["one",{"_index":1124,"title":{},"body":{"injectables/PermissionsService.html":{},"injectables/RolesService.html":{}}}],["onmoduleinit",{"_index":644,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["optional",{"_index":147,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"interfaces/IUser.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["options",{"_index":1005,"title":{},"body":{"modules/MailModule.html":{}}}],["out",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["outside",{"_index":1763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["overview",{"_index":1641,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":1636,"title":{},"body":{"index.html":{}}}],["package",{"_index":1554,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["pages",{"_index":436,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["pagesize",{"_index":435,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["paginate",{"_index":333,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/PermissionsController.html":{},"controllers/RolesController.html":{},"miscellaneous/variables.html":{}}}],["param",{"_index":348,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["param('id",{"_index":367,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{}}}],["parameters",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["params",{"_index":397,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["parent",{"_index":1061,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["parsefilepipebuilder",{"_index":737,"title":{},"body":{"controllers/FilesController.html":{}}}],["parser",{"_index":1570,"title":{},"body":{"dependencies.html":{}}}],["partialtype",{"_index":1387,"title":{},"body":{"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{}}}],["partialtype(createcompanydto",{"_index":1386,"title":{},"body":{"classes/UpdateCompanyDto.html":{}}}],["partialtype(createfiledto",{"_index":1391,"title":{},"body":{"classes/UpdateFileDto.html":{}}}],["partialtype(createjobdto",{"_index":1393,"title":{},"body":{"classes/UpdateJobDto.html":{}}}],["partialtype(createpermissiondto",{"_index":1395,"title":{},"body":{"classes/UpdatePermissionDto.html":{}}}],["partialtype(createresumedto",{"_index":1397,"title":{},"body":{"classes/UpdateResumeDto.html":{}}}],["partialtype(createroledto",{"_index":1399,"title":{},"body":{"classes/UpdateRoleDto.html":{}}}],["partialtype(createsubscriberdto",{"_index":1400,"title":{},"body":{"classes/UpdateSubscriberDto.html":{}}}],["pass",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{},"modules/MailModule.html":{}}}],["passport",{"_index":916,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passport/local.strategy",{"_index":224,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule",{"_index":223,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":918,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":908,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passthrough",{"_index":194,"title":{},"body":{"controllers/AuthController.html":{}}}],["password",{"_index":510,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/History.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{}}}],["patch",{"_index":347,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["patch(':id",{"_index":345,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{}}}],["path",{"_index":556,"title":{},"body":{"classes/CreatePermissionDto.html":{},"modules/MailModule.html":{},"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["path.basename(file.originalname",{"_index":1042,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["path.extname(file.originalname",{"_index":1038,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["payload",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["pending",{"_index":1764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["permission",{"_index":596,"title":{"classes/Permission.html":{}},"body":{"classes/CreateRoleDto.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["permission.apipath",{"_index":904,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["permission.dto",{"_index":1094,"title":{},"body":{"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/UpdatePermissionDto.html":{}}}],["permission.dto.ts",{"_index":553,"title":{},"body":{"classes/CreatePermissionDto.html":{},"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["permission.dto.ts:12",{"_index":557,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["permission.dto.ts:17",{"_index":558,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["permission.dto.ts:21",{"_index":559,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["permission.dto.ts:7",{"_index":561,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["permission.method",{"_index":903,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["permission.name",{"_index":637,"title":{},"body":{"modules/DatabasesModule.html":{},"modules/PermissionsModule.html":{}}}],["permissiondocument",{"_index":653,"title":{},"body":{"injectables/DatabasesService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["permissiongetfromdb",{"_index":210,"title":{},"body":{"controllers/AuthController.html":{}}}],["permissiongetfromdb).permissions",{"_index":214,"title":{},"body":{"controllers/AuthController.html":{}}}],["permissionmodel",{"_index":646,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/PermissionsService.html":{}}}],["permissions",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateRoleDto.html":{},"injectables/DatabasesService.html":{},"interfaces/IUser.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/PermissionsController.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"miscellaneous/variables.html":{}}}],["permissions.controller",{"_index":1107,"title":{},"body":{"modules/PermissionsModule.html":{}}}],["permissions.find",{"_index":902,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["permissions.service",{"_index":1093,"title":{},"body":{"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{}}}],["permissions/permissions.module",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["permissionschema",{"_index":633,"title":{},"body":{"modules/DatabasesModule.html":{},"classes/Permission.html":{},"modules/PermissionsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["permissionscontroller",{"_index":1082,"title":{"controllers/PermissionsController.html":{}},"body":{"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"coverage.html":{}}}],["permissionservice",{"_index":1098,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["permissionsmodule",{"_index":67,"title":{"modules/PermissionsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PermissionsModule.html":{},"modules.html":{},"overview.html":{}}}],["permissionsservice",{"_index":1092,"title":{"injectables/PermissionsService.html":{}},"body":{"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"coverage.html":{},"overview.html":{}}}],["phải",{"_index":588,"title":{},"body":{"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{}}}],["plainpassword",{"_index":1487,"title":{},"body":{"injectables/UsersService.html":{}}}],["please",{"_index":314,"title":{},"body":{"injectables/AuthService.html":{}}}],["plugin",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["populate",{"_index":1240,"title":{},"body":{"injectables/ResumesService.html":{},"injectables/UsersService.html":{}}}],["populate(population",{"_index":431,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["population",{"_index":407,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["port",{"_index":44,"title":{},"body":{"controllers/AppController.html":{}}}],["post",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["post('/by",{"_index":1203,"title":{},"body":{"controllers/ResumesController.html":{}}}],["post('/login",{"_index":193,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/logout",{"_index":206,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/register",{"_index":202,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('skills",{"_index":1343,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["post('upload",{"_index":749,"title":{},"body":{"controllers/FilesController.html":{}}}],["prefix",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/DatabasesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["preview",{"_index":1007,"title":{},"body":{"modules/MailModule.html":{}}}],["private",{"_index":38,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"controllers/MailController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["process.cwd",{"_index":1045,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["processnewtoken",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{}}}],["projection",{"_index":406,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["promise",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{}}}],["prop",{"_index":451,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["prop({required",{"_index":1310,"title":{},"body":{"classes/Subscriber.html":{},"classes/User.html":{}}}],["prop({type",{"_index":456,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["properties",{"_index":245,"title":{"properties.html":{}},"body":{"injectables/AuthService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{},"properties.html":{}}}],["provide",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["public",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/ResumesController.html":{},"controllers/SubscribersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["public()@get(':id",{"_index":337,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["public()@get()@responsemessage('fetch",{"_index":330,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["public()@post('upload')@responsemessage('upload",{"_index":725,"title":{},"body":{"controllers/FilesController.html":{}}}],["public()@responsemessage('find",{"_index":819,"title":{},"body":{"controllers/JobsController.html":{},"controllers/ResumesController.html":{},"controllers/SubscribersController.html":{}}}],["public()@responsemessage('get",{"_index":822,"title":{},"body":{"controllers/JobsController.html":{},"controllers/SubscribersController.html":{}}}],["public/images/${folder",{"_index":1034,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["push",{"_index":1236,"title":{},"body":{"injectables/ResumesService.html":{}}}],["qs",{"_index":329,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["query",{"_index":349,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["query('current",{"_index":361,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["query('pagesize",{"_index":362,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["quyền",{"_index":560,"title":{},"body":{"classes/CreatePermissionDto.html":{},"injectables/DatabasesService.html":{}}}],["readonly",{"_index":39,"title":{},"body":{"controllers/AppController.html":{},"controllers/CompaniesController.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"classes/RegisterUserDto.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{}}}],["receiver",{"_index":981,"title":{},"body":{"controllers/MailController.html":{}}}],["recursive",{"_index":1047,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["ref",{"_index":1158,"title":{},"body":{"classes/Resume.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["reflect",{"_index":1587,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":871,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["refresh",{"_index":161,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["refresh_token",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{}}}],["refreshtoken",{"_index":198,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["register",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["register(createuserdto",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{}}}],["register(registeruserdto",{"_index":1474,"title":{},"body":{"injectables/UsersService.html":{}}}],["registerjobdto",{"_index":509,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{}}}],["registerresumedto",{"_index":580,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/History.html":{},"classes/UpdatedBy.html":{}}}],["registeruserdto",{"_index":520,"title":{"classes/RegisterUserDto.html":{}},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["registeruserdto.address",{"_index":1506,"title":{},"body":{"injectables/UsersService.html":{}}}],["registeruserdto.age",{"_index":1507,"title":{},"body":{"injectables/UsersService.html":{}}}],["registeruserdto.company",{"_index":1509,"title":{},"body":{"injectables/UsersService.html":{}}}],["registeruserdto.email",{"_index":1503,"title":{},"body":{"injectables/UsersService.html":{}}}],["registeruserdto.gender",{"_index":1508,"title":{},"body":{"injectables/UsersService.html":{}}}],["registeruserdto.name",{"_index":1505,"title":{},"body":{"injectables/UsersService.html":{}}}],["rejected",{"_index":1766,"title":{},"body":{"miscellaneous/variables.html":{}}}],["remove",{"_index":324,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["remove(@param('id",{"_index":369,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["remove(id",{"_index":340,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["removes",{"_index":784,"title":{},"body":{"injectables/FilesService.html":{}}}],["render",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{}}}],["req",{"_index":156,"title":{},"body":{"controllers/AuthController.html":{},"injectables/MulterConfigService.html":{}}}],["req.cookies['refresh_token",{"_index":199,"title":{},"body":{"controllers/AuthController.html":{}}}],["req?.headers?.folder_type",{"_index":1030,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["request",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["request.method",{"_index":897,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["request.route.path",{"_index":899,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["request.user",{"_index":1757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requested",{"_index":1056,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["required",{"_index":731,"title":{},"body":{"controllers/FilesController.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["res",{"_index":171,"title":{},"body":{"controllers/AuthController.html":{}}}],["reset",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["response",{"_index":151,"title":{"interfaces/Response.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["response.clearcookie('refresh_token",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{}}}],["response.cookie('refresh_token",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{}}}],["response_message",{"_index":1146,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["responsemessage",{"_index":172,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["responsemessage('create",{"_index":816,"title":{},"body":{"controllers/JobsController.html":{},"controllers/ResumesController.html":{},"controllers/SubscribersController.html":{}}}],["responsemessage('delete",{"_index":825,"title":{},"body":{"controllers/JobsController.html":{},"controllers/ResumesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["responsemessage('fetch",{"_index":360,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/PermissionsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["responsemessage('find",{"_index":838,"title":{},"body":{"controllers/JobsController.html":{},"controllers/ResumesController.html":{},"controllers/SubscribersController.html":{}}}],["responsemessage('get",{"_index":840,"title":{},"body":{"controllers/JobsController.html":{},"controllers/ResumesController.html":{},"controllers/SubscribersController.html":{}}}],["responsemessage('register",{"_index":166,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["responsemessage('send",{"_index":958,"title":{},"body":{"controllers/MailController.html":{}}}],["responsemessage('update",{"_index":829,"title":{},"body":{"controllers/JobsController.html":{},"controllers/ResumesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["responsemessage('upload",{"_index":750,"title":{},"body":{"controllers/FilesController.html":{}}}],["responsemessage('user",{"_index":152,"title":{},"body":{"controllers/AuthController.html":{}}}],["result",{"_index":425,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["results",{"_index":47,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["resume",{"_index":1155,"title":{"classes/Resume.html":{}},"body":{"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resume')@get",{"_index":1183,"title":{},"body":{"controllers/ResumesController.html":{}}}],["resume')@post",{"_index":1181,"title":{},"body":{"controllers/ResumesController.html":{}}}],["resume._id",{"_index":1229,"title":{},"body":{"injectables/ResumesService.html":{}}}],["resume.createdat",{"_index":1230,"title":{},"body":{"injectables/ResumesService.html":{}}}],["resume.dto",{"_index":1193,"title":{},"body":{"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/UpdateResumeDto.html":{}}}],["resume.dto.ts",{"_index":564,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/History.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"coverage.html":{}}}],["resume.dto.ts:11",{"_index":1408,"title":{},"body":{"classes/UpdatedBy.html":{}}}],["resume.dto.ts:16",{"_index":785,"title":{},"body":{"classes/History.html":{}}}],["resume.dto.ts:23",{"_index":786,"title":{},"body":{"classes/History.html":{}}}],["resume.dto.ts:25",{"_index":788,"title":{},"body":{"classes/History.html":{}}}],["resume.dto.ts:32",{"_index":572,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:37",{"_index":579,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:42",{"_index":578,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:47",{"_index":577,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:52",{"_index":571,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:57",{"_index":576,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:61",{"_index":574,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:7",{"_index":1406,"title":{},"body":{"classes/UpdatedBy.html":{}}}],["resume.name",{"_index":640,"title":{},"body":{"modules/DatabasesModule.html":{},"modules/ResumesModule.html":{}}}],["resumedocument",{"_index":1174,"title":{},"body":{"classes/Resume.html":{},"injectables/ResumesService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["resumemodel",{"_index":1215,"title":{},"body":{"injectables/ResumesService.html":{}}}],["resumes",{"_index":1178,"title":{},"body":{"controllers/ResumesController.html":{},"miscellaneous/variables.html":{}}}],["resumes.controller",{"_index":1209,"title":{},"body":{"modules/ResumesModule.html":{}}}],["resumes.service",{"_index":1192,"title":{},"body":{"controllers/ResumesController.html":{},"modules/ResumesModule.html":{}}}],["resumes/resumes.module",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["resumeschema",{"_index":641,"title":{},"body":{"modules/DatabasesModule.html":{},"classes/Resume.html":{},"modules/ResumesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resumescontroller",{"_index":1176,"title":{"controllers/ResumesController.html":{}},"body":{"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"coverage.html":{}}}],["resumesmodule",{"_index":68,"title":{"modules/ResumesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ResumesModule.html":{},"modules.html":{},"overview.html":{}}}],["resumesservice",{"_index":1191,"title":{"injectables/ResumesService.html":{}},"body":{"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"coverage.html":{},"overview.html":{}}}],["return",{"_index":43,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["reviewing",{"_index":1765,"title":{},"body":{"miscellaneous/variables.html":{}}}],["role",{"_index":234,"title":{"classes/Role.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterUserDto.html":{},"classes/Role.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["role.dto",{"_index":1266,"title":{},"body":{"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/UpdateRoleDto.html":{}}}],["role.dto.ts",{"_index":583,"title":{},"body":{"classes/CreateRoleDto.html":{},"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["role.dto.ts:13",{"_index":585,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:21",{"_index":591,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:33",{"_index":600,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:8",{"_index":592,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.name",{"_index":636,"title":{},"body":{"modules/DatabasesModule.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{}}}],["roledocument",{"_index":654,"title":{},"body":{"injectables/DatabasesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["rolegetfromdb",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["rolegetfromdb.permissions",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["rolegetfromdb?.permissions",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{}}}],["rolemodel",{"_index":647,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["roles",{"_index":1257,"title":{},"body":{"controllers/RolesController.html":{},"miscellaneous/variables.html":{}}}],["roles.controller",{"_index":1278,"title":{},"body":{"modules/RolesModule.html":{}}}],["roles.service",{"_index":1265,"title":{},"body":{"controllers/RolesController.html":{},"modules/RolesModule.html":{}}}],["roles/roles.module",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["roleschema",{"_index":235,"title":{},"body":{"modules/AuthModule.html":{},"modules/DatabasesModule.html":{},"classes/Role.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rolescontroller",{"_index":1255,"title":{"controllers/RolesController.html":{}},"body":{"controllers/RolesController.html":{},"modules/RolesModule.html":{},"coverage.html":{}}}],["roleservice",{"_index":189,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["rolesmodule",{"_index":69,"title":{"modules/RolesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RolesModule.html":{},"modules.html":{},"overview.html":{}}}],["rolesservice",{"_index":181,"title":{"injectables/RolesService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"coverage.html":{},"overview.html":{}}}],["run",{"_index":1609,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":1143,"title":{},"body":{"interfaces/Response.html":{},"modules/SubscribersModule.html":{},"injectables/TransformInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1145,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["s",{"_index":685,"title":{},"body":{"injectables/DatabasesService.html":{},"index.html":{}}}],["safe",{"_index":1762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["salary",{"_index":499,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{},"controllers/MailController.html":{}}}],["salt",{"_index":1488,"title":{},"body":{"injectables/UsersService.html":{}}}],["same",{"_index":1064,"title":{},"body":{"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"injectables/RolesService.html":{}}}],["sample",{"_index":659,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["schedulemodule",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["schedulemodule.forroot",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["schema",{"_index":379,"title":{},"body":{"modules/CompaniesModule.html":{},"classes/Company.html":{},"modules/DatabasesModule.html":{},"controllers/FilesController.html":{},"classes/Job.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"classes/Permission.html":{},"modules/PermissionsModule.html":{},"classes/Resume.html":{},"modules/ResumesModule.html":{},"classes/Role.html":{},"modules/RolesModule.html":{},"classes/Subscriber.html":{},"modules/SubscribersModule.html":{},"classes/User.html":{},"modules/UsersModule.html":{}}}],["schema/company.schema",{"_index":376,"title":{},"body":{"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{}}}],["schema/permission.schema",{"_index":1095,"title":{},"body":{"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{}}}],["schemafactory",{"_index":468,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["schemafactory.createforclass(company",{"_index":472,"title":{},"body":{"classes/Company.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(job",{"_index":811,"title":{},"body":{"classes/Job.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(permission",{"_index":1081,"title":{},"body":{"classes/Permission.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(resume",{"_index":1175,"title":{},"body":{"classes/Resume.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(role",{"_index":1254,"title":{},"body":{"classes/Role.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(subscriber",{"_index":1317,"title":{},"body":{"classes/Subscriber.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(user",{"_index":1426,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["schemas/job.schema",{"_index":848,"title":{},"body":{"modules/JobsModule.html":{},"injectables/JobsService.html":{}}}],["schemas/resume.schema",{"_index":1210,"title":{},"body":{"modules/ResumesModule.html":{},"injectables/ResumesService.html":{}}}],["schemas/role.schema",{"_index":1279,"title":{},"body":{"modules/RolesModule.html":{},"injectables/RolesService.html":{}}}],["schemas/subscriber.schema",{"_index":1355,"title":{},"body":{"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{}}}],["schemas/user.schema",{"_index":1457,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["secret",{"_index":238,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["secretorkey",{"_index":923,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secure",{"_index":998,"title":{},"body":{"modules/MailModule.html":{}}}],["select",{"_index":1241,"title":{},"body":{"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["select(projection",{"_index":1233,"title":{},"body":{"injectables/ResumesService.html":{}}}],["sendemailjobtosubscriber",{"_index":939,"title":{},"body":{"controllers/MailController.html":{}}}],["server",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{}}}],["set",{"_index":689,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["setmetadata(is_public_key",{"_index":1751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(is_public_permission",{"_index":1753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(response_message",{"_index":1752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["signoptions",{"_index":240,"title":{},"body":{"modules/AuthModule.html":{}}}],["single",{"_index":726,"title":{},"body":{"controllers/FilesController.html":{},"miscellaneous/variables.html":{}}}],["skill",{"_index":498,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{}}}],["skills",{"_index":492,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/Job.html":{},"controllers/MailController.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{}}}],["skip(offset",{"_index":428,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["skipcheckpermission",{"_index":1335,"title":{},"body":{"controllers/SubscribersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["soft",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["softdeletemodel",{"_index":382,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["softdeleteplugin",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["sort",{"_index":411,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["sort(sort",{"_index":430,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["src/.../company.schema.ts",{"_index":1652,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../constants.ts",{"_index":1662,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../customize.ts",{"_index":1661,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../job.schema.ts",{"_index":1653,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1594,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../permission.schema.ts",{"_index":1654,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../resume.schema.ts",{"_index":1655,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../role.schema.ts",{"_index":1656,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../sample.ts",{"_index":1660,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../status.enum.ts",{"_index":1663,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../subscriber.schema.ts",{"_index":1657,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../user.schema.ts",{"_index":1658,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:26",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":126,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":127,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:35",{"_index":155,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:45",{"_index":163,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:56",{"_index":169,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:63",{"_index":159,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:72",{"_index":143,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":221,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:13",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:21",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:41",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:76",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:84",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:87",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:95",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/constants.ts",{"_index":1531,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/jwt.auth.guard.ts",{"_index":865,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/auth/jwt.auth.guard.ts:12",{"_index":872,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["src/auth/jwt.auth.guard.ts:16",{"_index":875,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["src/auth/jwt.auth.guard.ts:27",{"_index":878,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":907,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:10",{"_index":911,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:22",{"_index":913,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/local.auth.guard.ts",{"_index":925,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["src/auth/passport/local.strategy.ts",{"_index":927,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/passport/local.strategy.ts:12",{"_index":931,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/passport/local.strategy.ts:7",{"_index":929,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/companies/companies.controller.ts",{"_index":319,"title":{},"body":{"controllers/CompaniesController.html":{},"coverage.html":{}}}],["src/companies/companies.controller.ts:24",{"_index":327,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.controller.ts:31",{"_index":334,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.controller.ts:40",{"_index":338,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.controller.ts:45",{"_index":346,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.controller.ts:54",{"_index":342,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.module.ts",{"_index":373,"title":{},"body":{"modules/CompaniesModule.html":{}}}],["src/companies/companies.service.ts",{"_index":380,"title":{},"body":{"injectables/CompaniesService.html":{},"coverage.html":{}}}],["src/companies/companies.service.ts:12",{"_index":383,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:17",{"_index":385,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:27",{"_index":387,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:59",{"_index":389,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:63",{"_index":392,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:76",{"_index":390,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/dto/create",{"_index":524,"title":{},"body":{"classes/CreateCompanyDto.html":{},"coverage.html":{}}}],["src/companies/dto/update",{"_index":1385,"title":{},"body":{"classes/UpdateCompanyDto.html":{},"coverage.html":{}}}],["src/companies/schema/company.schema",{"_index":1173,"title":{},"body":{"classes/Resume.html":{}}}],["src/companies/schema/company.schema.ts",{"_index":444,"title":{},"body":{"classes/Company.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/companies/schema/company.schema.ts:12",{"_index":464,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schema/company.schema.ts:15",{"_index":452,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schema/company.schema.ts:18",{"_index":461,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schema/company.schema.ts:20",{"_index":458,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schema/company.schema.ts:25",{"_index":454,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schema/company.schema.ts:28",{"_index":466,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schema/company.schema.ts:30",{"_index":467,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schema/company.schema.ts:35",{"_index":463,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schema/company.schema.ts:38",{"_index":459,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schema/company.schema.ts:41",{"_index":460,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schema/company.schema.ts:9",{"_index":465,"title":{},"body":{"classes/Company.html":{}}}],["src/core/transform.interceptor.ts",{"_index":1138,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["src/core/transform.interceptor.ts:21",{"_index":1382,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["src/core/transform.interceptor.ts:23",{"_index":1384,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["src/databases/databases.controller.ts",{"_index":622,"title":{},"body":{"controllers/DatabasesController.html":{},"coverage.html":{}}}],["src/databases/databases.module.ts",{"_index":629,"title":{},"body":{"modules/DatabasesModule.html":{}}}],["src/databases/databases.service.ts",{"_index":642,"title":{},"body":{"injectables/DatabasesService.html":{},"coverage.html":{}}}],["src/databases/databases.service.ts:15",{"_index":649,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["src/databases/databases.service.ts:26",{"_index":651,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["src/databases/sample",{"_index":1288,"title":{},"body":{"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["src/databases/sample.ts",{"_index":1540,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/decorator/customize",{"_index":173,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{}}}],["src/decorator/customize.ts",{"_index":1541,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/files/dto/create",{"_index":535,"title":{},"body":{"classes/CreateFileDto.html":{},"coverage.html":{}}}],["src/files/dto/update",{"_index":1390,"title":{},"body":{"classes/UpdateFileDto.html":{},"coverage.html":{}}}],["src/files/entities/file.entity.ts",{"_index":713,"title":{},"body":{"classes/File.html":{},"coverage.html":{}}}],["src/files/files.controller.ts",{"_index":715,"title":{},"body":{"controllers/FilesController.html":{},"coverage.html":{}}}],["src/files/files.controller.ts:49",{"_index":734,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.controller.ts:56",{"_index":718,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.controller.ts:61",{"_index":719,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.controller.ts:66",{"_index":722,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.controller.ts:71",{"_index":720,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.module.ts",{"_index":768,"title":{},"body":{"modules/FilesModule.html":{}}}],["src/files/files.service.ts",{"_index":774,"title":{},"body":{"injectables/FilesService.html":{},"coverage.html":{}}}],["src/files/files.service.ts:11",{"_index":777,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:15",{"_index":778,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:19",{"_index":780,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:23",{"_index":779,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:7",{"_index":776,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/multer.config.ts",{"_index":1011,"title":{},"body":{"injectables/MulterConfigService.html":{},"coverage.html":{}}}],["src/files/multer.config.ts:11",{"_index":1015,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["src/files/multer.config.ts:30",{"_index":1021,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["src/files/multer.config.ts:33",{"_index":1018,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["src/jobs/dto/create",{"_index":473,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"coverage.html":{}}}],["src/jobs/dto/update",{"_index":1392,"title":{},"body":{"classes/UpdateJobDto.html":{},"coverage.html":{}}}],["src/jobs/jobs.controller.ts",{"_index":813,"title":{},"body":{"controllers/JobsController.html":{},"coverage.html":{}}}],["src/jobs/jobs.controller.ts:26",{"_index":818,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:33",{"_index":821,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:43",{"_index":824,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:49",{"_index":831,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:59",{"_index":827,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.module.ts",{"_index":846,"title":{},"body":{"modules/JobsModule.html":{}}}],["src/jobs/jobs.service.ts",{"_index":849,"title":{},"body":{"injectables/JobsService.html":{},"coverage.html":{}}}],["src/jobs/jobs.service.ts:11",{"_index":851,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:16",{"_index":853,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:26",{"_index":854,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:57",{"_index":855,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:61",{"_index":857,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:74",{"_index":856,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/schemas/job.schema",{"_index":950,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"classes/Resume.html":{}}}],["src/jobs/schemas/job.schema.ts",{"_index":792,"title":{},"body":{"classes/Job.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/jobs/schemas/job.schema.ts:12",{"_index":806,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:15",{"_index":793,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:22",{"_index":805,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:25",{"_index":802,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:28",{"_index":798,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:31",{"_index":803,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:34",{"_index":807,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:37",{"_index":799,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:40",{"_index":800,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:43",{"_index":794,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:46",{"_index":795,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:52",{"_index":808,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:55",{"_index":809,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:61",{"_index":801,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:64",{"_index":796,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:67",{"_index":797,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:9",{"_index":804,"title":{},"body":{"classes/Job.html":{}}}],["src/mail/mail.controller.ts",{"_index":937,"title":{},"body":{"controllers/MailController.html":{},"coverage.html":{}}}],["src/mail/mail.controller.ts:29",{"_index":942,"title":{},"body":{"controllers/MailController.html":{}}}],["src/mail/mail.module.ts",{"_index":987,"title":{},"body":{"modules/MailModule.html":{}}}],["src/mail/mail.service.ts",{"_index":1010,"title":{},"body":{"injectables/MailService.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":1544,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/permissions/dto/create",{"_index":552,"title":{},"body":{"classes/CreatePermissionDto.html":{},"coverage.html":{}}}],["src/permissions/dto/update",{"_index":1394,"title":{},"body":{"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["src/permissions/permissions.controller.ts",{"_index":1083,"title":{},"body":{"controllers/PermissionsController.html":{},"coverage.html":{}}}],["src/permissions/permissions.controller.ts:19",{"_index":1085,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.controller.ts:28",{"_index":1087,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.controller.ts:37",{"_index":1088,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.controller.ts:42",{"_index":1091,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.controller.ts:51",{"_index":1089,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.module.ts",{"_index":1106,"title":{},"body":{"modules/PermissionsModule.html":{}}}],["src/permissions/permissions.service.ts",{"_index":1108,"title":{},"body":{"injectables/PermissionsService.html":{},"coverage.html":{}}}],["src/permissions/permissions.service.ts:11",{"_index":1110,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:16",{"_index":1111,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:40",{"_index":1112,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:72",{"_index":1113,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:76",{"_index":1115,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:89",{"_index":1114,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/schema/permission.schema",{"_index":634,"title":{},"body":{"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/Role.html":{}}}],["src/permissions/schema/permission.schema.ts",{"_index":1069,"title":{},"body":{"classes/Permission.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/permissions/schema/permission.schema.ts:12",{"_index":1070,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schema/permission.schema.ts:15",{"_index":1076,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schema/permission.schema.ts:18",{"_index":1077,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schema/permission.schema.ts:20",{"_index":1072,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schema/permission.schema.ts:25",{"_index":1071,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schema/permission.schema.ts:28",{"_index":1079,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schema/permission.schema.ts:30",{"_index":1080,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schema/permission.schema.ts:35",{"_index":1075,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schema/permission.schema.ts:38",{"_index":1073,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schema/permission.schema.ts:41",{"_index":1074,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schema/permission.schema.ts:9",{"_index":1078,"title":{},"body":{"classes/Permission.html":{}}}],["src/resumes/dto/create",{"_index":563,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/History.html":{},"classes/UpdatedBy.html":{},"coverage.html":{}}}],["src/resumes/dto/update",{"_index":1396,"title":{},"body":{"classes/UpdateResumeDto.html":{},"coverage.html":{}}}],["src/resumes/resumes.controller.ts",{"_index":1177,"title":{},"body":{"controllers/ResumesController.html":{},"coverage.html":{}}}],["src/resumes/resumes.controller.ts:26",{"_index":1182,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:33",{"_index":1184,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:43",{"_index":1185,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:49",{"_index":1190,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:59",{"_index":1189,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:65",{"_index":1188,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.module.ts",{"_index":1208,"title":{},"body":{"modules/ResumesModule.html":{}}}],["src/resumes/resumes.service.ts",{"_index":1211,"title":{},"body":{"injectables/ResumesService.html":{},"coverage.html":{}}}],["src/resumes/resumes.service.ts:116",{"_index":1220,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:12",{"_index":1214,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:128",{"_index":1219,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:17",{"_index":1216,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:44",{"_index":1217,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:77",{"_index":1218,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:81",{"_index":1221,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:94",{"_index":1223,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/schemas/resume.schema.ts",{"_index":1156,"title":{},"body":{"classes/Resume.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/resumes/schemas/resume.schema.ts:11",{"_index":1164,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:14",{"_index":1172,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:17",{"_index":1171,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:20",{"_index":1168,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:23",{"_index":1159,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:26",{"_index":1167,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:36",{"_index":1165,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:43",{"_index":1160,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:46",{"_index":1161,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:52",{"_index":1169,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:55",{"_index":1170,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:61",{"_index":1166,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:64",{"_index":1162,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:67",{"_index":1163,"title":{},"body":{"classes/Resume.html":{}}}],["src/roles/dto/create",{"_index":582,"title":{},"body":{"classes/CreateRoleDto.html":{},"coverage.html":{}}}],["src/roles/dto/update",{"_index":1398,"title":{},"body":{"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["src/roles/roles.controller.ts",{"_index":1256,"title":{},"body":{"controllers/RolesController.html":{},"coverage.html":{}}}],["src/roles/roles.controller.ts:17",{"_index":1259,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:23",{"_index":1260,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:32",{"_index":1261,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:37",{"_index":1264,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:46",{"_index":1262,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.module",{"_index":233,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/roles/roles.module.ts",{"_index":1277,"title":{},"body":{"modules/RolesModule.html":{}}}],["src/roles/roles.service",{"_index":182,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["src/roles/roles.service.ts",{"_index":1280,"title":{},"body":{"injectables/RolesService.html":{},"coverage.html":{}}}],["src/roles/roles.service.ts:100",{"_index":1286,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:13",{"_index":1282,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:18",{"_index":1283,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:41",{"_index":1284,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:74",{"_index":1285,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:84",{"_index":1287,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/schemas/role.schema",{"_index":236,"title":{},"body":{"modules/AuthModule.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["src/roles/schemas/role.schema.ts",{"_index":1242,"title":{},"body":{"classes/Role.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/roles/schemas/role.schema.ts:10",{"_index":1250,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:13",{"_index":1251,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:16",{"_index":1247,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:19",{"_index":1248,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:22",{"_index":1243,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:25",{"_index":1244,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:31",{"_index":1252,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:34",{"_index":1253,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:40",{"_index":1249,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:43",{"_index":1245,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:46",{"_index":1246,"title":{},"body":{"classes/Role.html":{}}}],["src/shared/constants/status.enum",{"_index":1225,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/shared/constants/status.enum.ts",{"_index":1548,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/subscribers/dto/create",{"_index":604,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"controllers/SubscribersController.html":{},"coverage.html":{}}}],["src/subscribers/dto/update",{"_index":1339,"title":{},"body":{"controllers/SubscribersController.html":{},"classes/UpdateSubscriberDto.html":{},"coverage.html":{}}}],["src/subscribers/schemas/subscriber.schema",{"_index":949,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts",{"_index":1305,"title":{},"body":{"classes/Subscriber.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:12",{"_index":1313,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:15",{"_index":1314,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:18",{"_index":1307,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:23",{"_index":1306,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:26",{"_index":1315,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:28",{"_index":1316,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:33",{"_index":1312,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:36",{"_index":1308,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:39",{"_index":1309,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:9",{"_index":1311,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/subscribers.controller.ts",{"_index":1319,"title":{},"body":{"controllers/SubscribersController.html":{},"coverage.html":{}}}],["src/subscribers/subscribers.controller.ts:28",{"_index":1323,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.controller.ts:36",{"_index":1329,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.controller.ts:43",{"_index":1325,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.controller.ts:53",{"_index":1326,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.controller.ts:60",{"_index":1334,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.controller.ts:69",{"_index":1330,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.module.ts",{"_index":1352,"title":{},"body":{"modules/SubscribersModule.html":{}}}],["src/subscribers/subscribers.service",{"_index":1337,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.service.ts",{"_index":1356,"title":{},"body":{"injectables/SubscribersService.html":{},"coverage.html":{}}}],["src/subscribers/subscribers.service.ts:11",{"_index":1359,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:16",{"_index":1360,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:31",{"_index":1361,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:62",{"_index":1362,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:66",{"_index":1366,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:79",{"_index":1364,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:83",{"_index":1365,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/users/dto/create",{"_index":177,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{},"coverage.html":{}}}],["src/users/dto/update",{"_index":1402,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/users/schemas/user.schema",{"_index":632,"title":{},"body":{"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{}}}],["src/users/schemas/user.schema.ts",{"_index":1409,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/users/schemas/user.schema.ts:10",{"_index":1417,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:13",{"_index":1421,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:16",{"_index":1420,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:19",{"_index":1411,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:22",{"_index":1423,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:25",{"_index":1412,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:31",{"_index":1418,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:34",{"_index":1410,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:37",{"_index":1422,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:40",{"_index":1413,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:43",{"_index":1414,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:49",{"_index":1424,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:52",{"_index":1425,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:58",{"_index":1419,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:61",{"_index":1415,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:64",{"_index":1416,"title":{},"body":{"classes/User.html":{}}}],["src/users/user.interface",{"_index":180,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{}}}],["src/users/user.interface.ts",{"_index":791,"title":{},"body":{"interfaces/IUser.html":{},"coverage.html":{}}}],["src/users/users.controller.ts",{"_index":1431,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:24",{"_index":1435,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:28",{"_index":1436,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:37",{"_index":1437,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:43",{"_index":1442,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:49",{"_index":1439,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module",{"_index":222,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/users/users.module.ts",{"_index":1456,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{}}}],["src/users/users.service.ts",{"_index":1459,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:116",{"_index":1468,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:137",{"_index":1470,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:148",{"_index":1473,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:151",{"_index":1477,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:164",{"_index":1476,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:183",{"_index":1479,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:191",{"_index":1481,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:21",{"_index":1464,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:26",{"_index":1480,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:28",{"_index":1482,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:33",{"_index":1466,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:55",{"_index":1475,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:83",{"_index":1467,"title":{},"body":{"injectables/UsersService.html":{}}}],["start",{"_index":502,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{}}}],["startdate",{"_index":504,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{}}}],["started",{"_index":1596,"title":{"index.html":{}},"body":{}}],["statements",{"_index":1527,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":568,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/History.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/UpdatedBy.html":{},"miscellaneous/variables.html":{}}}],["status_resumes",{"_index":1224,"title":{},"body":{"injectables/ResumesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["status_resumes.pending",{"_index":1228,"title":{},"body":{"injectables/ResumesService.html":{}}}],["statuscode",{"_index":1139,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["storage",{"_index":1026,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["strategy",{"_index":915,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["strict",{"_index":1006,"title":{},"body":{"modules/MailModule.html":{}}}],["string",{"_index":128,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["sub",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{}}}],["subject",{"_index":976,"title":{},"body":{"controllers/MailController.html":{}}}],["subs",{"_index":961,"title":{},"body":{"controllers/MailController.html":{}}}],["subs.name",{"_index":982,"title":{},"body":{"controllers/MailController.html":{}}}],["subs.skills",{"_index":963,"title":{},"body":{"controllers/MailController.html":{}}}],["subscriber",{"_index":941,"title":{"classes/Subscriber.html":{}},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"coverage.html":{}}}],["subscriber')@get",{"_index":1324,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["subscriber')@post",{"_index":1322,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["subscriber')@post('skills",{"_index":1328,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["subscriber.dto",{"_index":1338,"title":{},"body":{"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UpdateSubscriberDto.html":{}}}],["subscriber.dto.ts",{"_index":605,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"classes/UpdateSubscriberDto.html":{},"coverage.html":{}}}],["subscriber.dto.ts:10",{"_index":607,"title":{},"body":{"classes/CreateSubscriberDto.html":{}}}],["subscriber.dto.ts:15",{"_index":608,"title":{},"body":{"classes/CreateSubscriberDto.html":{}}}],["subscriber.dto.ts:23",{"_index":611,"title":{},"body":{"classes/CreateSubscriberDto.html":{}}}],["subscriber.name",{"_index":1009,"title":{},"body":{"modules/MailModule.html":{},"modules/SubscribersModule.html":{}}}],["subscriberdocument",{"_index":948,"title":{},"body":{"controllers/MailController.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["subscribermodel",{"_index":956,"title":{},"body":{"controllers/MailController.html":{},"injectables/SubscribersService.html":{}}}],["subscribers",{"_index":959,"title":{},"body":{"controllers/MailController.html":{},"controllers/SubscribersController.html":{}}}],["subscribers.controller",{"_index":1354,"title":{},"body":{"modules/SubscribersModule.html":{}}}],["subscribers.service",{"_index":1353,"title":{},"body":{"modules/SubscribersModule.html":{}}}],["subscribers/subscribers.module",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["subscriberschema",{"_index":993,"title":{},"body":{"modules/MailModule.html":{},"classes/Subscriber.html":{},"modules/SubscribersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["subscriberscontroller",{"_index":1318,"title":{"controllers/SubscribersController.html":{}},"body":{"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"coverage.html":{}}}],["subscribersmodule",{"_index":70,"title":{"modules/SubscribersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SubscribersModule.html":{},"modules.html":{},"overview.html":{}}}],["subscribersservice",{"_index":1336,"title":{"injectables/SubscribersService.html":{}},"body":{"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"coverage.html":{},"overview.html":{}}}],["subsskills",{"_index":962,"title":{},"body":{"controllers/MailController.html":{}}}],["success",{"_index":201,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["success')@post",{"_index":1434,"title":{},"body":{"controllers/UsersController.html":{}}}],["success')@public()@post('/register",{"_index":168,"title":{},"body":{"controllers/AuthController.html":{}}}],["successfully",{"_index":1049,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["super",{"_index":883,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["super.canactivate(context",{"_index":888,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["super_admin",{"_index":1664,"title":{},"body":{"miscellaneous/variables.html":{}}}],["support",{"_index":974,"title":{},"body":{"controllers/MailController.html":{},"modules.html":{}}}],["svg",{"_index":1639,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":1052,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["t",{"_index":529,"title":{},"body":{"classes/CreateCompanyDto.html":{},"classes/CreateRoleDto.html":{},"index.html":{}}}],["table",{"_index":1553,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1552,"title":{},"body":{"coverage.html":{}}}],["targetdirectory",{"_index":1019,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["targetendpoint",{"_index":898,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["targetendpoint.startswith('/api/v1/auth",{"_index":905,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["targetmethod",{"_index":896,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["team",{"_index":975,"title":{},"body":{"controllers/MailController.html":{}}}],["template",{"_index":980,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{}}}],["templates",{"_index":1003,"title":{},"body":{"modules/MailModule.html":{}}}],["th",{"_index":679,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["this.appservice.gethello",{"_index":42,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(req.user",{"_index":195,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.logout(req.user",{"_index":207,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.processnewtoken(refreshtoken",{"_index":200,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.register(createuserdto",{"_index":204,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(username",{"_index":933,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.companiesservice.create(createcompanydto",{"_index":359,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companiesservice.findall(+currentpage",{"_index":363,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companiesservice.findone(id",{"_index":366,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companiesservice.remove(id",{"_index":370,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companiesservice.update(id",{"_index":368,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companymodel",{"_index":426,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companymodel.create",{"_index":401,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companymodel.find(filter)).length",{"_index":416,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companymodel.findone",{"_index":438,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companymodel.softdelete",{"_index":442,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companymodel.updateone",{"_index":439,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.configservice.get('email_admin",{"_index":1520,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.configservice.get('jwt_refresh_token_expire",{"_index":311,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.get('jwt_refresh_token_secred",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.get('password_init",{"_index":698,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.configservice.get('port",{"_index":45,"title":{},"body":{"controllers/AppController.html":{}}}],["this.configservice.get('should_init",{"_index":665,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.ensureexists(`public/images/${folder",{"_index":1031,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["this.filesservice.findall",{"_index":761,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.filesservice.findone(+id",{"_index":762,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.filesservice.remove(+id",{"_index":765,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.filesservice.update(+id",{"_index":764,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.gethashpassword(createuserdto.password",{"_index":1496,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.gethashpassword(registeruserdto.password",{"_index":1504,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.jobmodel",{"_index":861,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.create",{"_index":859,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.find",{"_index":965,"title":{},"body":{"controllers/MailController.html":{}}}],["this.jobmodel.find(filter)).length",{"_index":860,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.findone",{"_index":862,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.softdelete",{"_index":864,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.updateone",{"_index":863,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobsservice.create(createjobdto",{"_index":837,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.findall(+currentpage",{"_index":839,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.findone(id",{"_index":841,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.remove(id",{"_index":843,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.update(id",{"_index":842,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jwtservice.sign(payload",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verify(refreshtoken",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.log",{"_index":709,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.mailerservice.sendmail",{"_index":972,"title":{},"body":{"controllers/MailController.html":{}}}],["this.permissionmodel",{"_index":1127,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.count",{"_index":670,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.permissionmodel.create",{"_index":1125,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.find(filter)).length",{"_index":1126,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.find({}).select('_id",{"_index":676,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.permissionmodel.findone",{"_index":1119,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.insertmany(init_permissions",{"_index":674,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.permissionmodel.softdelete",{"_index":1129,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.updateone",{"_index":1128,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionservice.create(createpermissiondto",{"_index":1099,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.permissionservice.findall(+currentpage",{"_index":1100,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.permissionservice.findone(id",{"_index":1101,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.permissionservice.remove(id",{"_index":1103,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.permissionservice.update(id",{"_index":1102,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.reflector.get(response_message",{"_index":1153,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["this.reflector.getallandoverride",{"_index":895,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["this.reflector.getallandoverride(is_public_key",{"_index":885,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["this.refreshtoken(payload",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.resumemodel",{"_index":1232,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.create",{"_index":1227,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.find(filter)).length",{"_index":1231,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.findone",{"_index":1234,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.softdelete",{"_index":1237,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.updateone",{"_index":1235,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumesservice.create(createresumedto",{"_index":1197,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.findall(+currentpage",{"_index":1198,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.findone(id",{"_index":1199,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.findresumebyuser(user",{"_index":1205,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.remove(id",{"_index":1202,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.updatestatus(id",{"_index":1201,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.rolemodel",{"_index":1292,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.count",{"_index":672,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.rolemodel.create",{"_index":1290,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.find(filter)).length",{"_index":1291,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.findbyid(_id)).populate",{"_index":1296,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.findbyid(id",{"_index":1300,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.findone",{"_index":693,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["this.rolemodel.insertmany",{"_index":677,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.rolemodel.softdelete",{"_index":1304,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.updateone",{"_index":1297,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.roleservice.findone(user.role._id",{"_index":211,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.roleservice.findone(userrole._id",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["this.rolesservice.create(createroledto",{"_index":1269,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.rolesservice.findall(+currentpage",{"_index":1270,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.rolesservice.findone(id",{"_index":1271,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.rolesservice.remove(id",{"_index":1273,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.rolesservice.update(id",{"_index":1272,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.subscribermodel",{"_index":1378,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscribermodel.create",{"_index":1376,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscribermodel.find",{"_index":960,"title":{},"body":{"controllers/MailController.html":{}}}],["this.subscribermodel.find(filter)).length",{"_index":1377,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscribermodel.findone",{"_index":1367,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscribermodel.softdelete",{"_index":1381,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscribermodel.updateone",{"_index":1379,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscribersservice.create(createsubscriberdto",{"_index":1342,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.subscribersservice.findall(+currentpage",{"_index":1346,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.subscribersservice.findone(id",{"_index":1347,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.subscribersservice.getskills(user",{"_index":1345,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.subscribersservice.remove(id",{"_index":1349,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.subscribersservice.update(updatesubscriberdto",{"_index":1348,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.usermodel",{"_index":1512,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.count",{"_index":668,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.usermodel.create",{"_index":1497,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.find(filter)).length",{"_index":1511,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findbyid(id",{"_index":1518,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findone",{"_index":1493,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.insertmany",{"_index":694,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.usermodel.softdelete",{"_index":1523,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.updateone",{"_index":1515,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userservice.gethashpassword",{"_index":697,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.usersservice.create(createuserdto",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.findall(+currentpage",{"_index":1448,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findone(id",{"_index":1449,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findonebyusername(username",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.finduserbytoken(refreshtoken",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.isvalidpassword",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.register(registeruserdto",{"_index":1447,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.remove(id",{"_index":1452,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.update(updateuserdto",{"_index":1451,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.updateuserrefreshtoken",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.updateuserrefreshtoken(_id",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{}}}],["throttlerguard",{"_index":183,"title":{},"body":{"controllers/AuthController.html":{}}}],["throttlermodule",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["throttlermodule.forroot",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["throw",{"_index":312,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/PermissionsService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["thông",{"_index":1613,"title":{},"body":{"index.html":{}}}],["thống",{"_index":688,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/SubscribersService.html":{}}}],["thức",{"_index":1621,"title":{},"body":{"index.html":{}}}],["tiktok",{"_index":1625,"title":{},"body":{"index.html":{}}}],["timestamps",{"_index":470,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["tin",{"_index":1614,"title":{},"body":{"index.html":{}}}],["todo",{"_index":983,"title":{},"body":{"controllers/MailController.html":{}}}],["token",{"_index":196,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["token')@public()@get('/refresh",{"_index":162,"title":{},"body":{"controllers/AuthController.html":{}}}],["toobject",{"_index":924,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["total",{"_index":437,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["totalitems",{"_index":415,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["totalpages",{"_index":417,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["tr",{"_index":590,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["transform",{"_index":489,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/History.html":{},"classes/UpdatedBy.html":{}}}],["transformer",{"_index":490,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateUserDto.html":{},"classes/History.html":{},"classes/RegisterUserDto.html":{},"classes/UpdatedBy.html":{},"classes/UserLoginDto.html":{},"dependencies.html":{}}}],["transforminterceptor",{"_index":1147,"title":{"injectables/TransformInterceptor.html":{}},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["transport",{"_index":995,"title":{},"body":{"modules/MailModule.html":{}}}],["true",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"classes/Job.html":{},"injectables/JwtAuthGuard.html":{},"modules/MailModule.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{}}}],["trying",{"_index":1066,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["trên",{"_index":1371,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["trống",{"_index":478,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/History.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/UserLoginDto.html":{}}}],["trống'})@isarray({message",{"_index":547,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{}}}],["trống'})@isboolean({message",{"_index":587,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["trống'})@isdate({message",{"_index":540,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/History.html":{}}}],["trống'})@isemail({message",{"_index":606,"title":{},"body":{"classes/CreateSubscriberDto.html":{}}}],["trống'})@ismongoid({message",{"_index":619,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["trống'})@isobject()@validatenested()@type(undefined",{"_index":537,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/RegisterUserDto.html":{}}}],["ts",{"_index":420,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["tsconfig.json",{"_index":1637,"title":{},"body":{"index.html":{}}}],["ttl",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["type",{"_index":146,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type(undefined",{"_index":787,"title":{},"body":{"classes/History.html":{}}}],["typealiases",{"_index":1650,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":1389,"title":{},"body":{"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["tài",{"_index":1521,"title":{},"body":{"injectables/UsersService.html":{}}}],["tác",{"_index":1611,"title":{},"body":{"index.html":{}}}],["tên",{"_index":532,"title":{},"body":{"classes/CreateCompanyDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{}}}],["tìm",{"_index":1616,"title":{},"body":{"index.html":{}}}],["tại",{"_index":1370,"title":{},"body":{"injectables/SubscribersService.html":{},"index.html":{}}}],["tồn",{"_index":1369,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["udemy",{"_index":1629,"title":{},"body":{"index.html":{}}}],["unauthorizedexception",{"_index":880,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{}}}],["unauthorizedexception('invalid",{"_index":934,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["unauthorizedexception('token",{"_index":893,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["unauthorizedexception('you",{"_index":906,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["undefined",{"_index":1157,"title":{},"body":{"classes/Resume.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["undefined})@apiheader({name",{"_index":729,"title":{},"body":{"controllers/FilesController.html":{}}}],["unknown",{"_index":149,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["unlicensed",{"_index":1648,"title":{},"body":{"properties.html":{}}}],["unreachable",{"_index":422,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["update",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["update(@body",{"_index":1450,"title":{},"body":{"controllers/UsersController.html":{}}}],["update(@param('id",{"_index":763,"title":{},"body":{"controllers/FilesController.html":{}}}],["update(_id",{"_index":391,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{}}}],["update(id",{"_index":343,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{}}}],["update(updatesubscriberdto",{"_index":1331,"title":{},"body":{"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{}}}],["update(updateuserdto",{"_index":1440,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updatecompanydto",{"_index":344,"title":{"classes/UpdateCompanyDto.html":{}},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/UpdateCompanyDto.html":{},"coverage.html":{}}}],["updatedat",{"_index":424,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/CreateResumeDto.html":{},"classes/History.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["updatedby",{"_index":440,"title":{"classes/UpdatedBy.html":{}},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/CreateResumeDto.html":{},"classes/History.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["updatefiledto",{"_index":721,"title":{"classes/UpdateFileDto.html":{}},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/UpdateFileDto.html":{},"coverage.html":{}}}],["updatejobdto",{"_index":828,"title":{"classes/UpdateJobDto.html":{}},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{},"classes/UpdateJobDto.html":{},"coverage.html":{}}}],["updatepermissiondto",{"_index":1090,"title":{"classes/UpdatePermissionDto.html":{}},"body":{"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/RolesController.html":{},"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["updateresumedto",{"_index":1194,"title":{"classes/UpdateResumeDto.html":{}},"body":{"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/UpdateResumeDto.html":{},"coverage.html":{}}}],["updateroledto",{"_index":1263,"title":{"classes/UpdateRoleDto.html":{}},"body":{"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["updates",{"_index":783,"title":{},"body":{"injectables/FilesService.html":{}}}],["updatestatus",{"_index":1212,"title":{},"body":{"injectables/ResumesService.html":{}}}],["updatestatus(_id",{"_index":1222,"title":{},"body":{"injectables/ResumesService.html":{}}}],["updatesubscriberdto",{"_index":1332,"title":{"classes/UpdateSubscriberDto.html":{}},"body":{"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UpdateSubscriberDto.html":{},"coverage.html":{}}}],["updateuserdto",{"_index":1401,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["updateuserdto._id",{"_index":1516,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuserrefreshtoken",{"_index":1463,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuserrefreshtoken(_id",{"_index":1478,"title":{},"body":{"injectables/UsersService.html":{}}}],["upload",{"_index":1695,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uploadedfile",{"_index":736,"title":{},"body":{"controllers/FilesController.html":{}}}],["uploadfile",{"_index":717,"title":{},"body":{"controllers/FilesController.html":{}}}],["uploadfile(@uploadedfile",{"_index":758,"title":{},"body":{"controllers/FilesController.html":{}}}],["uploadfile(file",{"_index":723,"title":{},"body":{"controllers/FilesController.html":{}}}],["upsert",{"_index":1380,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["uri",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["url",{"_index":569,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/History.html":{},"classes/Resume.html":{},"classes/UpdatedBy.html":{}}}],["use",{"_index":1758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useclass",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"modules/FilesModule.html":{}}}],["usefactory",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{}}}],["usefilters",{"_index":739,"title":{},"body":{"controllers/FilesController.html":{}}}],["usefilters(new",{"_index":752,"title":{},"body":{"controllers/FilesController.html":{}}}],["useguards",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{}}}],["useguards(jwtauthguard",{"_index":208,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(localauthguard",{"_index":191,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(throttlerguard",{"_index":192,"title":{},"body":{"controllers/AuthController.html":{}}}],["useinterceptors",{"_index":735,"title":{},"body":{"controllers/FilesController.html":{}}}],["useinterceptors(fileinterceptor('fileupload",{"_index":751,"title":{},"body":{"controllers/FilesController.html":{}}}],["user",{"_index":148,"title":{"classes/User.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/CreateResumeDto.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/History.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"modules/MailModule.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user')@delete(':id",{"_index":1438,"title":{},"body":{"controllers/UsersController.html":{}}}],["user')@patch",{"_index":1441,"title":{},"body":{"controllers/UsersController.html":{}}}],["user')@post('/by",{"_index":1187,"title":{},"body":{"controllers/ResumesController.html":{}}}],["user._id",{"_index":403,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["user._id.tostring",{"_index":1239,"title":{},"body":{"injectables/ResumesService.html":{}}}],["user.createdat",{"_index":1502,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.dto",{"_index":178,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":514,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{},"coverage.html":{}}}],["user.dto.ts:102",{"_index":1428,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["user.dto.ts:11",{"_index":516,"title":{},"body":{"classes/Company-2.html":{}}}],["user.dto.ts:18",{"_index":617,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:28",{"_index":615,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:33",{"_index":618,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:40",{"_index":620,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:44",{"_index":613,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:45",{"_index":612,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:46",{"_index":616,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:53",{"_index":1135,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:63",{"_index":1133,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:68",{"_index":1136,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:72",{"_index":1131,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:76",{"_index":1137,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:8",{"_index":515,"title":{},"body":{"classes/Company-2.html":{}}}],["user.dto.ts:84",{"_index":1132,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:86",{"_index":1130,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:87",{"_index":1134,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:9",{"_index":1404,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:94",{"_index":1429,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["user.email",{"_index":404,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["user.interface",{"_index":1444,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.name",{"_index":635,"title":{},"body":{"modules/DatabasesModule.html":{},"modules/UsersModule.html":{}}}],["user.password",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.permissions",{"_index":212,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.role",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.toobject",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{}}}],["user?.permissions",{"_index":900,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["user@gmail.com",{"_index":707,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["user_role",{"_index":658,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userdocument",{"_index":655,"title":{},"body":{"injectables/DatabasesService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["userid",{"_index":570,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/History.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/UpdatedBy.html":{}}}],["userlogindto",{"_index":176,"title":{"classes/UserLoginDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{},"coverage.html":{}}}],["userlogindto})@post('/login",{"_index":154,"title":{},"body":{"controllers/AuthController.html":{}}}],["userm",{"_index":1484,"title":{},"body":{"injectables/UsersService.html":{}}}],["usermodel",{"_index":650,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/UsersService.html":{}}}],["username",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{}}}],["username/password",{"_index":935,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["userrole",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["userrole?._id",{"_index":708,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["userrole?.id",{"_index":1510,"title":{},"body":{"injectables/UsersService.html":{}}}],["users",{"_index":1432,"title":{},"body":{"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["users.controller",{"_index":1458,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":1443,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/users.module",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["userschema",{"_index":631,"title":{},"body":{"modules/DatabasesModule.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userscontroller",{"_index":1430,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["userservice",{"_index":648,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["usersmodule",{"_index":71,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":250,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["v",{"_index":681,"title":{},"body":{"injectables/DatabasesService.html":{},"index.html":{}}}],["valid",{"_index":313,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{}}}],["validate",{"_index":909,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validate(payload",{"_index":912,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(username",{"_index":930,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validatenested",{"_index":488,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateUserDto.html":{},"classes/History.html":{},"classes/RegisterUserDto.html":{},"classes/UpdatedBy.html":{},"classes/UserLoginDto.html":{}}}],["validatenested()@type(undefined",{"_index":573,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["validateuser",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(username",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{}}}],["validator",{"_index":399,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/History.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/UserLoginDto.html":{},"dependencies.html":{}}}],["value",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{},"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"injectables/DatabasesService.html":{},"classes/History.html":{},"injectables/MulterConfigService.html":{},"classes/UpdatedBy.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":1532,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1659,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1645,"title":{},"body":{"properties.html":{}}}],["vietnam",{"_index":701,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["viên",{"_index":684,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["viện",{"_index":1604,"title":{},"body":{"index.html":{}}}],["void",{"_index":1020,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["vui",{"_index":1372,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["với",{"_index":1605,"title":{},"body":{"index.html":{}}}],["website",{"_index":1619,"title":{},"body":{"index.html":{}}}],["welcome",{"_index":977,"title":{},"body":{"controllers/MailController.html":{}}}],["without",{"_index":1040,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["world",{"_index":130,"title":{},"body":{"injectables/AppService.html":{}}}],["xo",{"_index":1303,"title":{},"body":{"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["y",{"_index":1618,"title":{},"body":{"index.html":{}}}],["you're",{"_index":1065,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["youremail@domain.com",{"_index":522,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["youtube",{"_index":1623,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Render,\n  UseGuards,\n  Request,\n} from '@nestjs/common';\nimport { AppService } from './app.service';\nimport { ConfigService } from '@nestjs/config';\nimport { AuthGuard } from '@nestjs/passport';\nimport { LocalAuthGuard } from './auth/local.auth.guard';\nimport { AuthService } from './auth/auth.service';\nimport { JwtAuthGuard } from './auth/jwt.auth.guard';\nimport { Public } from './decorator/customize';\n\n@Controller()\nexport class AppController {\n  constructor(\n    private readonly appService: AppService,\n    private configService: ConfigService,\n    private authService: AuthService,\n  ) {}\n\n  @Get()\n  getHello() {\n    // const message = this.appService.getHello();\n    // return {\n    //   message,\n    // };\n    const port = this.configService.get('PORT');\n    console.log('port port');\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCompaniesModule\n\nCompaniesModule\n\nAppModule -->\n\nCompaniesModule->AppModule\n\n\n\n\n\nDatabasesModule\n\nDatabasesModule\n\nAppModule -->\n\nDatabasesModule->AppModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nAppModule -->\n\nFilesModule->AppModule\n\n\n\n\n\nJobsModule\n\nJobsModule\n\nAppModule -->\n\nJobsModule->AppModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nPermissionsModule\n\nPermissionsModule\n\nAppModule -->\n\nPermissionsModule->AppModule\n\n\n\n\n\nResumesModule\n\nResumesModule\n\nAppModule -->\n\nResumesModule->AppModule\n\n\n\n\n\nRolesModule\n\nRolesModule\n\nAppModule -->\n\nRolesModule->AppModule\n\n\n\n\n\nSubscribersModule\n\nSubscribersModule\n\nAppModule -->\n\nSubscribersModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CompaniesModule\n                        \n                        \n                            DatabasesModule\n                        \n                        \n                            FilesModule\n                        \n                        \n                            JobsModule\n                        \n                        \n                            MailModule\n                        \n                        \n                            PermissionsModule\n                        \n                        \n                            ResumesModule\n                        \n                        \n                            RolesModule\n                        \n                        \n                            SubscribersModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { UsersModule } from './users/users.module';\nimport { AuthModule } from './auth/auth.module';\nimport { APP_GUARD } from '@nestjs/core';\nimport { JwtAuthGuard } from './auth/jwt.auth.guard';\nimport { softDeletePlugin } from 'soft-delete-plugin-mongoose';\nimport { CompaniesModule } from './companies/companies.module';\nimport { JobsModule } from './jobs/jobs.module';\nimport { FilesModule } from './files/files.module';\nimport { ResumesModule } from './resumes/resumes.module';\nimport { PermissionsModule } from './permissions/permissions.module';\nimport { RolesModule } from './roles/roles.module';\nimport { DatabasesModule } from './databases/databases.module';\nimport { SubscribersModule } from './subscribers/subscribers.module';\nimport { MailModule } from './mail/mail.module';\nimport { ScheduleModule } from '@nestjs/schedule';\nimport { ThrottlerModule } from '@nestjs/throttler';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n    }),\n    MongooseModule.forRootAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        uri: configService.get('MONGODB_URL'),\n        connectionFactory: (connection) => {\n          connection.plugin(softDeletePlugin);\n          return connection;\n        },\n      }),\n      inject: [ConfigService],\n    }),\n    UsersModule,\n    AuthModule,\n    CompaniesModule,\n    JobsModule,\n    FilesModule,\n    ResumesModule,\n    PermissionsModule,\n    RolesModule,\n    DatabasesModule,\n    SubscribersModule,\n    MailModule,\n    ScheduleModule.forRoot(),\n    ThrottlerModule.forRoot({\n      ttl: 60,\n      limit: 10,\n    }),\n    // MongooseModule.forRoot('mongodb+srv://admin:admin@cluster0.pfko9db.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0'),\n  ],\n  controllers: [AppController],\n  providers: [\n    AppService,\n    // {\n    //   provide: APP_GUARD,\n    //   useClass: JwtAuthGuard,\n    // },\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Render } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                getAccount\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                handleLogin\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                handleLogout\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                handleRefreshToken\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                handleRegister\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getAccount\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAccount(user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('account')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        handleLogin\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleLogin(req, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('User login')@UseGuards(LocalAuthGuard)@UseGuards(ThrottlerGuard)@Public()@ApiBody({type: UserLoginDto})@Post('/login')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        handleLogout\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleLogout(req, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('User logout')@UseGuards(LocalAuthGuard)@Post('/logout')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        handleRefreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleRefreshToken(req, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('User Refresh Token')@Public()@Get('/refresh')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        handleRegister\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleRegister(createUserDTO: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Register new user success')@Public()@Post('/register')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDTO\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Render,\n  UseGuards,\n  Request,\n  Body,\n  Res,\n} from '@nestjs/common';\nimport { Public, ResponseMessage, User } from 'src/decorator/customize';\nimport { LocalAuthGuard } from './local.auth.guard';\nimport { AuthService } from './auth.service';\nimport { CreateUserDto, UserLoginDto } from 'src/users/dto/create-user.dto';\nimport { Response } from 'express';\nimport { IUser } from 'src/users/user.interface';\nimport { RolesService } from 'src/roles/roles.service';\nimport { ThrottlerGuard } from '@nestjs/throttler';\nimport { ApiBody, ApiTags } from '@nestjs/swagger';\n\n@ApiTags('Authentication')\n@Controller('auth')\nexport class AuthController {\n  constructor(\n    private authService: AuthService,\n    private roleService: RolesService,\n  ) {}\n\n  @ResponseMessage('User login')\n  @UseGuards(LocalAuthGuard)\n  @UseGuards(ThrottlerGuard)\n  @Public()\n  @ApiBody({ type: UserLoginDto })\n  @Post('/login')\n  async handleLogin(\n    @Request() req,\n    @Res({ passthrough: true }) response: Response,\n  ) {\n    return this.authService.login(req.user, response);\n  }\n\n  @ResponseMessage('User Refresh Token')\n  @Public()\n  @Get('/refresh')\n  async handleRefreshToken(\n    @Request() req,\n    @Res({ passthrough: true }) response: Response,\n  ) {\n    const refreshToken = req.cookies['refresh_token'];\n    return this.authService.processNewToken(refreshToken, response);\n    // return this.authService.login(req.user, response);\n  }\n  @ResponseMessage('Register new user success')\n  @Public()\n  @Post('/register')\n  async handleRegister(@Body() createUserDTO: CreateUserDto) {\n    return this.authService.register(createUserDTO);\n  }\n\n  @ResponseMessage('User logout')\n  @UseGuards(LocalAuthGuard)\n  @Post('/logout')\n  async handleLogout(\n    @Request() req,\n    @Res({ passthrough: true }) response: Response,\n  ) {\n    return this.authService.logout(req.user, response);\n  }\n  // @UseGuards(JwtAuthGuard)\n  // @Public()\n  @Get('account')\n  async getAccount(@User() user: IUser) {\n    const permissionGetFromDB = this.roleService.findOne(user.role._id) as any;\n    user.permissions = (await permissionGetFromDB).permissions;\n    return { user };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nRolesModule\n\nRolesModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nRolesModule->AuthModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RolesModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { UsersModule } from 'src/users/users.module';\nimport { PassportModule } from '@nestjs/passport';\nimport { LocalStrategy } from './passport/local.strategy';\nimport { JwtModule, JwtService } from '@nestjs/jwt';\nimport { jwtConstants } from './constants';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { JwtStrategy } from './jwt.strategy';\nimport ms from 'ms';\nimport { AuthController } from './auth.controller';\nimport { RolesModule } from 'src/roles/roles.module';\nimport { RolesService } from 'src/roles/roles.service';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Role, RoleSchema } from 'src/roles/schemas/role.schema';\n@Module({\n  imports: [\n    PassportModule,\n    RolesModule,\n    UsersModule,\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        secret: configService.get('JWT_ACCESS_TOKEN_SECRET'),\n        signOptions: {\n          expiresIn:\n            ms(configService.get('JWT_ACCESS_TOKEN_EXPIRE')) / 1000,\n        },\n      }),\n      inject: [ConfigService],\n    }),\n  ],\n\n  controllers: [AuthController],\n  providers: [AuthService, LocalStrategy, JwtStrategy],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                processNewToken\n                            \n                            \n                                refreshToken\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                logout\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, jwtService: JwtService, configService: ConfigService, roleService: RolesService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleService\n                                                  \n                                                        \n                                                                        RolesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(user: IUser, response: Response)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout(user: IUser, response: Response)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(createUserDTO: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDTO\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateUser(username: string, pass: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pass\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        processNewToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.service.ts:95\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.service.ts:87\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { UsersService } from 'src/users/users.service';\nimport { JwtService } from '@nestjs/jwt';\nimport { IUser } from 'src/users/user.interface';\nimport { CreateUserDto } from 'src/users/dto/create-user.dto';\nimport { genSaltSync, hashSync } from 'bcryptjs';\nimport { ConfigService } from '@nestjs/config';\nimport ms from 'ms';\nimport { Response } from 'express';\nimport { RolesService } from 'src/roles/roles.service';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private usersService: UsersService,\n    private jwtService: JwtService,\n    private configService: ConfigService,\n    private roleService: RolesService\n  ) {}\n\n  async validateUser(username: string, pass: string): Promise {\n    const user = await this.usersService.findOneByUsername(username);\n    if (!user) {\n      return null;\n    }\n    const isValidPassword = this.usersService.isValidPassword(\n      pass,\n      user.password,\n    );\n    if (isValidPassword) {\n      const userRole = user.role as any as { _id: string; name: string };\n      const roleGetFromDB = await this.roleService.findOne(userRole._id);\n      const objUser = {\n        ...user.toObject(),\n        permissions: roleGetFromDB?.permissions ?? [],\n      };\n      return objUser;\n    }\n    return null;\n  }\n  async login(user: IUser, response: Response) {\n    const { _id, name, email, role, permissions } = user;\n    const payload = {\n      sub: 'token login',\n      iss: 'from server',\n      _id,\n      name,\n      email,\n      role,\n      // permissions,\n    };\n    const refreshToken = this.refreshToken(payload);\n    await this.usersService.updateUserRefreshToken(_id, refreshToken);\n    const userRole = user.role as any as { _id: string; name: string };\n    const roleGetFromDB = await this.roleService.findOne(userRole._id);\n\n\n\n    response.clearCookie('refresh_token');\n    response.cookie('refresh_token', refreshToken, {\n      httpOnly: true,\n      maxAge: ms(this.configService.get('JWT_REFRESH_TOKEN_EXPIRE')),\n    });\n    return {\n      access_token: this.jwtService.sign(payload),\n      refreshToken,\n      user: {\n        _id,\n        name,\n        email,\n        role,\n        permissions: roleGetFromDB.permissions,\n      },\n    };\n  }\n  async logout(user: IUser, response: Response) {\n    const { _id, name, email, role } = user;\n    const refreshToken = '';\n    await this.usersService.updateUserRefreshToken(_id, refreshToken);\n    response.clearCookie('refresh_token');\n    return 'ok';\n  }\n\n  async register(createUserDTO: CreateUserDto) {\n    return this.usersService.create(createUserDTO);\n  }\n  refreshToken = (payload) => {\n    const refresh_token = this.jwtService.sign(payload, {\n      secret: this.configService.get('JWT_REFRESH_TOKEN_SECRED'),\n      expiresIn:\n        ms(this.configService.get('JWT_REFRESH_TOKEN_EXPIRE')) / 1000,\n    });\n    return refresh_token;\n  };\n  processNewToken = async (refreshToken: string, response: Response) => {\n    try {\n      this.jwtService.verify(refreshToken, {\n        secret: this.configService.get('JWT_REFRESH_TOKEN_SECRED'),\n      });\n      const user = await this.usersService.findUserByToken(refreshToken);\n      if (user) {\n        //update refresh token\n        const { _id, name, email, role } = user;\n        const payload = {\n          sub: 'token login',\n          iss: 'from server',\n          _id,\n          name,\n          email,\n          role,\n        };\n        const refreshToken = this.refreshToken(payload);\n        await this.usersService.updateUserRefreshToken(\n          _id.toString(),\n          refreshToken,\n        );\n        response.clearCookie('refresh_token');\n        response.cookie('refresh_token', refreshToken, {\n          httpOnly: true,\n          maxAge: ms(\n            this.configService.get('JWT_REFRESH_TOKEN_EXPIRE'),\n          ),\n        });\n        return {\n          access_token: this.jwtService.sign(payload),\n          refreshToken,\n          user: {\n            _id,\n            name,\n            email,\n            // role,\n          },\n        };\n      } else {\n        throw new BadRequestException(\n          'Refresh token is not valid please login again',\n        );\n      }\n    } catch (error) {\n      throw new BadRequestException(\n        'Refresh token is not valid please login again',\n      );\n    }\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CompaniesController.html":{"url":"controllers/CompaniesController.html","title":"controller - CompaniesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CompaniesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/companies.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                companies\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createCompanyDto: CreateCompanyDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/companies/companies.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createCompanyDto\n                                            \n                                                            CreateCompanyDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: string, limit: string, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get()@ResponseMessage('Fetch List Company with paginate')\n                \n            \n\n                    \n                        \n                            Defined in src/companies/companies.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/companies/companies.controller.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/companies/companies.controller.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateCompanyDto: UpdateCompanyDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/companies/companies.controller.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateCompanyDto\n                                            \n                                                            UpdateCompanyDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Query,\n} from '@nestjs/common';\nimport { CompaniesService } from './companies.service';\nimport { CreateCompanyDto } from './dto/create-company.dto';\nimport { UpdateCompanyDto } from './dto/update-company.dto';\nimport { Public, ResponseMessage, User } from 'src/decorator/customize';\nimport { IUser } from 'src/users/user.interface';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('Companies')\n@Controller('companies')\nexport class CompaniesController {\n  constructor(private readonly companiesService: CompaniesService) {}\n\n  @Post()\n  create(@Body() createCompanyDto: CreateCompanyDto, @User() user: IUser) {\n    return this.companiesService.create(createCompanyDto, user);\n  }\n\n  @Public()\n  @Get()\n  @ResponseMessage('Fetch List Company with paginate')\n  findAll(\n    @Query('current') currentPage: string,\n    @Query('pageSize') limit: string,\n    @Query() qs: string,\n  ) {\n    return this.companiesService.findAll(+currentPage, +limit, qs);\n  }\n  @Public()\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.companiesService.findOne(id);\n  }\n\n  @Patch(':id')\n  update(\n    @Param('id') id: string,\n    @Body() updateCompanyDto: UpdateCompanyDto,\n    @User() user: IUser,\n  ) {\n    return this.companiesService.update(id, updateCompanyDto, user);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string, @User() user: IUser) {\n    return this.companiesService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CompaniesModule.html":{"url":"modules/CompaniesModule.html","title":"module - CompaniesModule","body":"\n                   \n\n\n\n\n    Modules\n    CompaniesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CompaniesModule\n\n\n\ncluster_CompaniesModule_providers\n\n\n\n\nCompaniesService\n\nCompaniesService\n\n\n\nCompaniesModule\n\nCompaniesModule\n\nCompaniesModule -->\n\nCompaniesService->CompaniesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/companies/companies.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CompaniesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CompaniesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CompaniesService } from './companies.service';\nimport { CompaniesController } from './companies.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Company, CompanySchema } from './schema/company.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: Company.name, schema: CompanySchema }]),\n  ],\n  controllers: [CompaniesController],\n  providers: [CompaniesService],\n})\nexport class CompaniesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CompaniesService.html":{"url":"injectables/CompaniesService.html","title":"injectable - CompaniesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CompaniesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/companies.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(companyModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/companies/companies.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        companyModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createCompanyDto: CreateCompanyDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/companies/companies.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createCompanyDto\n                                            \n                                                            CreateCompanyDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: number, limit: number, qs: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/companies/companies.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/companies/companies.service.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/companies/companies.service.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(_id: string, updateCompanyDto: UpdateCompanyDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/companies/companies.service.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateCompanyDto\n                                            \n                                                            UpdateCompanyDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateCompanyDto } from './dto/create-company.dto';\nimport { UpdateCompanyDto } from './dto/update-company.dto';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Company, CompanyDocument } from './schema/company.schema';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { IUser } from 'src/users/user.interface';\nimport aqp from 'api-query-params';\nimport { isEmpty } from 'class-validator';\n\n@Injectable()\nexport class CompaniesService {\n  constructor(\n    @InjectModel(Company.name)\n    private companyModel: SoftDeleteModel,\n  ) {}\n  create(createCompanyDto: CreateCompanyDto, user: IUser) {\n    return this.companyModel.create({\n      ...createCompanyDto,\n      createdBy: {\n        _id: user._id,\n        email: user.email,\n      },\n    });\n  }\n\n  async findAll(currentPage: number, limit: number, qs: any) {\n    const { filter, projection, population } = aqp(qs);\n    delete filter.current;\n    delete filter.pageSize;\n    const { sort } = aqp(qs);\n    const offset = (+currentPage - 1) * +limit;\n    const defaultLimit = +limit ? +limit : 10;\n    const totalItems = (await this.companyModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n    // if (isEmpty(sort)) {\n    //   // @ts-ignore: Unreachable code error\n    //   sort = \"-updatedAt\"\n    // }\n    const result = await this.companyModel\n      .find(filter)\n      .skip(offset)\n      .limit(defaultLimit)\n      // @ts-ignore: Unreachable code error\n      .sort(sort)\n      .populate(population)\n      .exec();\n    return {\n      meta: {\n        current: currentPage,\n        pageSize: limit,\n        pages: totalPages,\n        total: totalItems,\n      },\n      result,\n    };\n  }\n\n  findOne(_id: string) {\n    return this.companyModel.findOne({ _id });\n  }\n\n  update(_id: string, updateCompanyDto: UpdateCompanyDto, user: IUser) {\n    return this.companyModel.updateOne(\n      { _id },\n      {\n        ...updateCompanyDto,\n        updatedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n  }\n\n  async remove(id: string, user: IUser) {\n    await this.companyModel.updateOne(\n      { _id: id },\n      {\n        deletedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n    return this, this.companyModel.softDelete({ _id: id });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Company.html":{"url":"classes/Company.html","title":"class - Company","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Company\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/schema/company.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                logo\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schema/company.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schema/company.schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schema/company.schema.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schema/company.schema.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schema/company.schema.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schema/company.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schema/company.schema.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schema/company.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schema/company.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schema/company.schema.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schema/company.schema.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\n\nexport type CompanyDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Company {\n  @Prop()\n  name: string;\n\n  @Prop()\n  logo: string;\n\n  @Prop()\n  address: string;\n\n  @Prop()\n  description: string;\n  @Prop({ type: Object })\n  createdBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n  @Prop()\n  createdAt: Date;\n\n  @Prop()\n  updatedAt: Date;\n  @Prop({ type: Object })\n  updatedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n  @Prop()\n  isDeleted: boolean;\n\n  @Prop()\n  deletedAt: Date;\n\n  @Prop({ type: Object })\n  deletedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n}\n\nexport const CompanySchema = SchemaFactory.createForClass(Company);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Company-1.html":{"url":"classes/Company-1.html","title":"class - Company-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Company\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/dto/create-job.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                logo\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'ID không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Name không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsArray,\n  IsDate,\n  IsEmail,\n  IsNotEmpty,\n  IsObject,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport { Transform, Type } from 'class-transformer';\nimport mongoose from 'mongoose';\n\nexport class Company {\n  @IsNotEmpty({ message: 'ID không được để trống' })\n  _id: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty({ message: 'Name không được để trống' })\n  name: string;\n\n  logo: string;\n}\n\nexport class CreateJobDto {\n  @IsNotEmpty({\n    message: 'Name không được để trống',\n  })\n  name: string;\n\n  @IsNotEmpty({\n    message: 'Skills không được để trống',\n  })\n  @IsArray({\n    message: 'Skills có định dạng là array',\n  })\n  @IsString({\n    each: true,\n    message: 'Skill có định dạng là String',\n  })\n  skills: string[];\n\n  @IsNotEmpty({\n    message: 'Company không được để trống',\n  })\n  @IsObject()\n  @ValidateNested()\n  @Type(() => Company)\n  company: Company;\n\n  @IsNotEmpty({\n    message: 'Salary không được để trống',\n  })\n  salary: number;\n\n  @IsNotEmpty({\n    message: 'Level không được để trống',\n  })\n  level: string;\n\n  @IsNotEmpty({\n    message: 'Description không được để trống',\n  })\n  description: string;\n  @IsNotEmpty({\n    message: 'Location không được để trống',\n  })\n  location: string;\n  @IsNotEmpty({\n    message: 'Start Date không được để trống',\n  })\n  @IsDate({\n    message: 'field startDate không đúng định dạng',\n  })\n  @Transform(({ value }) => new Date(value))\n  startDate: Date;\n\n  @IsNotEmpty({\n    message: 'End Date không được để trống',\n  })\n  @IsDate({\n    message: 'field endDate không đúng định dạng',\n  })\n  @Transform(({ value }) => new Date(value))\n  endDate: Date;\n}\n\n// export class RegisterJobDto {\n//   @IsNotEmpty({\n//     message: 'Name không được để trống',\n//   })\n//   name: string;\n//   @IsEmail(\n//     {},\n//     {\n//       message: 'Email không đúng định dạng',\n//     },\n//   )\n//   @IsNotEmpty({\n//     message: 'Email không được để trống',\n//   })\n//   email: string;\n\n//   @IsNotEmpty({\n//     message: 'Password không được để trống',\n//   })\n//   password: string;\n//   @IsNotEmpty({\n//     message: 'Age không được để trống',\n//   })\n//   age: number;\n//   @IsNotEmpty({\n//     message: 'Role không được để trống',\n//   })\n//   role: number;\n\n//   @IsNotEmpty({\n//     message: 'Company không được để trống',\n//   })\n//   @IsObject()\n//   @ValidateNested()\n//   @Type(() => Company)\n//   company: Company;\n\n//   address: string;\n//   gender: string;\n// }\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Company-2.html":{"url":"classes/Company-2.html","title":"class - Company-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Company\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'ID không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Name không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsMongoId, IsNotEmpty, IsObject, IsString, ValidateNested } from 'class-validator';\nimport { Type } from 'class-transformer';\nimport mongoose from 'mongoose';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class Company {\n  @IsNotEmpty({ message: 'ID không được để trống' })\n  _id: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty({ message: 'Name không được để trống' })\n  name: string;\n}\n\nexport class CreateUserDto {\n  @IsNotEmpty({\n    message: 'Name không được để trống',\n  })\n  name: string;\n  @IsEmail(\n    {},\n    {\n      message: 'Email không đúng định dạng',\n    },\n  )\n  @IsNotEmpty({\n    message: 'Email không được để trống',\n  })\n  email: string;\n\n  @IsNotEmpty({\n    message: 'Password không được để trống',\n  })\n  password: string;\n  @IsNotEmpty({\n    message: 'Role không được để trống',\n  })\n  @IsMongoId({\n    message: 'Định dạng Mongo ID',\n  })\n  role: mongoose.Schema.Types.ObjectId;\n  @IsNotEmpty({\n    message: 'Age không được để trống',\n  })\n  age: number;\n  address: string;\n  gender: string;\n}\n\nexport class RegisterUserDto {\n  @IsNotEmpty({\n    message: 'Name không được để trống',\n  })\n  name: string;\n  @IsEmail(\n    {},\n    {\n      message: 'Email không đúng định dạng',\n    },\n  )\n  @IsNotEmpty({\n    message: 'Email không được để trống',\n  })\n  email: string;\n\n  @IsNotEmpty({\n    message: 'Password không được để trống',\n  })\n  password: string;\n  @IsNotEmpty({\n    message: 'Age không được để trống',\n  })\n  age: number;\n  @IsNotEmpty({\n    message: 'Role không được để trống',\n  })\n  role: number;\n\n  @IsNotEmpty({\n    message: 'Company không được để trống',\n  })\n  @IsObject()\n  @ValidateNested()\n  @Type(() => Company)\n  company: Company;\n\n  address: string;\n  gender: string;\n}\n\nexport class UserLoginDto {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({ example: 'youremail@domain.com', description: 'Your Email' })\n  readonly username: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    example: '123',\n    description: 'Password',\n  })\n  readonly password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCompanyDto.html":{"url":"classes/CreateCompanyDto.html","title":"class - CreateCompanyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCompanyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/dto/create-company.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                logo\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Địa chỉ không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/create-company.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Mô tả không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/create-company.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/create-company.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Tên không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/create-company.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty } from 'class-validator';\n\nexport class CreateCompanyDto {\n  @IsNotEmpty({\n    message: 'Tên không được để trống',\n  })\n  name: string;\n\n  @IsNotEmpty({\n    message: 'Địa chỉ không được để trống',\n  })\n  address: string;\n\n  @IsNotEmpty({\n    message: 'Mô tả không được để trống',\n  })\n  description: string;\n  logo: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateFileDto.html":{"url":"classes/CreateFileDto.html","title":"class - CreateFileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateFileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/dto/create-file.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateFileDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateJobDto.html":{"url":"classes/CreateJobDto.html","title":"class - CreateJobDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateJobDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/dto/create-job.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                company\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                endDate\n                            \n                            \n                                    \n                                level\n                            \n                            \n                                    \n                                location\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                salary\n                            \n                            \n                                    \n                                    \n                                    \n                                skills\n                            \n                            \n                                    \n                                    \n                                    \n                                startDate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Company\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Company không được để trống'})@IsObject()@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Description không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'End Date không được để trống'})@IsDate({message: 'field endDate không đúng định dạng'})@Transform( => )\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Level không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Location không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Name không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        salary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Salary không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        skills\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Skills không được để trống'})@IsArray({message: 'Skills có định dạng là array'})@IsString({each: true, message: 'Skill có định dạng là String'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Start Date không được để trống'})@IsDate({message: 'field startDate không đúng định dạng'})@Transform( => )\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:74\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsArray,\n  IsDate,\n  IsEmail,\n  IsNotEmpty,\n  IsObject,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport { Transform, Type } from 'class-transformer';\nimport mongoose from 'mongoose';\n\nexport class Company {\n  @IsNotEmpty({ message: 'ID không được để trống' })\n  _id: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty({ message: 'Name không được để trống' })\n  name: string;\n\n  logo: string;\n}\n\nexport class CreateJobDto {\n  @IsNotEmpty({\n    message: 'Name không được để trống',\n  })\n  name: string;\n\n  @IsNotEmpty({\n    message: 'Skills không được để trống',\n  })\n  @IsArray({\n    message: 'Skills có định dạng là array',\n  })\n  @IsString({\n    each: true,\n    message: 'Skill có định dạng là String',\n  })\n  skills: string[];\n\n  @IsNotEmpty({\n    message: 'Company không được để trống',\n  })\n  @IsObject()\n  @ValidateNested()\n  @Type(() => Company)\n  company: Company;\n\n  @IsNotEmpty({\n    message: 'Salary không được để trống',\n  })\n  salary: number;\n\n  @IsNotEmpty({\n    message: 'Level không được để trống',\n  })\n  level: string;\n\n  @IsNotEmpty({\n    message: 'Description không được để trống',\n  })\n  description: string;\n  @IsNotEmpty({\n    message: 'Location không được để trống',\n  })\n  location: string;\n  @IsNotEmpty({\n    message: 'Start Date không được để trống',\n  })\n  @IsDate({\n    message: 'field startDate không đúng định dạng',\n  })\n  @Transform(({ value }) => new Date(value))\n  startDate: Date;\n\n  @IsNotEmpty({\n    message: 'End Date không được để trống',\n  })\n  @IsDate({\n    message: 'field endDate không đúng định dạng',\n  })\n  @Transform(({ value }) => new Date(value))\n  endDate: Date;\n}\n\n// export class RegisterJobDto {\n//   @IsNotEmpty({\n//     message: 'Name không được để trống',\n//   })\n//   name: string;\n//   @IsEmail(\n//     {},\n//     {\n//       message: 'Email không đúng định dạng',\n//     },\n//   )\n//   @IsNotEmpty({\n//     message: 'Email không được để trống',\n//   })\n//   email: string;\n\n//   @IsNotEmpty({\n//     message: 'Password không được để trống',\n//   })\n//   password: string;\n//   @IsNotEmpty({\n//     message: 'Age không được để trống',\n//   })\n//   age: number;\n//   @IsNotEmpty({\n//     message: 'Role không được để trống',\n//   })\n//   role: number;\n\n//   @IsNotEmpty({\n//     message: 'Company không được để trống',\n//   })\n//   @IsObject()\n//   @ValidateNested()\n//   @Type(() => Company)\n//   company: Company;\n\n//   address: string;\n//   gender: string;\n// }\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePermissionDto.html":{"url":"classes/CreatePermissionDto.html","title":"class - CreatePermissionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePermissionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/dto/create-permission.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                apiPath\n                            \n                            \n                                    \n                                method\n                            \n                            \n                                    \n                                module\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        apiPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'API Path không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/dto/create-permission.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Method không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/dto/create-permission.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Module không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/dto/create-permission.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Tên Quyền không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/dto/create-permission.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from 'class-validator';\n\nexport class CreatePermissionDto {\n  @IsNotEmpty({\n    message: 'Tên Quyền không được để trống',\n  })\n  name: string;\n\n  @IsNotEmpty({\n    message: 'API Path không được để trống',\n  })\n  apiPath: string;\n\n  @IsNotEmpty({\n    message: 'Method không được để trống',\n  })\n  method: string;\n  @IsNotEmpty({\n    message: 'Module không được để trống',\n  })\n  module: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateResumeDto.html":{"url":"classes/CreateResumeDto.html","title":"class - CreateResumeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateResumeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/dto/create-resume.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                companyId\n                            \n                            \n                                email\n                            \n                            \n                                    \n                                    \n                                history\n                            \n                            \n                                    \n                                jobId\n                            \n                            \n                                status\n                            \n                            \n                                    \n                                url\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        companyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Company Id không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        history\n                        \n                    \n                \n            \n                \n                    \n                        Type :         History[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        jobId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Job Id không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Url không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsArray, IsDate, IsEmail, IsNotEmpty, ValidateNested } from 'class-validator';\nimport { Transform, Type } from 'class-transformer';\nimport mongoose from 'mongoose';\n\nexport class UpdatedBy {\n  @IsNotEmpty()\n  _id: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty()\n  @IsEmail()\n  email: string;\n}\n\nexport class History {\n  @IsNotEmpty({ message: 'status không được để trống' })\n  status: string;\n\n  @IsNotEmpty({ message: 'updatedAt không được để trống' })\n  @IsDate({\n    message: 'field updatedAt không đúng định dạng',\n  })\n  @Transform(({ value }) => new Date(value))\n  updatedAt: Date;\n  @Type(() => UpdatedBy)\n  updatedBy: UpdatedBy;\n}\n\nexport class CreateResumeDto {\n  //   @IsNotEmpty({\n  //     message: 'Email không được để trống',\n  //   })\n  email: string;\n\n  //   @IsNotEmpty({\n  //     message: 'User Id không được để trống',\n  //   })\n  userId: string;\n\n  @IsNotEmpty({\n    message: 'Url không được để trống',\n  })\n  url: string;\n\n  //   @IsNotEmpty({\n  //     message: 'Status không được để trống',\n  //   })\n  status: string;\n\n  @IsNotEmpty({\n    message: 'Company Id không được để trống',\n  })\n  companyId: string;\n\n  @IsNotEmpty({\n    message: 'Job Id không được để trống',\n  })\n  jobId: string;\n\n  @ValidateNested()\n  @Type(() => History)\n  history: History[];\n}\n\n// export class RegisterResumeDto {\n//   @IsNotEmpty({\n//     message: 'Name không được để trống',\n//   })\n//   name: string;\n//   @IsEmail(\n//     {},\n//     {\n//       message: 'Email không đúng định dạng',\n//     },\n//   )\n//   @IsNotEmpty({\n//     message: 'Email không được để trống',\n//   })\n//   email: string;\n\n//   @IsNotEmpty({\n//     message: 'Password không được để trống',\n//   })\n//   password: string;\n//   @IsNotEmpty({\n//     message: 'Age không được để trống',\n//   })\n//   age: number;\n//   @IsNotEmpty({\n//     message: 'Role không được để trống',\n//   })\n//   role: number;\n\n//   @IsNotEmpty({\n//     message: 'Company không được để trống',\n//   })\n//   @IsObject()\n//   @ValidateNested()\n//   @Type(() => Company)\n//   company: Company;\n\n//   address: string;\n//   gender: string;\n// }\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRoleDto.html":{"url":"classes/CreateRoleDto.html","title":"class - CreateRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/dto/create-role.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                isActive\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                permissions\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Mô tả không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Active không được để trống'})@IsBoolean({message: 'Active không phải là giá trị Boolean'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Tên Role không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Permissions không được để trống'})@IsArray({message: 'Permissions phải là một mảng'})@IsMongoId({each: true, message: 'Mỗi permission phải là MongoDB ObjectId hợp lệ'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsArray, IsBoolean, IsMongoId, IsNotEmpty } from 'class-validator';\nimport mongoose from 'mongoose';\n\nexport class CreateRoleDto {\n  @IsNotEmpty({\n    message: 'Tên Role không được để trống',\n  })\n  name: string;\n\n  @IsNotEmpty({\n    message: 'Mô tả không được để trống',\n  })\n  description: string;\n\n  @IsNotEmpty({\n    message: 'Active không được để trống',\n  })\n  @IsBoolean({\n    message: 'Active không phải là giá trị Boolean',\n  })\n  isActive: string;\n\n  @IsNotEmpty({\n    message: 'Permissions không được để trống',\n  })\n  @IsArray({\n    message: 'Permissions phải là một mảng',\n  })\n  @IsMongoId({\n    each: true,\n    message: 'Mỗi permission phải là MongoDB ObjectId hợp lệ',\n  })\n  permissions: mongoose.Schema.Types.ObjectId[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSubscriberDto.html":{"url":"classes/CreateSubscriberDto.html","title":"class - CreateSubscriberDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSubscriberDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/dto/create-subscriber.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                skills\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Email không được để trống'})@IsEmail({message: 'Email không đúng định dạng'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/dto/create-subscriber.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Tên không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/dto/create-subscriber.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        skills\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Kỹ năng không được để trống'})@IsArray({message: 'Kỹ năng không phải mảng array'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/dto/create-subscriber.dto.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsArray, IsEmail, IsNotEmpty } from 'class-validator';\n\nexport class CreateSubscriberDto {\n  @IsNotEmpty({\n    message: 'Email không được để trống',\n  })\n  @IsEmail({\n    message: 'Email không đúng định dạng',\n  })\n  email: string;\n\n  @IsNotEmpty({\n    message: 'Tên không được để trống',\n  })\n  name: string;\n\n  @IsNotEmpty({\n    message: 'Kỹ năng không được để trống',\n  })\n  @IsArray({\n    message: 'Kỹ năng không phải mảng array',\n  })\n  skills: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                    \n                                age\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                gender\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Age không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail({}, {message: 'Email không đúng định dạng'})@IsNotEmpty({message: 'Email không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Name không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Password không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Role không được để trống'})@IsMongoId({message: 'Định dạng Mongo ID'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsMongoId, IsNotEmpty, IsObject, IsString, ValidateNested } from 'class-validator';\nimport { Type } from 'class-transformer';\nimport mongoose from 'mongoose';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class Company {\n  @IsNotEmpty({ message: 'ID không được để trống' })\n  _id: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty({ message: 'Name không được để trống' })\n  name: string;\n}\n\nexport class CreateUserDto {\n  @IsNotEmpty({\n    message: 'Name không được để trống',\n  })\n  name: string;\n  @IsEmail(\n    {},\n    {\n      message: 'Email không đúng định dạng',\n    },\n  )\n  @IsNotEmpty({\n    message: 'Email không được để trống',\n  })\n  email: string;\n\n  @IsNotEmpty({\n    message: 'Password không được để trống',\n  })\n  password: string;\n  @IsNotEmpty({\n    message: 'Role không được để trống',\n  })\n  @IsMongoId({\n    message: 'Định dạng Mongo ID',\n  })\n  role: mongoose.Schema.Types.ObjectId;\n  @IsNotEmpty({\n    message: 'Age không được để trống',\n  })\n  age: number;\n  address: string;\n  gender: string;\n}\n\nexport class RegisterUserDto {\n  @IsNotEmpty({\n    message: 'Name không được để trống',\n  })\n  name: string;\n  @IsEmail(\n    {},\n    {\n      message: 'Email không đúng định dạng',\n    },\n  )\n  @IsNotEmpty({\n    message: 'Email không được để trống',\n  })\n  email: string;\n\n  @IsNotEmpty({\n    message: 'Password không được để trống',\n  })\n  password: string;\n  @IsNotEmpty({\n    message: 'Age không được để trống',\n  })\n  age: number;\n  @IsNotEmpty({\n    message: 'Role không được để trống',\n  })\n  role: number;\n\n  @IsNotEmpty({\n    message: 'Company không được để trống',\n  })\n  @IsObject()\n  @ValidateNested()\n  @Type(() => Company)\n  company: Company;\n\n  address: string;\n  gender: string;\n}\n\nexport class UserLoginDto {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({ example: 'youremail@domain.com', description: 'Your Email' })\n  readonly username: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    example: '123',\n    description: 'Password',\n  })\n  readonly password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DatabasesController.html":{"url":"controllers/DatabasesController.html","title":"controller - DatabasesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DatabasesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/databases/databases.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                databases\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { DatabasesService } from './databases.service';\n\n@Controller('databases')\nexport class DatabasesController {\n  constructor(private readonly databasesService: DatabasesService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabasesModule.html":{"url":"modules/DatabasesModule.html","title":"module - DatabasesModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabasesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DatabasesModule\n\n\n\ncluster_DatabasesModule_providers\n\n\n\n\nDatabasesService\n\nDatabasesService\n\n\n\nDatabasesModule\n\nDatabasesModule\n\nDatabasesModule -->\n\nDatabasesService->DatabasesModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nDatabasesModule -->\n\nUsersService->DatabasesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/databases/databases.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DatabasesService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DatabasesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DatabasesService } from './databases.service';\nimport { DatabasesController } from './databases.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { User, UserSchema } from 'src/users/schemas/user.schema';\nimport { Role, RoleSchema } from 'src/roles/schemas/role.schema';\nimport { Permission, PermissionSchema } from 'src/permissions/schema/permission.schema';\nimport { UsersService } from 'src/users/users.service';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: User.name, schema: UserSchema },\n      { name: Role.name, schema: RoleSchema },\n      { name: Permission.name, schema: PermissionSchema },\n      // { name: Job.name, schema: JobSchema },\n      // { name: Resume.name, schema: ResumeSchema },\n    ]),\n  ],\n  controllers: [DatabasesController],\n  providers: [DatabasesService, UsersService],\n})\nexport class DatabasesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatabasesService.html":{"url":"injectables/DatabasesService.html","title":"injectable - DatabasesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DatabasesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/databases/databases.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: SoftDeleteModel, permissionModel: SoftDeleteModel, roleModel: SoftDeleteModel, configService: ConfigService, userService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/databases/databases.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        permissionModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/databases/databases.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(DatabasesService.name)\n                    \n                \n                    \n                        \n                                Defined in src/databases/databases.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger, OnModuleInit } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport {\n  Permission,\n  PermissionDocument,\n} from 'src/permissions/schema/permission.schema';\nimport { Role, RoleDocument } from 'src/roles/schemas/role.schema';\nimport { User, UserDocument } from 'src/users/schemas/user.schema';\nimport { UsersService } from 'src/users/users.service';\nimport { ADMIN_ROLE, INIT_PERMISSIONS, USER_ROLE } from './sample';\n@Injectable()\nexport class DatabasesService implements OnModuleInit {\n  private readonly logger = new Logger(DatabasesService.name);\n  constructor(\n    @InjectModel(User.name)\n    private userModel: SoftDeleteModel,\n    @InjectModel(Permission.name)\n    private permissionModel: SoftDeleteModel,\n    @InjectModel(Role.name)\n    private roleModel: SoftDeleteModel,\n    private configService: ConfigService,\n    private userService: UsersService,\n  ) {}\n  async onModuleInit() {\n    const isInit = this.configService.get('SHOULD_INIT');\n    if (Boolean(isInit)) {\n      const countUser = await this.userModel.count({});\n      const countPermission = await this.permissionModel.count({});\n      const countRole = await this.roleModel.count({});\n\n      //create permissions\n      if (countPermission === 0) {\n        await this.permissionModel.insertMany(INIT_PERMISSIONS);\n        //bulk create\n      }\n\n      // create role\n      if (countRole === 0) {\n        const permissions = await this.permissionModel.find({}).select('_id');\n        await this.roleModel.insertMany([\n          {\n            name: ADMIN_ROLE,\n            description: 'Admin thì full quyền :v',\n            isActive: true,\n            permissions: permissions,\n          },\n          {\n            name: USER_ROLE,\n            description: 'Người dùng/Ứng viên sử dụng hệ thống',\n            isActive: true,\n            permissions: [], //không set quyền, chỉ cần add ROLE\n          },\n        ]);\n      }\n\n      if (countUser === 0) {\n        const adminRole = await this.roleModel.findOne({ name: ADMIN_ROLE });\n        const userRole = await this.roleModel.findOne({ name: USER_ROLE });\n        await this.userModel.insertMany([\n          {\n            name: \"I'm admin\",\n            email: 'baoit128@gmail.com',\n            password: this.userService.getHashPassword(\n              this.configService.get('PASSWORD_INIT'),\n            ),\n            age: 69,\n            gender: 'MALE',\n            address: 'VietNam',\n            role: adminRole?._id,\n          },\n          {\n            name: \"I'm Bảo IT\",\n            email: 'hoidanit@gmail.com',\n            password: this.userService.getHashPassword(\n              this.configService.get('PASSWORD_INIT'),\n            ),\n            age: 96,\n            gender: 'MALE',\n            address: 'VietNam',\n            role: adminRole?._id,\n          },\n          {\n            name: \"I'm normal user\",\n            email: 'user@gmail.com',\n            password: this.userService.getHashPassword(\n              this.configService.get('PASSWORD_INIT'),\n            ),\n            age: 69,\n            gender: 'MALE',\n            address: 'VietNam',\n            role: userRole?._id,\n          },\n        ]);\n      }\n\n      if (countUser > 0 && countRole > 0 && countPermission > 0) {\n        this.logger.log('>>> ALREADY INIT SAMPLE DATA...');\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/File.html":{"url":"classes/File.html","title":"class - File","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  File\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/entities/file.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class File {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FilesController.html":{"url":"controllers/FilesController.html","title":"controller - FilesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FilesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/files.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                files\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                uploadFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/files/files.controller.ts:56\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/files/files.controller.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/files/files.controller.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateFileDto: UpdateFileDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/files/files.controller.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateFileDto\n                                            \n                                                            UpdateFileDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                        uploadFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadFile(file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Post('upload')@ResponseMessage('Upload Single File')@UseInterceptors(undefined)@ApiConsumes('multipart/form-data')@ApiBody({schema: undefined})@ApiHeader({name: 'folder_type', required: true, description: 'Custom header'})\n                \n            \n\n                    \n                        \n                            Defined in src/files/files.controller.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                            Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     literal type\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseInterceptors,\n  UploadedFile,\n  ParseFilePipeBuilder,\n  HttpStatus,\n  UseFilters,\n} from '@nestjs/common';\nimport { FilesService } from './files.service';\nimport { CreateFileDto } from './dto/create-file.dto';\nimport { UpdateFileDto } from './dto/update-file.dto';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { Public, ResponseMessage } from 'src/decorator/customize';\nimport { ApiBody, ApiConsumes, ApiHeader, ApiTags } from '@nestjs/swagger';\n\n@ApiTags('Files')\n@Controller('files')\nexport class FilesController {\n  constructor(private readonly filesService: FilesService) { }\n\n  @Public()\n  @Post('upload')\n  @ResponseMessage('Upload Single File')\n  @UseInterceptors(FileInterceptor('fileUpload'))\n  // @UseFilters(new HttpExceptionFilter())\n  @ApiConsumes('multipart/form-data')\n  @ApiBody({\n    schema: {\n      type: 'object',\n      properties: {\n        fileUpload: {\n          type: 'string',\n          format: 'binary',\n        },\n      },\n    },\n  })\n  @ApiHeader({\n    name: 'folder_type',\n    required: true,\n    description: 'Custom header',\n  })\n  uploadFile(@UploadedFile() file: Express.Multer.File): { fileName: string; } {\n    return {\n      fileName: file.filename,\n    };\n  }\n\n  @Get()\n  findAll() {\n    return this.filesService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.filesService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateFileDto: UpdateFileDto) {\n    return this.filesService.update(+id, updateFileDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.filesService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FilesModule.html":{"url":"modules/FilesModule.html","title":"module - FilesModule","body":"\n                   \n\n\n\n\n    Modules\n    FilesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_providers\n\n\n\n\nFilesService\n\nFilesService\n\n\n\nFilesModule\n\nFilesModule\n\nFilesModule -->\n\nFilesService->FilesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/files/files.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FilesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            FilesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FilesService } from './files.service';\nimport { FilesController } from './files.controller';\nimport { MulterModule } from '@nestjs/platform-express';\nimport { MulterConfigService } from './multer.config';\n@Module({\n  imports: [\n    MulterModule.registerAsync({\n      useClass: MulterConfigService,\n    }),\n  ],\n  controllers: [FilesController],\n  providers: [FilesService],\n})\nexport class FilesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilesService.html":{"url":"injectables/FilesService.html","title":"injectable - FilesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FilesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/files.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createFileDto: CreateFileDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/files.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createFileDto\n                                            \n                                                            CreateFileDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/files.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/files.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/files.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateFileDto: UpdateFileDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/files.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateFileDto\n                                            \n                                                            UpdateFileDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateFileDto } from './dto/create-file.dto';\nimport { UpdateFileDto } from './dto/update-file.dto';\n\n@Injectable()\nexport class FilesService {\n  create(createFileDto: CreateFileDto) {\n    return 'This action adds a new file';\n  }\n\n  findAll() {\n    return `This action returns all files`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} file`;\n  }\n\n  update(id: number, updateFileDto: UpdateFileDto) {\n    return `This action updates a #${id} file`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} file`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/History.html":{"url":"classes/History.html","title":"class - History","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  History\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/dto/create-resume.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                    \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'status không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'updatedAt không được để trống'})@IsDate({message: 'field updatedAt không đúng định dạng'})@Transform( => )\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UpdatedBy\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsArray, IsDate, IsEmail, IsNotEmpty, ValidateNested } from 'class-validator';\nimport { Transform, Type } from 'class-transformer';\nimport mongoose from 'mongoose';\n\nexport class UpdatedBy {\n  @IsNotEmpty()\n  _id: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty()\n  @IsEmail()\n  email: string;\n}\n\nexport class History {\n  @IsNotEmpty({ message: 'status không được để trống' })\n  status: string;\n\n  @IsNotEmpty({ message: 'updatedAt không được để trống' })\n  @IsDate({\n    message: 'field updatedAt không đúng định dạng',\n  })\n  @Transform(({ value }) => new Date(value))\n  updatedAt: Date;\n  @Type(() => UpdatedBy)\n  updatedBy: UpdatedBy;\n}\n\nexport class CreateResumeDto {\n  //   @IsNotEmpty({\n  //     message: 'Email không được để trống',\n  //   })\n  email: string;\n\n  //   @IsNotEmpty({\n  //     message: 'User Id không được để trống',\n  //   })\n  userId: string;\n\n  @IsNotEmpty({\n    message: 'Url không được để trống',\n  })\n  url: string;\n\n  //   @IsNotEmpty({\n  //     message: 'Status không được để trống',\n  //   })\n  status: string;\n\n  @IsNotEmpty({\n    message: 'Company Id không được để trống',\n  })\n  companyId: string;\n\n  @IsNotEmpty({\n    message: 'Job Id không được để trống',\n  })\n  jobId: string;\n\n  @ValidateNested()\n  @Type(() => History)\n  history: History[];\n}\n\n// export class RegisterResumeDto {\n//   @IsNotEmpty({\n//     message: 'Name không được để trống',\n//   })\n//   name: string;\n//   @IsEmail(\n//     {},\n//     {\n//       message: 'Email không đúng định dạng',\n//     },\n//   )\n//   @IsNotEmpty({\n//     message: 'Email không được để trống',\n//   })\n//   email: string;\n\n//   @IsNotEmpty({\n//     message: 'Password không được để trống',\n//   })\n//   password: string;\n//   @IsNotEmpty({\n//     message: 'Age không được để trống',\n//   })\n//   age: number;\n//   @IsNotEmpty({\n//     message: 'Role không được để trống',\n//   })\n//   role: number;\n\n//   @IsNotEmpty({\n//     message: 'Company không được để trống',\n//   })\n//   @IsObject()\n//   @ValidateNested()\n//   @Type(() => Company)\n//   company: Company;\n\n//   address: string;\n//   gender: string;\n// }\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUser.html":{"url":"interfaces/IUser.html","title":"interface - IUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/user.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            permissions\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        permissions:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IUser {\n  _id: string;\n  name: string;\n  email: string;\n  role: {\n    _id: string;\n    name: string;\n  };\n  permissions?: {\n    _id: string;\n    name: string;\n    apiPath: string;\n    module: string;\n  }[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Job.html":{"url":"classes/Job.html","title":"class - Job","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Job\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/schemas/job.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                company\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                endDate\n                            \n                            \n                                    \n                                isActive\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                level\n                            \n                            \n                                    \n                                location\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                salary\n                            \n                            \n                                    \n                                skills\n                            \n                            \n                                    \n                                startDate\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        salary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        skills\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:55\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\n\nexport type JobDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Job {\n  @Prop()\n  name: string;\n\n  @Prop()\n  skills: string[];\n\n  @Prop({ type: Object })\n  company: {\n    _id: mongoose.Schema.Types.ObjectId;\n    name: string;\n    logo: string;\n  };\n\n  @Prop()\n  salary: number;\n\n  @Prop()\n  level: string;\n\n  @Prop()\n  description: string;\n\n  @Prop()\n  location: string;\n\n  @Prop()\n  startDate: Date;\n\n  @Prop()\n  endDate: Date;\n\n  @Prop()\n  isActive: boolean;\n\n  @Prop()\n  createdAt: Date;\n\n  @Prop({ type: Object })\n  createdBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop()\n  updatedAt: Date;\n\n  @Prop({ type: Object })\n  updatedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop()\n  isDeleted: boolean;\n\n  @Prop()\n  deletedAt: Date;\n\n  @Prop({ type: Object })\n  deletedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n}\n\nexport const JobSchema = SchemaFactory.createForClass(Job);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/JobsController.html":{"url":"controllers/JobsController.html","title":"controller - JobsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  JobsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/jobs.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                jobs\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createJobDto: CreateJobDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Create Job')@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/jobs/jobs.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createJobDto\n                                            \n                                                            CreateJobDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: string, limit: string, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@ResponseMessage('Find Job')@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/jobs/jobs.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@ResponseMessage('Get Job By Id')@Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/jobs/jobs.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Delete Job By Id')@Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/jobs/jobs.controller.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateJobDto: UpdateJobDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Update Job By Id')@Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/jobs/jobs.controller.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateJobDto\n                                            \n                                                            UpdateJobDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Query,\n} from '@nestjs/common';\nimport { JobsService } from './jobs.service';\nimport { CreateJobDto } from './dto/create-job.dto';\nimport { UpdateJobDto } from './dto/update-job.dto';\nimport { IUser } from 'src/users/user.interface';\nimport { Public, ResponseMessage, User } from 'src/decorator/customize';\nimport { ApiTags } from '@nestjs/swagger';\n\n\n@ApiTags('Jobs')\n@Controller('jobs')\nexport class JobsController {\n  constructor(private readonly jobsService: JobsService) {}\n\n  @ResponseMessage('Create Job')\n  @Post()\n  create(@Body() createJobDto: CreateJobDto, @User() user: IUser) {\n    return this.jobsService.create(createJobDto, user);\n  }\n\n  @Public()\n  @ResponseMessage('Find Job')\n  @Get()\n  findAll(\n    @Query('current') currentPage: string,\n    @Query('pageSize') limit: string,\n    @Query() qs: string,\n  ) {\n    return this.jobsService.findAll(+currentPage, +limit, qs);\n  }\n  @Public()\n  @ResponseMessage('Get Job By Id')\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.jobsService.findOne(id);\n  }\n\n  @ResponseMessage('Update Job By Id')\n  @Patch(':id')\n  update(\n    @Param('id') id: string,\n    @Body() updateJobDto: UpdateJobDto,\n    @User() user: IUser,\n  ) {\n    return this.jobsService.update(id, updateJobDto, user);\n  }\n\n  @ResponseMessage('Delete Job By Id')\n  @Delete(':id')\n  remove(@Param('id') id: string, @User() user: IUser) {\n    return this.jobsService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JobsModule.html":{"url":"modules/JobsModule.html","title":"module - JobsModule","body":"\n                   \n\n\n\n\n    Modules\n    JobsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_JobsModule\n\n\n\ncluster_JobsModule_providers\n\n\n\n\nJobsService\n\nJobsService\n\n\n\nJobsModule\n\nJobsModule\n\nJobsModule -->\n\nJobsService->JobsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/jobs/jobs.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JobsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            JobsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { JobsService } from './jobs.service';\nimport { JobsController } from './jobs.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Job, JobSchema } from './schemas/job.schema';\n\n@Module({\n  imports: [MongooseModule.forFeature([{ name: Job.name, schema: JobSchema }])],\n  controllers: [JobsController],\n  providers: [JobsService],\n})\nexport class JobsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JobsService.html":{"url":"injectables/JobsService.html","title":"injectable - JobsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JobsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/jobs.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jobModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/jobs/jobs.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jobModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createJobDto: CreateJobDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/jobs.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createJobDto\n                                            \n                                                            CreateJobDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: number, limit: number, qs: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/jobs.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/jobs.service.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/jobs.service.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(_id: string, updateJobDto: UpdateJobDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/jobs.service.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateJobDto\n                                            \n                                                            UpdateJobDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateJobDto } from './dto/create-job.dto';\nimport { UpdateJobDto } from './dto/update-job.dto';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { Job, JobDocument } from './schemas/job.schema';\nimport { IUser } from 'src/users/user.interface';\nimport aqp from 'api-query-params';\n\n@Injectable()\nexport class JobsService {\n  constructor(\n    @InjectModel(Job.name)\n    private jobModel: SoftDeleteModel,\n  ) {}\n  create(createJobDto: CreateJobDto, user: IUser) {\n    return this.jobModel.create({\n      ...createJobDto,\n      createdBy: {\n        _id: user._id,\n        email: user.email,\n      },\n    });\n  }\n\n  async findAll(currentPage: number, limit: number, qs: any) {\n    const { filter, projection, population } = aqp(qs);\n    delete filter.current;\n    delete filter.pageSize;\n    const { sort } = aqp(qs);\n    const offset = (+currentPage - 1) * +limit;\n    const defaultLimit = +limit ? +limit : 10;\n    const totalItems = (await this.jobModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n    // if (isEmpty(sort)) {\n    //   // @ts-ignore: Unreachable code error\n    //   sort = \"-updatedAt\"\n    // }\n    const result = await this.jobModel\n      .find(filter)\n      .skip(offset)\n      .limit(defaultLimit)\n      // @ts-ignore: Unreachable code error\n      .sort(sort)\n      .populate(population)\n      .exec();\n    return {\n      meta: {\n        current: currentPage,\n        pageSize: limit,\n        pages: totalPages,\n        total: totalItems,\n      },\n      result,\n    };\n  }\n  findOne(_id: string) {\n    return this.jobModel.findOne({ _id });\n  }\n\n  update(_id: string, updateJobDto: UpdateJobDto, user: IUser) {\n    return this.jobModel.updateOne(\n      { _id },\n      {\n        ...updateJobDto,\n        updatedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n  }\n\n  async remove(id: string, user: IUser) {\n    await this.jobModel.updateOne(\n      { _id: id },\n      {\n        deletedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n    return this, this.jobModel.softDelete({ _id: id });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('jwt')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.auth.guard.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt.auth.guard.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleRequest\n                        \n                    \n                \n            \n            \n                \nhandleRequest(err, user, info, context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt.auth.guard.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                err\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                info\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ExecutionContext,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { AuthGuard } from '@nestjs/passport';\nimport { Request } from 'express';\nimport { IS_PUBLIC_KEY, IS_PUBLIC_PERMISSION } from 'src/decorator/customize';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {\n  constructor(private reflector: Reflector) {\n    super();\n  }\n  canActivate(context: ExecutionContext) {\n    const isPublic = this.reflector.getAllAndOverride(IS_PUBLIC_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n    if (isPublic) {\n      return true;\n    }\n    return super.canActivate(context);\n  }\n\n  handleRequest(err, user, info, context: ExecutionContext) {\n    const request: Request = context.switchToHttp().getRequest();\n    // You can throw an exception based on either \"info\" or \"err\" arguments\n    if (err || !user) {\n      throw err || new UnauthorizedException('Token is not valid');\n    }\n    const isPublicPermission = this.reflector.getAllAndOverride(\n      IS_PUBLIC_PERMISSION,\n      [context.getHandler(), context.getClass()],\n    );\n    const targetMethod = request.method;\n    const targetEndpoint = request.route.path as string;\n    const permissions = user?.permissions ?? [];\n\n    let isExist = permissions.find(\n      (permission) =>\n        targetMethod === permission.method &&\n        targetEndpoint === permission.apiPath,\n    );\n    if (targetEndpoint.startsWith('/api/v1/auth')) isExist = true;\n    if (!isExist && !isPublicPermission) {\n      throw new UnauthorizedException('You are not have permission!!');\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ConfigService: ConfigService, roleService: RolesService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ConfigService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleService\n                                                  \n                                                        \n                                                                        RolesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt.strategy.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ConfigService } from '@nestjs/config';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { jwtConstants } from './constants';\nimport { IUser } from 'src/users/user.interface';\nimport { RolesService } from 'src/roles/roles.service';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    private ConfigService: ConfigService,\n    private roleService: RolesService,\n  ) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: ConfigService.get('JWT_ACCESS_TOKEN_SECRET'),\n    });\n  }\n\n  async validate(payload: IUser) {\n    const { _id, name, email, role } = payload;\n    const userRole = role as any as { _id: string; name: string };\n    const roleGetFromDB = (\n      await this.roleService.findOne(userRole._id)\n    ).toObject();\n    return {\n      _id,\n      name,\n      email,\n      role,\n      permissions: roleGetFromDB.permissions ?? [],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/local.auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('local')\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/passport/local.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/passport/local.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(username: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/passport/local.strategy.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Strategy } from 'passport-local';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { AuthService } from '../auth.service';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private authService: AuthService) {\n    super();\n  }\n\n  async validate(username: string, password: string): Promise {\n    const user = await this.authService.validateUser(username, password);\n    if (!user) {\n      throw new UnauthorizedException('Invalid Username/Password !');\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MailController.html":{"url":"controllers/MailController.html","title":"controller - MailController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MailController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mail/mail.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                mail\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                sendEmailJobToSubscriber\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        sendEmailJobToSubscriber\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendEmailJobToSubscriber()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Public()@ResponseMessage('Send Email to Subscriber')\n                \n            \n\n                    \n                        \n                            Defined in src/mail/mail.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { MailService } from './mail.service';\nimport { Public, ResponseMessage } from 'src/decorator/customize';\nimport { MailerService } from '@nestjs-modules/mailer';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { Subscriber, SubscriberDocument } from 'src/subscribers/schemas/subscriber.schema';\nimport { Job, JobDocument } from 'src/jobs/schemas/job.schema';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Cron, CronExpression } from '@nestjs/schedule';\nimport { ApiTags } from '@nestjs/swagger';\n\n\n@ApiTags('Mail')\n@Controller('mail')\nexport class MailController {\n  constructor(\n    private readonly mailService: MailService,\n    private mailerService: MailerService,\n    @InjectModel(Subscriber.name)\n    private subscriberModel: SoftDeleteModel,\n    @InjectModel(Job.name)\n    private jobModel: SoftDeleteModel,\n  ) {}\n\n  // @Cron(CronExpression.EVERY_30_SECONDS)\n  @Get()\n  @Public()\n  @ResponseMessage('Send Email to Subscriber')\n  async sendEmailJobToSubscriber() {\n    const subscribers = await this.subscriberModel.find({});\n    for (const subs of subscribers) {\n      const subsSkills = subs.skills;\n      const jobWithMatchingSkills = await this.jobModel.find({\n        skills: { $in: subsSkills },\n      });\n      if (jobWithMatchingSkills.length) {\n        const jobs = jobWithMatchingSkills.map((item) => {\n          return {\n            name: item.name,\n            company: item.company.name,\n            salary:\n              `${item.salary}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',') + ' đ',\n            skills: item.skills,\n          };\n        });\n        await this.mailerService.sendMail({\n          to: 'harrykill.007@gmail.com',\n          from: '\"Support Team\" ',\n          subject: 'Welcome to Nice app',\n          template: 'new-job',\n          context: {\n            receiver: subs.name,\n            jobs,\n          },\n        });\n      }\n      //todo\n      //build template\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailModule.html":{"url":"modules/MailModule.html","title":"module - MailModule","body":"\n                   \n\n\n\n\n    Modules\n    MailModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MailModule\n\n\n\ncluster_MailModule_providers\n\n\n\n\nMailService\n\nMailService\n\n\n\nMailModule\n\nMailModule\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/mail/mail.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MailService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            MailController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MailService } from './mail.service';\nimport { MailController } from './mail.controller';\nimport { MailerModule } from '@nestjs-modules/mailer';\nimport { ConfigService } from '@nestjs/config';\nimport { join } from 'path';\nimport { HandlebarsAdapter } from '@nestjs-modules/mailer/dist/adapters/handlebars.adapter';\nimport { Mongoose } from 'mongoose';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Subscriber, SubscriberSchema } from 'src/subscribers/schemas/subscriber.schema';\nimport { Job, JobSchema } from 'src/jobs/schemas/job.schema';\n@Module({\n  imports: [\n    MailerModule.forRootAsync({\n      useFactory: async (configService: ConfigService) => ({\n        transport: {\n          host: configService.get(\"HOST_EMAIL\"),\n          secure: false,\n          auth: {\n            user: configService.get(\"SENDER_EMAIL\"),\n            pass: configService.get(\"APP_PASSWORD\"),\n          },\n        }, \n        template: {\n          dir: join(__dirname, 'templates'),\n          adapter: new HandlebarsAdapter(),\n          options: {\n            strict: true,\n          },\n        },\n        preview:\n          configService.get('EMAIL_PREVIEW') === 'true' ? true : false,\n      }),\n      inject: [ConfigService],\n    }),\n    MongooseModule.forFeature([\n      { name: Subscriber.name, schema: SubscriberSchema },\n      { name: Job.name, schema: JobSchema },\n    ]),\n  ],\n  controllers: [MailController],\n  providers: [MailService],\n})\nexport class MailModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailService.html":{"url":"injectables/MailService.html","title":"injectable - MailService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mail/mail.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class MailService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MulterConfigService.html":{"url":"injectables/MulterConfigService.html","title":"injectable - MulterConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MulterConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/multer.config.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getRootPath\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createMulterOptions\n                            \n                            \n                                ensureExists\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createMulterOptions\n                        \n                    \n                \n            \n            \n                \ncreateMulterOptions()\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/multer.config.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     MulterModuleOptions\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ensureExists\n                        \n                    \n                \n            \n            \n                \nensureExists(targetDirectory: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/multer.config.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                targetDirectory\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        getRootPath\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/files/multer.config.ts:30\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport {\n  MulterModuleOptions,\n  MulterOptionsFactory,\n} from '@nestjs/platform-express';\nimport fs from 'fs';\nimport { diskStorage } from 'multer';\nimport path, { join } from 'path';\n@Injectable()\nexport class MulterConfigService implements MulterOptionsFactory {\n  createMulterOptions(): MulterModuleOptions {\n    return {\n      storage: diskStorage({\n        destination: (req, file, cb) => {\n          const folder = req?.headers?.folder_type ?? 'default';\n          this.ensureExists(`public/images/${folder}`);\n          cb(null, join(this.getRootPath(), `public/images/${folder}`));\n        },\n        filename: (req, file, cb) => {\n          //get image extension\n          const extName = path.extname(file.originalname);\n          //get image's name (without extension)\n          const baseName = path.basename(file.originalname, extName);\n          const finalName = `${baseName}-${Date.now()}${extName}`;\n          cb(null, finalName);\n        },\n      }),\n    };\n  }\n  getRootPath = () => {\n    return process.cwd();\n  };\n  ensureExists(targetDirectory: string) {\n    fs.mkdir(targetDirectory, { recursive: true }, (error) => {\n      if (!error) {\n        console.log('Directory successfully created, or it already exists.');\n        return;\n      }\n      switch (error.code) {\n        case 'EEXIST':\n          // Error:\n          // Requested location already exists, but it's not a directory.\n          break;\n        case 'ENOTDIR':\n          // Error:\n          // The parent hierarchy contains a file with the same name as the dir\n          // you're trying to create.\n          break;\n        default:\n          // Some other error like permission denied.\n          console.error(error);\n          break;\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Permission.html":{"url":"classes/Permission.html","title":"class - Permission","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Permission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/schema/permission.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                apiPath\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                method\n                            \n                            \n                                    \n                                module\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        apiPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schema/permission.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schema/permission.schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schema/permission.schema.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schema/permission.schema.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schema/permission.schema.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schema/permission.schema.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schema/permission.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schema/permission.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schema/permission.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schema/permission.schema.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schema/permission.schema.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\n\nexport type PermissionDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Permission {\n  @Prop()\n  name: string;\n\n  @Prop()\n  apiPath: string;\n\n  @Prop()\n  method: string;\n\n  @Prop()\n  module: string;\n  @Prop({ type: Object })\n  createdBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n  @Prop()\n  createdAt: Date;\n\n  @Prop()\n  updatedAt: Date;\n  @Prop({ type: Object })\n  updatedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n  @Prop()\n  isDeleted: boolean;\n\n  @Prop()\n  deletedAt: Date;\n\n  @Prop({ type: Object })\n  deletedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n}\n\nexport const PermissionSchema = SchemaFactory.createForClass(Permission);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PermissionsController.html":{"url":"controllers/PermissionsController.html","title":"controller - PermissionsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PermissionsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/permissions.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                permissions\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createPermissionDto: CreatePermissionDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/permissions/permissions.controller.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPermissionDto\n                                            \n                                                            CreatePermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: string, limit: string, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ResponseMessage('Fetch Permissions with paginate')\n                \n            \n\n                    \n                        \n                            Defined in src/permissions/permissions.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/permissions/permissions.controller.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/permissions/permissions.controller.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, user: IUser, updatePermissionDto: UpdatePermissionDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/permissions/permissions.controller.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatePermissionDto\n                                            \n                                                            UpdatePermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Query } from '@nestjs/common';\nimport { PermissionsService } from './permissions.service';\nimport { CreatePermissionDto } from './dto/create-permission.dto';\nimport { UpdatePermissionDto } from './dto/update-permission.dto';\nimport { Permission, PermissionDocument } from './schema/permission.schema';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { IUser } from 'src/users/user.interface';\nimport { ResponseMessage, User } from 'src/decorator/customize';\nimport { ApiTags } from '@nestjs/swagger';\n\n\n@ApiTags('Permissions')\n@Controller('permissions')\nexport class PermissionsController {\n  constructor(private readonly permissionService: PermissionsService) {}\n\n  @Post()\n  create(\n    @Body() createPermissionDto: CreatePermissionDto,\n    @User() user: IUser,\n  ) {\n    return this.permissionService.create(createPermissionDto, user);\n  }\n\n  @Get()\n  @ResponseMessage('Fetch Permissions with paginate')\n  findAll(\n    @Query('current') currentPage: string,\n    @Query('pageSize') limit: string,\n    @Query() qs: string,\n  ) {\n    return this.permissionService.findAll(+currentPage, +limit, qs);\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string, @User() user: IUser) {\n    return this.permissionService.findOne(id);\n  }\n\n  @Patch(':id')\n  update(\n    @Param('id') id: string,\n    @User() user: IUser,\n    @Body() updatePermissionDto: UpdatePermissionDto,\n  ) {\n    return this.permissionService.update(id, updatePermissionDto, user);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string, @User() user: IUser) {\n    return this.permissionService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PermissionsModule.html":{"url":"modules/PermissionsModule.html","title":"module - PermissionsModule","body":"\n                   \n\n\n\n\n    Modules\n    PermissionsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PermissionsModule\n\n\n\ncluster_PermissionsModule_providers\n\n\n\n\nPermissionsService\n\nPermissionsService\n\n\n\nPermissionsModule\n\nPermissionsModule\n\nPermissionsModule -->\n\nPermissionsService->PermissionsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/permissions/permissions.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PermissionsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PermissionsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PermissionsService } from './permissions.service';\nimport { PermissionsController } from './permissions.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Permission, PermissionSchema } from './schema/permission.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: Permission.name, schema: PermissionSchema },\n    ]),\n  ],\n  controllers: [PermissionsController],\n  providers: [PermissionsService],\n})\nexport class PermissionsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PermissionsService.html":{"url":"injectables/PermissionsService.html","title":"injectable - PermissionsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PermissionsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/permissions.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(permissionModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/permissions/permissions.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        permissionModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createPermissionDto: CreatePermissionDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/permissions/permissions.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPermissionDto\n                                            \n                                                            CreatePermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: number, limit: number, qs: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/permissions/permissions.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/permissions/permissions.service.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/permissions/permissions.service.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(_id: string, updatePermissionDto: UpdatePermissionDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/permissions/permissions.service.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatePermissionDto\n                                            \n                                                            UpdatePermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CreatePermissionDto } from './dto/create-permission.dto';\nimport { UpdatePermissionDto } from './dto/update-permission.dto';\nimport { Permission, PermissionDocument } from './schema/permission.schema';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { ConflictException, Injectable } from '@nestjs/common';\nimport aqp from 'api-query-params';\nimport { IUser } from 'src/users/user.interface';\n\n@Injectable()\nexport class PermissionsService {\n  constructor(\n    @InjectModel(Permission.name)\n    private permissionModel: SoftDeleteModel,\n  ) {}\n  async create(createPermissionDto: CreatePermissionDto, user: IUser) {\n    // Check if permission with same path and method already exists\n    const existingPermission = await this.permissionModel.findOne({\n      apiPath: createPermissionDto.apiPath,\n      method: createPermissionDto.method,\n    });\n\n    // If permission already exists, return null or throw an error\n    if (existingPermission) {\n      throw new ConflictException(\n        `Permission with apiPath \"${createPermissionDto.apiPath}\" and method \"${createPermissionDto.method}\" already exists`,\n      );\n    }\n\n    // If permission doesn't exist, create new one\n    return this.permissionModel.create({\n      ...createPermissionDto,\n      createdBy: {\n        _id: user._id,\n        email: user.email,\n      },\n    });\n  }\n\n  async findAll(currentPage: number, limit: number, qs: any) {\n    const { filter, projection, population } = aqp(qs);\n    delete filter.current;\n    delete filter.pageSize;\n    const { sort } = aqp(qs);\n    const offset = (+currentPage - 1) * +limit;\n    const defaultLimit = +limit ? +limit : 10;\n    const totalItems = (await this.permissionModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n    // if (isEmpty(sort)) {\n    //   // @ts-ignore: Unreachable code error\n    //   sort = \"-updatedAt\"\n    // }\n    const result = await this.permissionModel\n      .find(filter)\n      .skip(offset)\n      .limit(defaultLimit)\n      // @ts-ignore: Unreachable code error\n      .sort(sort)\n      .populate(population)\n      .exec();\n    return {\n      meta: {\n        current: currentPage,\n        pageSize: limit,\n        pages: totalPages,\n        total: totalItems,\n      },\n      result,\n    };\n  }\n\n  findOne(_id: string) {\n    return this.permissionModel.findOne({ _id });\n  }\n\n  update(_id: string, updatePermissionDto: UpdatePermissionDto, user: IUser) {\n    return this.permissionModel.updateOne(\n      { _id },\n      {\n        ...updatePermissionDto,\n        updatedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n  }\n\n  async remove(id: string, user: IUser) {\n    await this.permissionModel.updateOne(\n      { _id: id },\n      {\n        deletedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n    return this, this.permissionModel.softDelete({ _id: id });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterUserDto.html":{"url":"classes/RegisterUserDto.html","title":"class - RegisterUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                    \n                                age\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                company\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                gender\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Age không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Company\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Company không được để trống'})@IsObject()@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail({}, {message: 'Email không đúng định dạng'})@IsNotEmpty({message: 'Email không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Name không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Password không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Role không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:76\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsMongoId, IsNotEmpty, IsObject, IsString, ValidateNested } from 'class-validator';\nimport { Type } from 'class-transformer';\nimport mongoose from 'mongoose';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class Company {\n  @IsNotEmpty({ message: 'ID không được để trống' })\n  _id: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty({ message: 'Name không được để trống' })\n  name: string;\n}\n\nexport class CreateUserDto {\n  @IsNotEmpty({\n    message: 'Name không được để trống',\n  })\n  name: string;\n  @IsEmail(\n    {},\n    {\n      message: 'Email không đúng định dạng',\n    },\n  )\n  @IsNotEmpty({\n    message: 'Email không được để trống',\n  })\n  email: string;\n\n  @IsNotEmpty({\n    message: 'Password không được để trống',\n  })\n  password: string;\n  @IsNotEmpty({\n    message: 'Role không được để trống',\n  })\n  @IsMongoId({\n    message: 'Định dạng Mongo ID',\n  })\n  role: mongoose.Schema.Types.ObjectId;\n  @IsNotEmpty({\n    message: 'Age không được để trống',\n  })\n  age: number;\n  address: string;\n  gender: string;\n}\n\nexport class RegisterUserDto {\n  @IsNotEmpty({\n    message: 'Name không được để trống',\n  })\n  name: string;\n  @IsEmail(\n    {},\n    {\n      message: 'Email không đúng định dạng',\n    },\n  )\n  @IsNotEmpty({\n    message: 'Email không được để trống',\n  })\n  email: string;\n\n  @IsNotEmpty({\n    message: 'Password không được để trống',\n  })\n  password: string;\n  @IsNotEmpty({\n    message: 'Age không được để trống',\n  })\n  age: number;\n  @IsNotEmpty({\n    message: 'Role không được để trống',\n  })\n  role: number;\n\n  @IsNotEmpty({\n    message: 'Company không được để trống',\n  })\n  @IsObject()\n  @ValidateNested()\n  @Type(() => Company)\n  company: Company;\n\n  address: string;\n  gender: string;\n}\n\nexport class UserLoginDto {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({ example: 'youremail@domain.com', description: 'Your Email' })\n  readonly username: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    example: '123',\n    description: 'Password',\n  })\n  readonly password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Response.html":{"url":"interfaces/Response.html","title":"interface - Response","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Response\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/transform.interceptor.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            statusCode\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        statusCode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Injectable,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { RESPONSE_MESSAGE } from 'src/decorator/customize';\n\nexport interface Response {\n  statusCode: number;\n  message?: string;\n  data: any;\n}\n\n@Injectable()\nexport class TransformInterceptor\n  implements NestInterceptor>\n{\n  constructor(private reflector: Reflector) {}\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Observable> {\n    return next.handle().pipe(\n      map((data) => ({\n        statusCode: context.switchToHttp().getResponse().statusCode,\n        message:\n          this.reflector.get(RESPONSE_MESSAGE, context.getHandler()) ||\n          '',\n        // message: data.message,\n        data: data,\n      })),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Resume.html":{"url":"classes/Resume.html","title":"class - Resume","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Resume\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/schemas/resume.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                companyId\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                history\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                jobId\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                            \n                                    \n                                url\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        companyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        history\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        jobId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\nimport { Company } from 'src/companies/schema/company.schema';\nimport { Job } from 'src/jobs/schemas/job.schema';\n\nexport type ResumeDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Resume {\n  @Prop()\n  email: string;\n\n  @Prop()\n  userId: mongoose.Schema.Types.ObjectId;\n\n  @Prop()\n  url: string;\n\n  @Prop()\n  status: string;\n\n  @Prop({ type: mongoose.Schema.Types.ObjectId, ref: Company.name })\n  companyId: mongoose.Schema.Types.ObjectId;\n\n  @Prop({ type: mongoose.Schema.Types.ObjectId, ref: Job.name })\n  jobId: mongoose.Schema.Types.ObjectId;\n  @Prop({\n    type: [\n      {\n        status: String,\n        updatedAt: Date,\n        updatedBy: { _id: mongoose.Schema.Types.ObjectId, email: String },\n      },\n    ],\n  })\n  history: Array;\n\n  @Prop()\n  createdAt: Date;\n\n  @Prop({ type: Object })\n  createdBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop()\n  updatedAt: Date;\n\n  @Prop({ type: Object })\n  updatedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop()\n  isDeleted: boolean;\n\n  @Prop()\n  deletedAt: Date;\n\n  @Prop({ type: Object })\n  deletedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n}\n\nexport const ResumeSchema = SchemaFactory.createForClass(Resume);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ResumesController.html":{"url":"controllers/ResumesController.html","title":"controller - ResumesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ResumesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/resumes.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                resumes\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                findResumeByUser\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createResumeDto: CreateResumeDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Create Resume')@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createResumeDto\n                                            \n                                                            CreateResumeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: string, limit: string, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@ResponseMessage('Find Resume')@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Create Resume By Id')@Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findResumeByUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    findResumeByUser(user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Get Resume By User')@Post('/by-user')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Delete Resume By Id')@Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, status: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Update Resume By Id')@Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                status\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Query,\n} from '@nestjs/common';\nimport { ResumesService } from './resumes.service';\nimport { CreateResumeDto } from './dto/create-resume.dto';\nimport { UpdateResumeDto } from './dto/update-resume.dto';\nimport { IUser } from 'src/users/user.interface';\nimport { Public, ResponseMessage, User } from 'src/decorator/customize';\nimport { ApiTags } from '@nestjs/swagger';\n\n\n@ApiTags('Resumes')\n@Controller('resumes')\nexport class ResumesController {\n  constructor(private readonly resumesService: ResumesService) { }\n\n  @ResponseMessage('Create Resume')\n  @Post()\n  create(@Body() createResumeDto: CreateResumeDto, @User() user: IUser) {\n    return this.resumesService.create(createResumeDto, user);\n  }\n\n  @Public()\n  @ResponseMessage('Find Resume')\n  @Get()\n  findAll(\n    @Query('current') currentPage: string,\n    @Query('pageSize') limit: string,\n    @Query() qs: string,\n  ) {\n    return this.resumesService.findAll(+currentPage, +limit, qs);\n  }\n\n  @ResponseMessage('Create Resume By Id')\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.resumesService.findOne(id);\n  }\n\n  @ResponseMessage('Update Resume By Id')\n  @Patch(':id')\n  update(\n    @Param('id') id: string,\n    @Body('status') status: string,\n    @User() user: IUser,\n  ) {\n    return this.resumesService.updateStatus(id, status, user);\n  }\n\n  @ResponseMessage('Delete Resume By Id')\n  @Delete(':id')\n  remove(@Param('id') id: string, @User() user: IUser) {\n    return this.resumesService.remove(id, user);\n  }\n\n  @ResponseMessage('Get Resume By User')\n  @Post('/by-user')\n  findResumeByUser(@User() user: IUser) {\n    return this.resumesService.findResumeByUser(user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ResumesModule.html":{"url":"modules/ResumesModule.html","title":"module - ResumesModule","body":"\n                   \n\n\n\n\n    Modules\n    ResumesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ResumesModule\n\n\n\ncluster_ResumesModule_providers\n\n\n\n\nResumesService\n\nResumesService\n\n\n\nResumesModule\n\nResumesModule\n\nResumesModule -->\n\nResumesService->ResumesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/resumes/resumes.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ResumesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ResumesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ResumesService } from './resumes.service';\nimport { ResumesController } from './resumes.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Resume, ResumeSchema } from './schemas/resume.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: Resume.name, schema: ResumeSchema }]),\n  ],\n  controllers: [ResumesController],\n  providers: [ResumesService],\n})\nexport class ResumesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResumesService.html":{"url":"injectables/ResumesService.html","title":"injectable - ResumesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ResumesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/resumes.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                findResumeByUser\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                update\n                            \n                            \n                                updateStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(resumeModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/resumes/resumes.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resumeModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createResumeDto: CreateResumeDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createResumeDto\n                                            \n                                                            CreateResumeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: number, limit: number, qs: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findResumeByUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    findResumeByUser(user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:128\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:116\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(_id: string, updateResumeDto: UpdateResumeDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:81\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateResumeDto\n                                            \n                                                            UpdateResumeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateStatus\n                        \n                    \n                \n            \n            \n                \nupdateStatus(_id: string, status: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:94\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                status\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateResumeDto, UpdatedBy } from './dto/create-resume.dto';\nimport { UpdateResumeDto } from './dto/update-resume.dto';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { Resume, ResumeDocument } from './schemas/resume.schema';\nimport { IUser } from 'src/users/user.interface';\nimport aqp from 'api-query-params';\nimport { STATUS_RESUMES } from 'src/shared/constants/status.enum';\n\n@Injectable()\nexport class ResumesService {\n  constructor(\n    @InjectModel(Resume.name)\n    private resumeModel: SoftDeleteModel,\n  ) {}\n  async create(createResumeDto: CreateResumeDto, user: IUser) {\n    const resume = await this.resumeModel.create({\n      ...createResumeDto,\n      email: user.email,\n      userId: user._id,\n      status: STATUS_RESUMES.PENDING,\n      history: [\n        {\n          status: STATUS_RESUMES.PENDING,\n          updatedAt: new Date(),\n          updatedBy: {\n            _id: user._id,\n            email: user.email,\n          },\n        },\n      ],\n      createdBy: {\n        _id: user._id,\n        email: user.email,\n      },\n    });\n    return {\n      _id: resume._id,\n      createdAt: resume.createdAt,\n    };\n  }\n\n  async findAll(currentPage: number, limit: number, qs: any) {\n    const { filter, projection, population } = aqp(qs);\n    delete filter.current;\n    delete filter.pageSize;\n    const { sort } = aqp(qs);\n    const offset = (+currentPage - 1) * +limit;\n    const defaultLimit = +limit ? +limit : 10;\n    const totalItems = (await this.resumeModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n    // if (isEmpty(sort)) {\n    //   // @ts-ignore: Unreachable code error\n    //   sort = \"-updatedAt\"\n    // }\n    const result = await this.resumeModel\n      .find(filter)\n      .skip(offset)\n      .limit(defaultLimit)\n      // @ts-ignore: Unreachable code error\n      .sort(sort)\n      .populate(population)\n      .select(projection)\n      .exec();\n    return {\n      meta: {\n        current: currentPage,\n        pageSize: limit,\n        pages: totalPages,\n        total: totalItems,\n      },\n      result,\n    };\n  }\n\n  findOne(_id: string) {\n    return this.resumeModel.findOne({ _id });\n  }\n\n  update(_id: string, updateResumeDto: UpdateResumeDto, user: IUser) {\n    return this.resumeModel.updateOne(\n      { _id },\n      {\n        ...updateResumeDto,\n        updatedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n  }\n\n  updateStatus(_id: string, status: string, user: IUser) {\n    return this.resumeModel.updateOne(\n      { _id },\n      {\n        status,\n        updatedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n        $push: {\n          history: {\n            status,\n            updatedAt: new Date(),\n            UpdatedBy: {\n              _id: user._id,\n              email: user.email,\n            },\n          },\n        },\n      },\n    );\n  }\n  async remove(id: string, user: IUser) {\n    await this.resumeModel.updateOne(\n      { _id: id },\n      {\n        deletedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n    return this, this.resumeModel.softDelete({ _id: id });\n  }\n  async findResumeByUser(user: IUser) {\n    return this.resumeModel\n      .find({ userId: user._id.toString() })\n      .sort('-createdAt')\n      .populate([\n        {\n          path: 'companyId',\n          select: { name: 1 },\n        },\n        {\n          path: 'jobId',\n          select: { name: 1 },\n        },\n      ]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Role.html":{"url":"classes/Role.html","title":"class - Role","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/schemas/role.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                isActive\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                permissions\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Permission[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\nimport { Permission } from 'src/permissions/schema/permission.schema';\n\nexport type RoleDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Role {\n  @Prop()\n  name: string;\n\n  @Prop({ type: [{ type: mongoose.Schema.Types.ObjectId, ref: 'Permission' }] })\n  permissions: Permission[];\n\n  @Prop()\n  description: string;\n\n  @Prop()\n  isActive: boolean;\n\n  @Prop()\n  createdAt: Date;\n\n  @Prop({ type: Object })\n  createdBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop()\n  updatedAt: Date;\n\n  @Prop({ type: Object })\n  updatedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop()\n  isDeleted: boolean;\n\n  @Prop()\n  deletedAt: Date;\n\n  @Prop({ type: Object })\n  deletedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n}\n\nexport const RoleSchema = SchemaFactory.createForClass(Role);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RolesController.html":{"url":"controllers/RolesController.html","title":"controller - RolesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RolesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/roles.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                roles\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createRoleDto: CreateRoleDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createRoleDto\n                                            \n                                                            CreateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: string, limit: string, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ResponseMessage('Fetch Roles with paginate')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, user: IUser, updatePermissionDto: UpdateRoleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatePermissionDto\n                                            \n                                                            UpdateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        \nimport { RolesService } from './roles.service';\nimport { CreateRoleDto } from './dto/create-role.dto';\nimport { UpdateRoleDto } from './dto/update-role.dto';\nimport { IUser } from 'src/users/user.interface';\nimport { ResponseMessage, User } from 'src/decorator/customize';\nimport { Body, Controller, Delete, Get, Param, Patch, Post, Query } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\n\n\n@ApiTags('Roles')\n@Controller('roles')\nexport class RolesController {\n  constructor(private readonly rolesService: RolesService) {}\n\n  @Post()\n  create(@Body() createRoleDto: CreateRoleDto, @User() user: IUser) {\n    return this.rolesService.create(createRoleDto, user);\n  }\n\n  @Get()\n  @ResponseMessage('Fetch Roles with paginate')\n  findAll(\n    @Query('current') currentPage: string,\n    @Query('pageSize') limit: string,\n    @Query() qs: string,\n  ) {\n    return this.rolesService.findAll(+currentPage, +limit, qs);\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string, @User() user: IUser) {\n    return this.rolesService.findOne(id);\n  }\n\n  @Patch(':id')\n  update(\n    @Param('id') id: string,\n    @User() user: IUser,\n    @Body() updatePermissionDto: UpdateRoleDto,\n  ) {\n    return this.rolesService.update(id, updatePermissionDto, user);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string, @User() user: IUser) {\n    return this.rolesService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RolesModule.html":{"url":"modules/RolesModule.html","title":"module - RolesModule","body":"\n                   \n\n\n\n\n    Modules\n    RolesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RolesModule\n\n\n\ncluster_RolesModule_exports\n\n\n\ncluster_RolesModule_providers\n\n\n\n\nRolesService \n\nRolesService \n\n\n\nRolesModule\n\nRolesModule\n\nRolesService  -->\n\nRolesModule->RolesService \n\n\n\n\n\nRolesService\n\nRolesService\n\nRolesModule -->\n\nRolesService->RolesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/roles/roles.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RolesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RolesController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RolesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { RolesService } from './roles.service';\nimport { RolesController } from './roles.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Role, RoleSchema } from './schemas/role.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      {\n        name: Role.name,\n        schema: RoleSchema,\n      },\n    ]),\n  ],\n  controllers: [RolesController],\n  providers: [RolesService],\n  exports: [RolesService],\n})\nexport class RolesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RolesService.html":{"url":"injectables/RolesService.html","title":"injectable - RolesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RolesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/roles.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roleModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/roles/roles.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createRoleDto: CreateRoleDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createRoleDto\n                                            \n                                                            CreateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: number, limit: number, qs: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:100\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(_id: string, updateRoleDto: UpdateRoleDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateRoleDto\n                                            \n                                                            UpdateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { IUser } from 'src/users/user.interface';\nimport { BadRequestException, ConflictException, Injectable } from '@nestjs/common';\nimport { CreateRoleDto } from './dto/create-role.dto';\nimport { UpdateRoleDto } from './dto/update-role.dto';\nimport { Role, RoleDocument } from './schemas/role.schema';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { InjectModel } from '@nestjs/mongoose';\nimport aqp from 'api-query-params';\nimport mongoose from 'mongoose';\nimport { ADMIN_ROLE } from 'src/databases/sample';\n\n@Injectable()\nexport class RolesService {\n  constructor(\n    @InjectModel(Role.name)\n    private roleModel: SoftDeleteModel,\n  ) { }\n  async create(createRoleDto: CreateRoleDto, user: IUser) {\n    // Check if permission with same path and method already exists\n    const existingPermission = await this.roleModel.findOne({\n      name: createRoleDto.name,\n    });\n\n    // If permission already exists, return null or throw an error\n    if (existingPermission) {\n      throw new ConflictException(\n        `Role with name \"${createRoleDto.name}\" already exists`,\n      );\n    }\n\n    // If permission doesn't exist, create new one\n    return this.roleModel.create({\n      ...createRoleDto,\n      createdBy: {\n        _id: user._id,\n        email: user.email,\n      },\n    });\n  }\n\n  async findAll(currentPage: number, limit: number, qs: any) {\n\n    const { filter, projection, population } = aqp(qs);\n    delete filter.current;\n    delete filter.pageSize;\n    const { sort } = aqp(qs);\n    const offset = (+currentPage - 1) * +limit;\n    const defaultLimit = +limit ? +limit : 10;\n    const totalItems = (await this.roleModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n    // if (isEmpty(sort)) {\n    //   // @ts-ignore: Unreachable code error\n    //   sort = \"-updatedAt\"\n    // }\n    const result = await this.roleModel\n      .find(filter)\n      .skip(offset)\n      .limit(defaultLimit)\n      // @ts-ignore: Unreachable code error\n      .sort(sort)\n      .populate(population)\n      .exec();\n    return {\n      meta: {\n        current: currentPage,\n        pageSize: limit,\n        pages: totalPages,\n        total: totalItems,\n      },\n      result,\n    };\n  }\n\n  async findOne(_id: string) {\n    if (!mongoose.Types.ObjectId.isValid(_id)) {\n      throw new BadRequestException('Not found Role');\n    }\n    return (await this.roleModel.findById(_id)).populate({\n      path: 'permissions',\n      select: { _id: 1, apiPath: 1, name: 1, method: 1, module: 1 },\n    });\n  }\n\n  update(_id: string, updateRoleDto: UpdateRoleDto, user: IUser) {\n    if (!mongoose.Types.ObjectId.isValid(_id)) {\n      throw new BadRequestException('Not found Role');\n    }\n    return this.roleModel.updateOne(\n      { _id },\n      {\n        ...updateRoleDto,\n        updatedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n  }\n\n  async remove(id: string, user: IUser) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestException('Not found Role');\n    }\n    const foundRole = await this.roleModel.findById(id);\n    if (foundRole.name === ADMIN_ROLE) {\n      throw new BadRequestException('Không thể xoá Role Admin!!');\n    }\n    await this.roleModel.updateOne(\n      { _id: id },\n      {\n        deletedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n    return this, this.roleModel.softDelete({ _id: id });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Subscriber.html":{"url":"classes/Subscriber.html","title":"class - Subscriber","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Subscriber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/schemas/subscriber.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                skills\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        skills\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\n\nexport type SubscriberDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Subscriber {\n  @Prop({ required: true })\n  email: string;\n\n  @Prop()\n  name: string;\n\n  @Prop()\n  skills: string[];\n\n  @Prop({ type: Object })\n  createdBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n  @Prop()\n  createdAt: Date;\n\n  @Prop()\n  updatedAt: Date;\n  @Prop({ type: Object })\n  updatedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n  @Prop()\n  isDeleted: boolean;\n\n  @Prop()\n  deletedAt: Date;\n\n  @Prop({ type: Object })\n  deletedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n}\n\nexport const SubscriberSchema = SchemaFactory.createForClass(Subscriber);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SubscribersController.html":{"url":"controllers/SubscribersController.html","title":"controller - SubscribersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SubscribersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/subscribers.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                subscribers\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                getUserSkill\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createSubscriberDto: CreateSubscriberDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Create Subscriber')@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSubscriberDto\n                                            \n                                                            CreateSubscriberDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: string, limit: string, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@ResponseMessage('Find Subscriber')@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@ResponseMessage('Get Subscriber By Id')@Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        getUserSkill\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserSkill(user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Get Skills Subscriber')@Post('skills')\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Delete Subscriber By Id')@Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(updateSubscriberDto: UpdateSubscriberDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Update Subscriber By Id')@SkipCheckPermission()@Patch()\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateSubscriberDto\n                                            \n                                                            UpdateSubscriberDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Query,\n} from '@nestjs/common';\n\nimport { IUser } from 'src/users/user.interface';\nimport { Public, ResponseMessage, SkipCheckPermission, User } from 'src/decorator/customize';\nimport { SubscribersService } from 'src/subscribers/subscribers.service';\nimport { CreateSubscriberDto } from 'src/subscribers/dto/create-subscriber.dto';\nimport { UpdateSubscriberDto } from 'src/subscribers/dto/update-subscriber.dto';\nimport { ApiTags } from '@nestjs/swagger';\n\n\n\n@ApiTags('Subscriber')\n@Controller('subscribers')\nexport class SubscribersController {\n  constructor(private readonly subscribersService: SubscribersService) {}\n\n  @ResponseMessage('Create Subscriber')\n  @Post()\n  create(\n    @Body() createSubscriberDto: CreateSubscriberDto,\n    @User() user: IUser,\n  ) {\n    return this.subscribersService.create(createSubscriberDto, user);\n  }\n  @ResponseMessage('Get Skills Subscriber')\n  @Post('skills')\n  getUserSkill(@User() user: IUser) {\n    return this.subscribersService.getSkills(user);\n  }\n\n  @Public()\n  @ResponseMessage('Find Subscriber')\n  @Get()\n  findAll(\n    @Query('current') currentPage: string,\n    @Query('pageSize') limit: string,\n    @Query() qs: string,\n  ) {\n    return this.subscribersService.findAll(+currentPage, +limit, qs);\n  }\n  @Public()\n  @ResponseMessage('Get Subscriber By Id')\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.subscribersService.findOne(id);\n  }\n\n  @ResponseMessage('Update Subscriber By Id')\n  @SkipCheckPermission()\n  @Patch()\n  update(\n    @Body() updateSubscriberDto: UpdateSubscriberDto,\n    @User() user: IUser,\n  ) {\n    return this.subscribersService.update(updateSubscriberDto, user);\n  }\n\n  @ResponseMessage('Delete Subscriber By Id')\n  @Delete(':id')\n  remove(@Param('id') id: string, @User() user: IUser) {\n    return this.subscribersService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SubscribersModule.html":{"url":"modules/SubscribersModule.html","title":"module - SubscribersModule","body":"\n                   \n\n\n\n\n    Modules\n    SubscribersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SubscribersModule\n\n\n\ncluster_SubscribersModule_providers\n\n\n\n\nSubscribersService\n\nSubscribersService\n\n\n\nSubscribersModule\n\nSubscribersModule\n\nSubscribersModule -->\n\nSubscribersService->SubscribersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/subscribers/subscribers.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SubscribersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SubscribersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SubscribersService } from './subscribers.service';\nimport { SubscribersController } from './subscribers.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Subscriber } from 'rxjs';\nimport { SubscriberSchema } from './schemas/subscriber.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: Subscriber.name, schema: SubscriberSchema },\n    ]),\n  ],\n  controllers: [SubscribersController],\n  providers: [SubscribersService],\n})\nexport class SubscribersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SubscribersService.html":{"url":"injectables/SubscribersService.html","title":"injectable - SubscribersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SubscribersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/subscribers.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                getSkills\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(subscriberModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/subscribers/subscribers.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        subscriberModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createSubscriberDto: CreateSubscriberDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSubscriberDto\n                                            \n                                                            CreateSubscriberDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: number, limit: number, qs: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getSkills\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSkills(user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(updateSubscriberDto: UpdateSubscriberDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateSubscriberDto\n                                            \n                                                            UpdateSubscriberDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { CreateSubscriberDto } from './dto/create-subscriber.dto';\nimport { UpdateSubscriberDto } from './dto/update-subscriber.dto';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { Subscriber, SubscriberDocument } from './schemas/subscriber.schema';\nimport { IUser } from 'src/users/user.interface';\nimport aqp from 'api-query-params';\n\n@Injectable()\nexport class SubscribersService {\n  constructor(\n    @InjectModel(Subscriber.name)\n    private subscriberModel: SoftDeleteModel,\n  ) {}\n  async create(createSubscriberDto: CreateSubscriberDto, user: IUser) {\n    const { name, email, skills } = createSubscriberDto;\n    const isExist = await this.subscriberModel.findOne({ email });\n    if (isExist) {\n      throw new BadRequestException(`Email: ${email} đã tồn tại trên hệ thống. Vui lòng thử lại email khác`)\n    }\n    return this.subscriberModel.create({\n      ...createSubscriberDto,\n      createdBy: {\n        _id: user._id,\n        email: user.email,\n      },\n    });\n  }\n\n  async findAll(currentPage: number, limit: number, qs: any) {\n    const { filter, projection, population } = aqp(qs);\n    delete filter.current;\n    delete filter.pageSize;\n    const { sort } = aqp(qs);\n    const offset = (+currentPage - 1) * +limit;\n    const defaultLimit = +limit ? +limit : 10;\n    const totalItems = (await this.subscriberModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n    // if (isEmpty(sort)) {\n    //   // @ts-ignore: Unreachable code error\n    //   sort = \"-updatedAt\"\n    // }\n    const result = await this.subscriberModel\n      .find(filter)\n      .skip(offset)\n      .limit(defaultLimit)\n      // @ts-ignore: Unreachable code error\n      .sort(sort)\n      .populate(population)\n      .exec();\n    return {\n      meta: {\n        current: currentPage,\n        pageSize: limit,\n        pages: totalPages,\n        total: totalItems,\n      },\n      result,\n    };\n  }\n  findOne(_id: string) {\n    return this.subscriberModel.findOne({ _id });\n  }\n\n  update(updateSubscriberDto: UpdateSubscriberDto, user: IUser) {\n    return this.subscriberModel.updateOne(\n      { email: user.email },\n      {\n        ...updateSubscriberDto,\n        updatedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n      { upsert: true },\n    );\n  }\n  async getSkills(user: IUser){\n    const { email } = user;\n    return this.subscriberModel.findOne({ email }, { skills: 1 });\n  }\n  async remove(id: string, user: IUser) {\n    await this.subscriberModel.updateOne(\n      { _id: id },\n      {\n        deletedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n    return this.subscriberModel.softDelete({ _id: id });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TransformInterceptor.html":{"url":"injectables/TransformInterceptor.html","title":"injectable - TransformInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TransformInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/transform.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/core/transform.interceptor.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/transform.interceptor.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { RESPONSE_MESSAGE } from 'src/decorator/customize';\n\nexport interface Response {\n  statusCode: number;\n  message?: string;\n  data: any;\n}\n\n@Injectable()\nexport class TransformInterceptor\n  implements NestInterceptor>\n{\n  constructor(private reflector: Reflector) {}\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Observable> {\n    return next.handle().pipe(\n      map((data) => ({\n        statusCode: context.switchToHttp().getResponse().statusCode,\n        message:\n          this.reflector.get(RESPONSE_MESSAGE, context.getHandler()) ||\n          '',\n        // message: data.message,\n        data: data,\n      })),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCompanyDto.html":{"url":"classes/UpdateCompanyDto.html","title":"class - UpdateCompanyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCompanyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/dto/update-company.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateCompanyDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateCompanyDto } from './create-company.dto';\nimport { IsNotEmpty } from 'class-validator';\n\nexport class UpdateCompanyDto extends PartialType(CreateCompanyDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateFileDto.html":{"url":"classes/UpdateFileDto.html","title":"class - UpdateFileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateFileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/dto/update-file.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateFileDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateFileDto } from './create-file.dto';\n\nexport class UpdateFileDto extends PartialType(CreateFileDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateJobDto.html":{"url":"classes/UpdateJobDto.html","title":"class - UpdateJobDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateJobDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/dto/update-job.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateJobDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateJobDto } from './create-job.dto';\n\nexport class UpdateJobDto extends PartialType(CreateJobDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePermissionDto.html":{"url":"classes/UpdatePermissionDto.html","title":"class - UpdatePermissionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePermissionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/dto/update-permission.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreatePermissionDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreatePermissionDto } from './create-permission.dto';\n\nexport class UpdatePermissionDto extends PartialType(CreatePermissionDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateResumeDto.html":{"url":"classes/UpdateResumeDto.html","title":"class - UpdateResumeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateResumeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/dto/update-resume.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateResumeDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateResumeDto } from './create-resume.dto';\n\nexport class UpdateResumeDto extends PartialType(CreateResumeDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateRoleDto.html":{"url":"classes/UpdateRoleDto.html","title":"class - UpdateRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/dto/update-role.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateRoleDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateRoleDto } from './create-role.dto';\n\nexport class UpdateRoleDto extends PartialType(CreateRoleDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSubscriberDto.html":{"url":"classes/UpdateSubscriberDto.html","title":"class - UpdateSubscriberDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSubscriberDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/dto/update-subscriber.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateSubscriberDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateSubscriberDto } from './create-subscriber.dto';\n\nexport class UpdateSubscriberDto extends PartialType(CreateSubscriberDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            OmitType(CreateUserDto, [\n  'password',\n] as const)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'ID không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OmitType, PartialType } from '@nestjs/mapped-types';\nimport { CreateUserDto } from './create-user.dto';\nimport { IsNotEmpty } from 'class-validator';\n\nexport class UpdateUserDto extends OmitType(CreateUserDto, [\n  'password',\n] as const) {\n  @IsNotEmpty({ message: 'ID không được để trống' })\n  _id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatedBy.html":{"url":"classes/UpdatedBy.html","title":"class - UpdatedBy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatedBy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/dto/create-resume.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsArray, IsDate, IsEmail, IsNotEmpty, ValidateNested } from 'class-validator';\nimport { Transform, Type } from 'class-transformer';\nimport mongoose from 'mongoose';\n\nexport class UpdatedBy {\n  @IsNotEmpty()\n  _id: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty()\n  @IsEmail()\n  email: string;\n}\n\nexport class History {\n  @IsNotEmpty({ message: 'status không được để trống' })\n  status: string;\n\n  @IsNotEmpty({ message: 'updatedAt không được để trống' })\n  @IsDate({\n    message: 'field updatedAt không đúng định dạng',\n  })\n  @Transform(({ value }) => new Date(value))\n  updatedAt: Date;\n  @Type(() => UpdatedBy)\n  updatedBy: UpdatedBy;\n}\n\nexport class CreateResumeDto {\n  //   @IsNotEmpty({\n  //     message: 'Email không được để trống',\n  //   })\n  email: string;\n\n  //   @IsNotEmpty({\n  //     message: 'User Id không được để trống',\n  //   })\n  userId: string;\n\n  @IsNotEmpty({\n    message: 'Url không được để trống',\n  })\n  url: string;\n\n  //   @IsNotEmpty({\n  //     message: 'Status không được để trống',\n  //   })\n  status: string;\n\n  @IsNotEmpty({\n    message: 'Company Id không được để trống',\n  })\n  companyId: string;\n\n  @IsNotEmpty({\n    message: 'Job Id không được để trống',\n  })\n  jobId: string;\n\n  @ValidateNested()\n  @Type(() => History)\n  history: History[];\n}\n\n// export class RegisterResumeDto {\n//   @IsNotEmpty({\n//     message: 'Name không được để trống',\n//   })\n//   name: string;\n//   @IsEmail(\n//     {},\n//     {\n//       message: 'Email không đúng định dạng',\n//     },\n//   )\n//   @IsNotEmpty({\n//     message: 'Email không được để trống',\n//   })\n//   email: string;\n\n//   @IsNotEmpty({\n//     message: 'Password không được để trống',\n//   })\n//   password: string;\n//   @IsNotEmpty({\n//     message: 'Age không được để trống',\n//   })\n//   age: number;\n//   @IsNotEmpty({\n//     message: 'Role không được để trống',\n//   })\n//   role: number;\n\n//   @IsNotEmpty({\n//     message: 'Company không được để trống',\n//   })\n//   @IsObject()\n//   @ValidateNested()\n//   @Type(() => Company)\n//   company: Company;\n\n//   address: string;\n//   gender: string;\n// }\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/schemas/user.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                age\n                            \n                            \n                                    \n                                company\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                gender\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                refreshToken\n                            \n                            \n                                    \n                                role\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: 'Role'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:52\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\nimport { Role } from 'src/roles/schemas/role.schema';\n\nexport type UserDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class User {\n  @Prop({ required: true })\n  email: string;\n\n  @Prop({ required: true })\n  password: string;\n\n  @Prop()\n  name: string;\n\n  @Prop()\n  age: number;\n\n  @Prop({ type: mongoose.Schema.Types.ObjectId, ref: 'Role' })\n  role: mongoose.Schema.Types.ObjectId;\n\n  @Prop({ type: Object })\n  company: {\n    _id: mongoose.Schema.Types.ObjectId;\n    name: string;\n  };\n\n  @Prop()\n  gender: string;\n\n  @Prop()\n  address: string;\n\n  @Prop()\n  refreshToken: string;\n\n  @Prop()\n  createdAt: Date;\n\n  @Prop({ type: Object })\n  createdBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop()\n  updatedAt: Date;\n\n  @Prop({ type: Object })\n  updatedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n\n  @Prop()\n  isDeleted: boolean;\n\n  @Prop()\n  deletedAt: Date;\n\n  @Prop({ type: Object })\n  deletedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n}\n\nexport const UserSchema = SchemaFactory.createForClass(User);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserLoginDto.html":{"url":"classes/UserLoginDto.html","title":"class - UserLoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserLoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({example: '123', description: 'Password'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:102\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({example: 'youremail@domain.com', description: 'Your Email'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:94\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsMongoId, IsNotEmpty, IsObject, IsString, ValidateNested } from 'class-validator';\nimport { Type } from 'class-transformer';\nimport mongoose from 'mongoose';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class Company {\n  @IsNotEmpty({ message: 'ID không được để trống' })\n  _id: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty({ message: 'Name không được để trống' })\n  name: string;\n}\n\nexport class CreateUserDto {\n  @IsNotEmpty({\n    message: 'Name không được để trống',\n  })\n  name: string;\n  @IsEmail(\n    {},\n    {\n      message: 'Email không đúng định dạng',\n    },\n  )\n  @IsNotEmpty({\n    message: 'Email không được để trống',\n  })\n  email: string;\n\n  @IsNotEmpty({\n    message: 'Password không được để trống',\n  })\n  password: string;\n  @IsNotEmpty({\n    message: 'Role không được để trống',\n  })\n  @IsMongoId({\n    message: 'Định dạng Mongo ID',\n  })\n  role: mongoose.Schema.Types.ObjectId;\n  @IsNotEmpty({\n    message: 'Age không được để trống',\n  })\n  age: number;\n  address: string;\n  gender: string;\n}\n\nexport class RegisterUserDto {\n  @IsNotEmpty({\n    message: 'Name không được để trống',\n  })\n  name: string;\n  @IsEmail(\n    {},\n    {\n      message: 'Email không đúng định dạng',\n    },\n  )\n  @IsNotEmpty({\n    message: 'Email không được để trống',\n  })\n  email: string;\n\n  @IsNotEmpty({\n    message: 'Password không được để trống',\n  })\n  password: string;\n  @IsNotEmpty({\n    message: 'Age không được để trống',\n  })\n  age: number;\n  @IsNotEmpty({\n    message: 'Role không được để trống',\n  })\n  role: number;\n\n  @IsNotEmpty({\n    message: 'Company không được để trống',\n  })\n  @IsObject()\n  @ValidateNested()\n  @Type(() => Company)\n  company: Company;\n\n  address: string;\n  gender: string;\n}\n\nexport class UserLoginDto {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({ example: 'youremail@domain.com', description: 'Your Email' })\n  readonly username: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    example: '123',\n    description: 'Password',\n  })\n  readonly password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(registerUserDTO: RegisterUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Register as admin new user success')@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                registerUserDTO\n                                            \n                                                            RegisterUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: string, limit: string, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Fetch User By Id')@Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Delete User')@Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(updateUserDto: UpdateUserDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Update User')@Patch()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Query,\n} from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { CreateUserDto, RegisterUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { ResponseMessage, User } from 'src/decorator/customize';\nimport { IUser } from './user.interface';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('Users')\n@Controller('users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n  @ResponseMessage('Register as admin new user success')\n  @Post()\n  create(@Body() registerUserDTO: RegisterUserDto) {\n    return this.usersService.register(registerUserDTO);\n  }\n  @Get()\n  findAll(\n    @Query('current') currentPage: string,\n    @Query('pageSize') limit: string,\n    @Query() qs: string,\n  ) {\n    return this.usersService.findAll(+currentPage, +limit, qs);\n  }\n  @ResponseMessage('Fetch User By Id')\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.usersService.findOne(id);\n  }\n\n  @ResponseMessage('Update User')\n  @Patch()\n  update(@Body() updateUserDto: UpdateUserDto, @User() user: IUser) {\n    return this.usersService.update(updateUserDto, user);\n  }\n\n  @ResponseMessage('Delete User')\n  @Delete(':id')\n  remove(@Param('id') id: string, @User() user: IUser) {\n    return this.usersService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { User, UserSchema } from './schemas/user.schema';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { UsersController } from './users.controller';\nimport { Role, RoleSchema } from 'src/roles/schemas/role.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: User.name, schema: UserSchema },\n      { name: Role.name, schema: RoleSchema },\n    ]),\n  ],\n  controllers: [UsersController],\n  providers: [UsersService],\n  exports: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                configService\n                            \n                            \n                                findUserByToken\n                            \n                            \n                                getHashPassword\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                findOneByUsername\n                            \n                            \n                                isValidPassword\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                updateUserRefreshToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: SoftDeleteModel, roleModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserDTO: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDTO\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: number, limit: number, qs: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:116\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOneByUsername\n                        \n                    \n                \n            \n            \n                \nfindOneByUsername(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:137\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isValidPassword\n                        \n                    \n                \n            \n            \n                \nisValidPassword(password: string, hashPassword: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:148\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                hashPassword\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(registerUserDTO: RegisterUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                registerUserDTO\n                                            \n                                                            RegisterUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:164\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(updateUserDto: UpdateUserDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:151\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateUserRefreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUserRefreshToken(_id: string, refreshToken: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:183\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                refreshToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        configService\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ConfigService\n\n                    \n                \n                \n                    \n                        Default value : new ConfigService()\n                    \n                \n                    \n                        \n                                Defined in src/users/users.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findUserByToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/users/users.service.ts:191\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHashPassword\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/users/users.service.ts:28\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  HttpException,\n  HttpStatus,\n  Injectable,\n} from '@nestjs/common';\nimport { CreateUserDto, RegisterUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { User as UserM, UserDocument } from './schemas/user.schema';\nimport mongoose from 'mongoose';\nimport { compareSync, genSaltSync, hashSync } from 'bcryptjs';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { IUser } from './user.interface';\nimport aqp from 'api-query-params';\nimport { ConfigService } from '@nestjs/config';\nimport { Role, RoleDocument } from 'src/roles/schemas/role.schema';\nimport { USER_ROLE } from 'src/databases/sample';\n\n@Injectable()\nexport class UsersService {\n  constructor(\n    @InjectModel(UserM.name) private userModel: SoftDeleteModel,\n    @InjectModel(Role.name) private roleModel: SoftDeleteModel,\n  ) {}\n  configService: ConfigService = new ConfigService();\n\n  getHashPassword = (plainPassword: string) => {\n    const salt = genSaltSync(10);\n    const hash = hashSync(plainPassword, salt);\n    return hash;\n  };\n  async create(createUserDTO: CreateUserDto) {\n    const isExistedUser = await this.userModel.findOne({\n      email: createUserDTO.email,\n    });\n    if (isExistedUser) {\n      throw new BadRequestException(`Email ${createUserDTO.email} is existed`);\n    }\n\n    const hashPassword = this.getHashPassword(createUserDTO.password);\n    const user = await this.userModel.create({\n      email: createUserDTO.email,\n      password: hashPassword,\n      name: createUserDTO.name,\n      address: createUserDTO.address,\n      age: createUserDTO.age,\n      gender: createUserDTO.gender,\n    });\n    return {\n      _id: user._id,\n      createdAt: user.createdAt,\n    };\n  }\n  async register(registerUserDTO: RegisterUserDto) {\n    const isExistedUser = await this.userModel.findOne({\n      email: registerUserDTO.email,\n    });\n    if (isExistedUser) {\n      throw new BadRequestException(\n        `Email ${registerUserDTO.email} is existed`,\n      );\n    }\n    const userRole = await this.roleModel.findOne({\n      name: USER_ROLE,\n    });\n    const hashPassword = this.getHashPassword(registerUserDTO.password);\n    const user = await this.userModel.create({\n      email: registerUserDTO.email,\n      password: hashPassword,\n      name: registerUserDTO.name,\n      address: registerUserDTO.address,\n      age: registerUserDTO.age,\n      gender: registerUserDTO.gender,\n      company: registerUserDTO.company,\n      role: userRole?.id,\n    });\n    return {\n      _id: user._id,\n      createdAt: user.createdAt,\n    };\n  }\n  async findAll(currentPage: number, limit: number, qs: any) {\n    const { filter, projection, population } = aqp(qs);\n    delete filter.current;\n    delete filter.pageSize;\n    const { sort } = aqp(qs);\n    const offset = (+currentPage - 1) * +limit;\n    const defaultLimit = +limit ? +limit : 10;\n    const totalItems = (await this.userModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n    // if (isEmpty(sort)) {\n    //   // @ts-ignore: Unreachable code error\n    //   sort = \"-updatedAt\"\n    // }\n    const result = await this.userModel\n      .find(filter)\n      .skip(offset)\n      .limit(defaultLimit)\n      // @ts-ignore: Unreachable code error\n      .sort(sort)\n      .populate(population)\n      .select('-password -refreshToken')\n      .exec();\n    return {\n      meta: {\n        current: currentPage,\n        pageSize: limit,\n        pages: totalPages,\n        total: totalItems,\n      },\n      result,\n    };\n  }\n\n  async findOne(id: string) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new HttpException(\n        { message: 'Not Found User' },\n        HttpStatus.CREATED,\n      );\n    }\n    const user = await this.userModel\n      .findOne({\n        _id: id,\n      })\n      .populate({\n        path: 'role',\n        select: {\n          name: 1,\n          _id: 1,\n        },\n      })\n      .select('-password -isDeleted -deletedAt');\n    return user;\n  }\n  findOneByUsername(username: string) {\n    return this.userModel\n      .findOne({\n        email: username,\n      })\n      .populate({\n        path: 'role',\n        select: { name: 1 },\n      });\n  }\n\n  isValidPassword(password: string, hashPassword: string) {\n    return compareSync(password, hashPassword);\n  }\n  async update(updateUserDto: UpdateUserDto, user: IUser) {\n    return this.userModel.updateOne(\n      { _id: updateUserDto._id },\n      {\n        ...updateUserDto,\n        updatedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n  }\n\n  async remove(id: string, user: IUser) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      return 'Not found User';\n    }\n    const foundUser = await this.userModel.findById(id);\n    if (foundUser.email === this.configService.get('EMAIL_ADMIN')) {\n      throw new BadRequestException('Không thể xoá tài khoản Admin!!');\n    }\n    await this.userModel.updateOne(\n      { _id: id },\n      {\n        deletedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n    return this.userModel.softDelete({ _id: id });\n  }\n  async updateUserRefreshToken(_id: string, refreshToken: string) {\n    return await this.userModel.updateOne(\n      { _id },\n      {\n        refreshToken,\n      },\n    );\n  }\n  findUserByToken = (refreshToken: string) => {\n    return this.userModel.findOne({ refreshToken }).populate({\n      path: 'role',\n      select: { name: 1 },\n    });\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                        src/auth/constants.ts\n            \n            variable\n            jwtConstants\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/jwt.auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/local.auth.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/passport/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/companies/companies.controller.ts\n            \n            controller\n            CompaniesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/companies/companies.service.ts\n            \n            injectable\n            CompaniesService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/companies/dto/create-company.dto.ts\n            \n            class\n            CreateCompanyDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/companies/dto/update-company.dto.ts\n            \n            class\n            UpdateCompanyDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/companies/schema/company.schema.ts\n            \n            class\n            Company\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                        src/companies/schema/company.schema.ts\n            \n            variable\n            CompanySchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/companies/schema/company.schema.ts\n            \n            type alias\n            CompanyDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/transform.interceptor.ts\n            \n            injectable\n            TransformInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/core/transform.interceptor.ts\n            \n            interface\n            Response\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/databases/databases.controller.ts\n            \n            controller\n            DatabasesController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/databases/databases.service.ts\n            \n            injectable\n            DatabasesService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/databases/sample.ts\n            \n            variable\n            ADMIN_ROLE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/databases/sample.ts\n            \n            variable\n            INIT_PERMISSIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/databases/sample.ts\n            \n            variable\n            USER_ROLE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/decorator/customize.ts\n            \n            variable\n            IS_PUBLIC_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/decorator/customize.ts\n            \n            variable\n            IS_PUBLIC_PERMISSION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/decorator/customize.ts\n            \n            variable\n            Public\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/decorator/customize.ts\n            \n            variable\n            RESPONSE_MESSAGE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/decorator/customize.ts\n            \n            variable\n            ResponseMessage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/decorator/customize.ts\n            \n            variable\n            SkipCheckPermission\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/decorator/customize.ts\n            \n            variable\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/files/dto/create-file.dto.ts\n            \n            class\n            CreateFileDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/files/dto/update-file.dto.ts\n            \n            class\n            UpdateFileDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/files/entities/file.entity.ts\n            \n            class\n            File\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/files/files.controller.ts\n            \n            controller\n            FilesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/files/files.service.ts\n            \n            injectable\n            FilesService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/files/multer.config.ts\n            \n            injectable\n            MulterConfigService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/jobs/dto/create-job.dto.ts\n            \n            class\n            Company\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/jobs/dto/create-job.dto.ts\n            \n            class\n            CreateJobDto\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/jobs/dto/update-job.dto.ts\n            \n            class\n            UpdateJobDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/jobs/jobs.controller.ts\n            \n            controller\n            JobsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/jobs/jobs.service.ts\n            \n            injectable\n            JobsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/jobs/schemas/job.schema.ts\n            \n            class\n            Job\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                        src/jobs/schemas/job.schema.ts\n            \n            variable\n            JobSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/jobs/schemas/job.schema.ts\n            \n            type alias\n            JobDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mail/mail.controller.ts\n            \n            controller\n            MailController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/mail/mail.service.ts\n            \n            injectable\n            MailService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/permissions/dto/create-permission.dto.ts\n            \n            class\n            CreatePermissionDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/permissions/dto/update-permission.dto.ts\n            \n            class\n            UpdatePermissionDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/permissions/permissions.controller.ts\n            \n            controller\n            PermissionsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/permissions/permissions.service.ts\n            \n            injectable\n            PermissionsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/permissions/schema/permission.schema.ts\n            \n            class\n            Permission\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                        src/permissions/schema/permission.schema.ts\n            \n            variable\n            PermissionSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/permissions/schema/permission.schema.ts\n            \n            type alias\n            PermissionDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/resumes/dto/create-resume.dto.ts\n            \n            class\n            CreateResumeDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/resumes/dto/create-resume.dto.ts\n            \n            class\n            History\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/resumes/dto/create-resume.dto.ts\n            \n            class\n            UpdatedBy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/resumes/dto/update-resume.dto.ts\n            \n            class\n            UpdateResumeDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/resumes/resumes.controller.ts\n            \n            controller\n            ResumesController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/resumes/resumes.service.ts\n            \n            injectable\n            ResumesService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/resumes/schemas/resume.schema.ts\n            \n            class\n            Resume\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                        src/resumes/schemas/resume.schema.ts\n            \n            variable\n            ResumeSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/resumes/schemas/resume.schema.ts\n            \n            type alias\n            ResumeDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/roles/dto/create-role.dto.ts\n            \n            class\n            CreateRoleDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/roles/dto/update-role.dto.ts\n            \n            class\n            UpdateRoleDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/roles/roles.controller.ts\n            \n            controller\n            RolesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/roles/roles.service.ts\n            \n            injectable\n            RolesService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/roles/schemas/role.schema.ts\n            \n            class\n            Role\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                        src/roles/schemas/role.schema.ts\n            \n            variable\n            RoleSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/roles/schemas/role.schema.ts\n            \n            type alias\n            RoleDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/shared/constants/status.enum.ts\n            \n            variable\n            STATUS_RESUMES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/subscribers/dto/create-subscriber.dto.ts\n            \n            class\n            CreateSubscriberDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/subscribers/dto/update-subscriber.dto.ts\n            \n            class\n            UpdateSubscriberDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/subscribers/schemas/subscriber.schema.ts\n            \n            class\n            Subscriber\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                        src/subscribers/schemas/subscriber.schema.ts\n            \n            variable\n            SubscriberSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/subscribers/schemas/subscriber.schema.ts\n            \n            type alias\n            SubscriberDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/subscribers/subscribers.controller.ts\n            \n            controller\n            SubscribersController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/subscribers/subscribers.service.ts\n            \n            injectable\n            SubscribersService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            Company\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            RegisterUserDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            UserLoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/schemas/user.schema.ts\n            \n            class\n            User\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                        src/users/schemas/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/users/schemas/user.schema.ts\n            \n            type alias\n            UserDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/user.interface.ts\n            \n            interface\n            IUser\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/14)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs-modules/mailer : 1.8.1\n        \n            @nestjs/common : 9.4.0\n        \n            @nestjs/config : 2.3.1\n        \n            @nestjs/core : 9.4.0\n        \n            @nestjs/jwt : 10.0.3\n        \n            @nestjs/mapped-types : 1.2.2\n        \n            @nestjs/mongoose : 9.2.2\n        \n            @nestjs/passport : 9.0.3\n        \n            @nestjs/platform-express : 9.4.0\n        \n            @nestjs/schedule : 3.0.1\n        \n            @nestjs/swagger : 7.0.4\n        \n            @nestjs/throttler : 4.1.0\n        \n            api-query-params : ^5.4.0\n        \n            bcryptjs : 2.4.3\n        \n            class-transformer : 0.5.1\n        \n            class-validator : 0.14.0\n        \n            cookie-parser : ^1.4.6\n        \n            cron : 2.4.3\n        \n            dotenv : ^16.0.3\n        \n            ejs : 3.1.9\n        \n            handlebars : 4.7.7\n        \n            helmet : 8.0.0\n        \n            mongoose : 7.1.0\n        \n            ms : 2.1.3\n        \n            nodemailer : 6.9.3\n        \n            passport : 0.6.0\n        \n            passport-jwt : 4.0.1\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : 0.1.13\n        \n            rxjs : 7.2.0\n        \n            soft-delete-plugin-mongoose : 1.0.17\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCác bước cần làm để chạy dự án NestJS\n1. Cài đặt thư viện với câu lệnh: npm i\n2. Chạy dự án với câu lệnh: npm run dev\n=================\nTác giả: Bảo IT\nMọi thông tin về Tác giả Bảo IT, các bạn có thể tìm kiếm tại đây:\nWebsite chính thức: https://baoit.com.vn/\nYoutube “Bảo IT” : https://www.youtube.com/@baoit\nTiktok “Bảo IT” :  https://www.tiktok.com/@baoit\nFanpage “Bảo IT” : https://www.facebook.com/askITwithERIC/\nUdemy Bảo IT: https://www.udemy.com/user/eric-7039/\nCreate Document command: npx @compodoc/compodoc -p tsconfig.json -s\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CompaniesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabasesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FilesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JobsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PermissionsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ResumesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RolesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SubscribersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CompaniesModule\n\n\n\ncluster_CompaniesModule_providers\n\n\n\ncluster_DatabasesModule\n\n\n\ncluster_DatabasesModule_providers\n\n\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_providers\n\n\n\ncluster_JobsModule\n\n\n\ncluster_JobsModule_providers\n\n\n\ncluster_MailModule\n\n\n\ncluster_MailModule_providers\n\n\n\ncluster_PermissionsModule\n\n\n\ncluster_PermissionsModule_providers\n\n\n\ncluster_ResumesModule\n\n\n\ncluster_ResumesModule_providers\n\n\n\ncluster_RolesModule\n\n\n\ncluster_RolesModule_exports\n\n\n\ncluster_RolesModule_providers\n\n\n\ncluster_SubscribersModule\n\n\n\ncluster_SubscribersModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nCompaniesModule\n\nCompaniesModule\n\nAppModule -->\n\nCompaniesModule->AppModule\n\n\n\n\n\nDatabasesModule\n\nDatabasesModule\n\nAppModule -->\n\nDatabasesModule->AppModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nAppModule -->\n\nFilesModule->AppModule\n\n\n\n\n\nJobsModule\n\nJobsModule\n\nAppModule -->\n\nJobsModule->AppModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nPermissionsModule\n\nPermissionsModule\n\nAppModule -->\n\nPermissionsModule->AppModule\n\n\n\n\n\nResumesModule\n\nResumesModule\n\nAppModule -->\n\nResumesModule->AppModule\n\n\n\n\n\nRolesModule\n\nRolesModule\n\nAuthModule -->\n\nRolesModule->AuthModule\n\n\n\nAppModule -->\n\nRolesModule->AppModule\n\n\n\n\n\nRolesService \n\nRolesService \n\nRolesService  -->\n\nRolesModule->RolesService \n\n\n\n\n\nSubscribersModule\n\nSubscribersModule\n\nAppModule -->\n\nSubscribersModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nCompaniesService\n\nCompaniesService\n\nCompaniesModule -->\n\nCompaniesService->CompaniesModule\n\n\n\n\n\nDatabasesService\n\nDatabasesService\n\nDatabasesModule -->\n\nDatabasesService->DatabasesModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nDatabasesModule -->\n\nUsersService->DatabasesModule\n\n\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\nFilesService\n\nFilesService\n\nFilesModule -->\n\nFilesService->FilesModule\n\n\n\n\n\nJobsService\n\nJobsService\n\nJobsModule -->\n\nJobsService->JobsModule\n\n\n\n\n\nMailService\n\nMailService\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\nPermissionsService\n\nPermissionsService\n\nPermissionsModule -->\n\nPermissionsService->PermissionsModule\n\n\n\n\n\nResumesService\n\nResumesService\n\nResumesModule -->\n\nResumesService->ResumesModule\n\n\n\n\n\nRolesService\n\nRolesService\n\nRolesModule -->\n\nRolesService->RolesModule\n\n\n\n\n\nSubscribersService\n\nSubscribersService\n\nSubscribersModule -->\n\nSubscribersService->SubscribersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        12 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    12 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    18 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    30 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : https://baoit.com.vn/\n        \n            License : UNLICENSED\n        \n            Author : Bảo IT\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CompanyDocument   (src/.../company.schema.ts)\n                        \n                        \n                            JobDocument   (src/.../job.schema.ts)\n                        \n                        \n                            PermissionDocument   (src/.../permission.schema.ts)\n                        \n                        \n                            ResumeDocument   (src/.../resume.schema.ts)\n                        \n                        \n                            RoleDocument   (src/.../role.schema.ts)\n                        \n                        \n                            SubscriberDocument   (src/.../subscriber.schema.ts)\n                        \n                        \n                            UserDocument   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/companies/schema/company.schema.ts\n    \n    \n        \n            \n                \n                    \n                    CompanyDocument\n                \n            \n            \n                \n                        HydratedDocument\n\n                \n            \n        \n    \n    src/jobs/schemas/job.schema.ts\n    \n    \n        \n            \n                \n                    \n                    JobDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/permissions/schema/permission.schema.ts\n    \n    \n        \n            \n                \n                    \n                    PermissionDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/resumes/schemas/resume.schema.ts\n    \n    \n        \n            \n                \n                    \n                    ResumeDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/roles/schemas/role.schema.ts\n    \n    \n        \n            \n                \n                    \n                    RoleDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/subscribers/schemas/subscriber.schema.ts\n    \n    \n        \n            \n                \n                    \n                    SubscriberDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/users/schemas/user.schema.ts\n    \n    \n        \n            \n                \n                    \n                    UserDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ADMIN_ROLE   (src/.../sample.ts)\n                        \n                        \n                            CompanySchema   (src/.../company.schema.ts)\n                        \n                        \n                            INIT_PERMISSIONS   (src/.../sample.ts)\n                        \n                        \n                            IS_PUBLIC_KEY   (src/.../customize.ts)\n                        \n                        \n                            IS_PUBLIC_PERMISSION   (src/.../customize.ts)\n                        \n                        \n                            JobSchema   (src/.../job.schema.ts)\n                        \n                        \n                            jwtConstants   (src/.../constants.ts)\n                        \n                        \n                            PermissionSchema   (src/.../permission.schema.ts)\n                        \n                        \n                            Public   (src/.../customize.ts)\n                        \n                        \n                            RESPONSE_MESSAGE   (src/.../customize.ts)\n                        \n                        \n                            ResponseMessage   (src/.../customize.ts)\n                        \n                        \n                            ResumeSchema   (src/.../resume.schema.ts)\n                        \n                        \n                            RoleSchema   (src/.../role.schema.ts)\n                        \n                        \n                            SkipCheckPermission   (src/.../customize.ts)\n                        \n                        \n                            STATUS_RESUMES   (src/.../status.enum.ts)\n                        \n                        \n                            SubscriberSchema   (src/.../subscriber.schema.ts)\n                        \n                        \n                            User   (src/.../customize.ts)\n                        \n                        \n                            USER_ROLE   (src/.../sample.ts)\n                        \n                        \n                            UserSchema   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/databases/sample.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ADMIN_ROLE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'SUPER_ADMIN'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        INIT_PERMISSIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    _id: '648ab415f4328bd3153ee211',\n    name: 'Get Company with paginate',\n    apiPath: '/api/v1/companies',\n    method: 'GET',\n    module: 'COMPANIES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T06:47:49.369Z',\n    updatedAt: '2023-06-15T06:54:05.131Z',\n    __v: 0,\n    updatedBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n  },\n  {\n    _id: '648ab436f4328bd3153ee216',\n    name: 'Create Company',\n    apiPath: '/api/v1/companies',\n    method: 'POST',\n    module: 'COMPANIES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T06:48:22.224Z',\n    updatedAt: '2023-06-15T06:48:22.224Z',\n    __v: 0,\n  },\n  {\n    _id: '648ab4d5f4328bd3153ee21b',\n    name: 'Update Company',\n    apiPath: '/api/v1/companies/:id',\n    method: 'PATCH',\n    module: 'COMPANIES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T06:51:01.241Z',\n    updatedAt: '2023-06-15T06:51:01.241Z',\n    __v: 0,\n  },\n  {\n    _id: '648ab4ebf4328bd3153ee220',\n    name: 'Delete Company',\n    apiPath: '/api/v1/companies/:id',\n    method: 'DELETE',\n    module: 'COMPANIES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T06:51:23.973Z',\n    updatedAt: '2023-06-15T06:51:23.973Z',\n    __v: 0,\n  },\n  {\n    _id: '648ab5a8072f2a2ef910638d',\n    name: 'Get Company by id',\n    apiPath: '/api/v1/companies/:id',\n    method: 'GET',\n    module: 'COMPANIES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T06:54:32.799Z',\n    updatedAt: '2023-06-15T06:54:32.799Z',\n    __v: 0,\n  },\n  {\n    _id: '648ab6d3fa16b294212e4033',\n    name: 'Create User',\n    apiPath: '/api/v1/users',\n    method: 'POST',\n    module: 'USERS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T06:59:31.898Z',\n    updatedAt: '2023-06-15T06:59:31.898Z',\n    __v: 0,\n  },\n  {\n    _id: '648ab6e7fa16b294212e4038',\n    name: 'Get User by Id',\n    apiPath: '/api/v1/users/:id',\n    method: 'GET',\n    module: 'USERS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T06:59:51.041Z',\n    updatedAt: '2023-06-15T06:59:51.041Z',\n    __v: 0,\n  },\n  {\n    _id: '648ab6fdfa16b294212e403d',\n    name: 'Get User with paginate',\n    apiPath: '/api/v1/users',\n    method: 'GET',\n    module: 'USERS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T07:00:13.364Z',\n    updatedAt: '2023-06-15T07:00:13.364Z',\n    __v: 0,\n  },\n  {\n    _id: '648ab719fa16b294212e4042',\n    name: 'Update User',\n    apiPath: '/api/v1/users/:id',\n    method: 'PATCH',\n    module: 'USERS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T07:00:41.934Z',\n    updatedAt: '2023-06-15T07:00:41.934Z',\n    __v: 0,\n  },\n  {\n    _id: '648ab728fa16b294212e4047',\n    name: 'Delete User',\n    apiPath: '/api/v1/users/:id',\n    method: 'DELETE',\n    module: 'USERS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T07:00:56.274Z',\n    updatedAt: '2023-06-15T07:00:56.274Z',\n    __v: 0,\n  },\n  {\n    _id: '648ab750fa16b294212e404c',\n    name: 'Upload Single File',\n    apiPath: '/api/v1/files/upload',\n    method: 'POST',\n    module: 'FILES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T07:01:36.923Z',\n    updatedAt: '2023-06-15T07:01:36.923Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad488dafdb9754f40b846',\n    name: 'Create a Job',\n    apiPath: '/api/v1/jobs',\n    method: 'POST',\n    module: 'JOBS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:06:16.508Z',\n    updatedAt: '2023-06-15T09:06:16.508Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad499dafdb9754f40b84b',\n    name: 'Get a job by id',\n    apiPath: '/api/v1/jobs/:id',\n    method: 'GET',\n    module: 'JOBS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:06:33.697Z',\n    updatedAt: '2023-06-15T09:06:33.697Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad4a6dafdb9754f40b850',\n    name: 'Update a Job',\n    apiPath: '/api/v1/jobs/:id',\n    method: 'PATCH',\n    module: 'JOBS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:06:46.085Z',\n    updatedAt: '2023-06-15T09:06:46.085Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad4ccdafdb9754f40b859',\n    name: 'Get Job with paginate',\n    apiPath: '/api/v1/jobs',\n    method: 'GET',\n    module: 'JOBS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:07:24.175Z',\n    updatedAt: '2023-06-15T09:07:24.175Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad4d9dafdb9754f40b85e',\n    name: 'Delete a Job',\n    apiPath: '/api/v1/jobs/:id',\n    method: 'DELETE',\n    module: 'JOBS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:07:37.896Z',\n    updatedAt: '2023-06-15T09:07:37.896Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad4fedafdb9754f40b863',\n    name: 'Create a Resume',\n    apiPath: '/api/v1/resumes',\n    method: 'POST',\n    module: 'RESUMES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:08:14.659Z',\n    updatedAt: '2023-06-15T09:08:14.659Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad511dafdb9754f40b868',\n    name: 'Fetch resume with paginate',\n    apiPath: '/api/v1/resumes',\n    method: 'GET',\n    module: 'RESUMES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:08:33.395Z',\n    updatedAt: '2023-06-15T09:08:33.395Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad522dafdb9754f40b86d',\n    name: 'Get resume by id',\n    apiPath: '/api/v1/resumes/:id',\n    method: 'GET',\n    module: 'RESUMES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:08:50.801Z',\n    updatedAt: '2023-06-15T09:08:50.801Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad53bdafdb9754f40b872',\n    name: 'Delete a resume',\n    apiPath: '/api/v1/resumes/:id',\n    method: 'DELETE',\n    module: 'RESUMES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:09:15.785Z',\n    updatedAt: '2023-06-15T09:09:15.785Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad555dafdb9754f40b877',\n    name: 'Update resume status',\n    apiPath: '/api/v1/resumes/:id',\n    method: 'PATCH',\n    module: 'RESUMES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:09:41.694Z',\n    updatedAt: '2023-06-15T09:09:41.694Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad56ddafdb9754f40b87c',\n    name: 'Fetch resumes by user',\n    apiPath: '/api/v1/resumes/by-user',\n    method: 'POST',\n    module: 'RESUMES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:10:05.961Z',\n    updatedAt: '2023-06-15T09:10:05.961Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad59adafdb9754f40b881',\n    name: 'Create a permission',\n    apiPath: '/api/v1/permissions',\n    method: 'POST',\n    module: 'PERMISSIONS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:10:50.946Z',\n    updatedAt: '2023-06-15T09:10:50.946Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad5aedafdb9754f40b886',\n    name: 'Fetch Permission with paginate',\n    apiPath: '/api/v1/permissions',\n    method: 'GET',\n    module: 'PERMISSIONS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:11:10.914Z',\n    updatedAt: '2023-06-15T09:11:10.914Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad5c5dafdb9754f40b88b',\n    name: 'Fetch permission by id',\n    apiPath: '/api/v1/permissions/:id',\n    method: 'GET',\n    module: 'PERMISSIONS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:11:33.234Z',\n    updatedAt: '2023-06-15T09:11:33.234Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad5d4dafdb9754f40b890',\n    name: 'Update a permission',\n    apiPath: '/api/v1/permissions/:id',\n    method: 'PATCH',\n    module: 'PERMISSIONS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:11:48.081Z',\n    updatedAt: '2023-06-15T09:11:48.081Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad5ebdafdb9754f40b895',\n    name: 'Delete a permission',\n    apiPath: '/api/v1/permissions/:id',\n    method: 'DELETE',\n    module: 'PERMISSIONS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:12:11.323Z',\n    updatedAt: '2023-06-15T09:12:11.323Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad613dafdb9754f40b89a',\n    name: 'Create Role',\n    apiPath: '/api/v1/roles',\n    method: 'POST',\n    module: 'ROLES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:12:51.974Z',\n    updatedAt: '2023-06-15T09:12:51.974Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad622dafdb9754f40b89f',\n    name: 'Fetch roles with paginate',\n    apiPath: '/api/v1/roles',\n    method: 'GET',\n    module: 'ROLES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:13:06.618Z',\n    updatedAt: '2023-06-15T09:13:06.618Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad630dafdb9754f40b8a6',\n    name: 'Fetch role by id',\n    apiPath: '/api/v1/roles/:id',\n    method: 'GET',\n    module: 'ROLES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:13:20.853Z',\n    updatedAt: '2023-06-15T09:13:20.853Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad640dafdb9754f40b8ab',\n    name: 'Update Role',\n    apiPath: '/api/v1/roles/:id',\n    method: 'PATCH',\n    module: 'ROLES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:13:36.836Z',\n    updatedAt: '2023-06-15T09:13:36.836Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad650dafdb9754f40b8b0',\n    name: 'Delete a Role',\n    apiPath: '/api/v1/roles/:id',\n    method: 'DELETE',\n    module: 'ROLES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'hoidanit@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:13:52.798Z',\n    updatedAt: '2023-06-15T09:13:52.798Z',\n    __v: 0,\n  },\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        USER_ROLE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'NORMAL_USER'\n                    \n                \n\n\n        \n    \n\n    src/companies/schema/company.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CompanySchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Company)\n                    \n                \n\n\n        \n    \n\n    src/decorator/customize.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IS_PUBLIC_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'isPublic'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        IS_PUBLIC_PERMISSION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'isPublicPermission'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(IS_PUBLIC_KEY, true)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        RESPONSE_MESSAGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'response_message'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ResponseMessage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (message: string) =>\n  SetMetadata(RESPONSE_MESSAGE, message)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SkipCheckPermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () =>\n  SetMetadata(IS_PUBLIC_PERMISSION, true)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        User\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: unknown, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest();\n    return request.user;\n  },\n)\n                    \n                \n\n\n        \n    \n\n    src/jobs/schemas/job.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        JobSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Job)\n                    \n                \n\n\n        \n    \n\n    src/auth/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        jwtConstants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  secret:\n    'DO NOT USE THIS VALUE. INSTEAD, CREATE A COMPLEX SECRET AND KEEP IT SAFE OUTSIDE OF THE SOURCE CODE.',\n}\n                    \n                \n\n\n        \n    \n\n    src/permissions/schema/permission.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PermissionSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Permission)\n                    \n                \n\n\n        \n    \n\n    src/resumes/schemas/resume.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ResumeSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Resume)\n                    \n                \n\n\n        \n    \n\n    src/roles/schemas/role.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RoleSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Role)\n                    \n                \n\n\n        \n    \n\n    src/shared/constants/status.enum.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        STATUS_RESUMES\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  PENDING: 'PENDING',\n  REVIEWING: 'REVIEWING',\n  REJECTED: 'REJECTED',\n  APPROVE: 'APPROVE',\n}\n                    \n                \n\n\n        \n    \n\n    src/subscribers/schemas/subscriber.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SubscriberSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Subscriber)\n                    \n                \n\n\n        \n    \n\n    src/users/schemas/user.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(User)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
